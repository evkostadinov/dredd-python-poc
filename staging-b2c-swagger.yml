---
swagger: '2.0'
info:
  title: BWell Platform API
  description: BWell Platform API
  contact:
    email: devops+support@icanbwell.com
  version: v1.1
host: staging-api-admin.icanbwell.com
schemes:
- https
basePath: "/v1.1/api"
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    in: header
    description: 'API token generated from login API. Eg: Token 982643bdab3a8110b71066ea2a12129009a2d764'
security:
- api_key: []
paths:
  "/account/address-validation/":
    post:
      operationId: account_address-validation_create
      description: |-
        API to validate the address during registration
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UnRegisteredMemberAddressValidation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/UnRegisteredMemberAddressValidation"
      tags:
      - account
    parameters: []
  "/account/admin-login/":
    post:
      operationId: account_admin-login_create
      description: |-
        API to login a admin user
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AdminAuthentication"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AdminAuthentication"
      tags:
      - account
    parameters: []
  "/account/admin-logout/":
    get:
      operationId: account_admin-logout_list
      description: |-
        API to logout admin user from the system
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - account
    parameters: []
  "/account/admin/password-reset-confirm-user/":
    post:
      operationId: account_admin_password-reset-confirm-user_create
      description: |-
        API to match reset Token and UID (from Forgot password flow - reset email) with Admin Portal User
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PasswordResetUser"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PasswordResetUser"
      tags:
      - account
    parameters: []
  "/account/admin/password-reset-confirm/":
    post:
      operationId: account_admin_password-reset-confirm_create
      summary: API to update password through forgot password flow for Admin Portal
        User
      description: |-
        Matches reset token and uid (from Forgot password mail) with User.
        If matched, sets password to new_password1 if both new_password1 and new_password2 match
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/BasePasswordResetConfirm"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/BasePasswordResetConfirm"
      tags:
      - account
    parameters: []
  "/account/admin/reset-forget-password/":
    post:
      operationId: account_admin_reset-forget-password_create
      summary: API to generate password reset token and send reset email for Admin
        Portal users for Forgot password flow.
      description: |-
        Sends an email with a link of the form /reset-password/?{{uid}}&{{token}}/
        The UID and Token form inputs for 'admin_password_reset_confirm_user' and 'admin_password_reset_confirm' APIs.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  "/account/anonymous-settings/":
    get:
      operationId: account_anonymous-settings_list
      description: |-
        API to fetch dynamic app settings for anonymous only access
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/BaseDynamicAppSettings"
      tags:
      - account
    parameters: []
  "/account/apply-code/":
    put:
      operationId: account_apply-code_update
      description: |-
        API to verify registration code and update objects
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - account
    parameters: []
  "/account/bwelluser-email/add/":
    put:
      operationId: account_bwelluser-email_add_update
      description: |-
        API to update email of a BWellUser
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/EmailValidation"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/EmailValidation"
      tags:
      - account
    parameters: []
  "/account/change-language/":
    put:
      operationId: account_change-language_update
      description: |-
        API to change language of a Member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberLanguageChange"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberLanguageChange"
      tags:
      - account
    parameters: []
  "/account/delegate-access/":
    post:
      operationId: account_delegate-access_create
      description: API to validate delegation token and uid from link sent in account
        access management notification, and delegate access to parent till next birthday
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/DelegateAccessToParent"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/DelegateAccessToParent"
      tags:
      - account
    parameters: []
  "/account/devices/add/":
    post:
      operationId: account_devices_add_create
      description: |-
        API to register a new user-device
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UserDevice"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/UserDevice"
      tags:
      - account
    parameters: []
  "/account/find-active-user/":
    get:
      operationId: account_find-active-user_list
      description: |-
        API to find active user for email
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Email"
      tags:
      - account
    parameters: []
  "/account/gender-choices/":
    get:
      operationId: account_gender-choices_list
      description: |-
        Gender choices list Api
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GenderChoices"
      tags:
      - account
    parameters: []
  "/account/internal-notification-count/":
    get:
      operationId: account_internal-notification-count_read
      description: |-
        API to get internal notification count and update last read notification time
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/InternalNotificationCount"
      tags:
      - account
    put:
      operationId: account_internal-notification-count_update
      description: |-
        API to get internal notification count and update last read notification time
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/InternalNotificationCount"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/InternalNotificationCount"
      tags:
      - account
    parameters: []
  "/account/internal/user/{username}/":
    get:
      operationId: account_internal_user_read
      description: |-
        Internal API used by clients to fetch the email of a User from the username
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/InternalUser"
      tags:
      - account
    parameters:
    - name: username
      in: path
      required: true
      type: string
  "/account/invite-reminder/":
    post:
      operationId: account_invite-reminder_create
      description: API request to send out notification to child user
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  "/account/locked-email/add/":
    post:
      operationId: account_locked-email_add_create
      description: |-
        API to add email
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/LockedEmailAdd"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/LockedEmailAdd"
      tags:
      - account
    parameters: []
  "/account/locked-email/delete/":
    post:
      operationId: account_locked-email_delete_create
      description: |-
        API to delete entry from LockedEmail
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/Email"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/Email"
      tags:
      - account
    parameters: []
  "/account/locked-email/match/":
    get:
      operationId: account_locked-email_match_list
      description: |-
        API to match email
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Email"
      tags:
      - account
    parameters: []
  "/account/locked-email/match/username/":
    get:
      operationId: account_locked-email_match_username_list
      description: |-
        Internal API to fetch encrypted locked email for given username
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/BaseUsername"
      tags:
      - account
    parameters: []
  "/account/locked-email/update/":
    put:
      operationId: account_locked-email_update_update
      description: |-
        API to update email in Locked Email table
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/LockedEmailUpdate"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/LockedEmailUpdate"
      tags:
      - account
    parameters: []
  "/account/login/":
    post:
      operationId: account_login_create
      description: |-
        API to login a Member user (validate username and password).
        If 2FA is enabled, it generates uid and token to be used as validation for two-factor-auth login;
        sends SMS with TOTP (if SMS based 2FA is enabled)
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberAuthentication"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberAuthentication"
      tags:
      - account
    parameters: []
  "/account/login/jwt/":
    post:
      operationId: account_login_jwt_create
      description: Member JWT login view
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberJWTAuthentication"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberJWTAuthentication"
      tags:
      - account
    parameters: []
  "/account/login/two-factor-auth/":
    post:
      operationId: account_login_two-factor-auth_create
      description: |-
        API to login member user through 2nd step of 2FA
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberTwoFactorAuthenticationValidation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberTwoFactorAuthenticationValidation"
      tags:
      - account
    parameters: []
  "/account/logout/":
    get:
      operationId: account_logout_list
      description: |-
        API to logout member from the system
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - account
    parameters: []
  "/account/manage-request-reminder/":
    post:
      operationId: account_manage-request-reminder_create
      description: API request to send out notification to child user
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  "/account/member-notification-settings/":
    get:
      operationId: account_member-notification-settings_list
      description: |-
        API to get Notification Settings for current member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/NotificationDeliveryType"
      tags:
      - account
    post:
      operationId: account_member-notification-settings_create
      description: |-
        API to get Notification Settings for current member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/NotificationDeliveryType"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/NotificationDeliveryType"
      tags:
      - account
    parameters: []
  "/account/member-notification-settings/{notification_type_user_preference_id}/update/":
    put:
      operationId: account_member-notification-settings_update_update
      description: |-
        API to update Notification Settings for member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UpdateNotificationTypeUserPreference"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/UpdateNotificationTypeUserPreference"
      tags:
      - account
    parameters:
    - name: notification_type_user_preference_id
      in: path
      required: true
      type: string
  "/account/member-settings/":
    get:
      operationId: account_member-settings_list
      description: |-
        API to fetch dynamic settings for logged-in member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/DynamicAppSettings"
      tags:
      - account
    parameters: []
  "/account/member/verify-code/":
    post:
      operationId: account_member_verify-code_create
      description: |-
        Check code exists for some client and unregistered user's first_name, last_name and dob exists in User table
        and return the Member detail OR
        Check code exists in family member invite table
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/VerifyMemberRegistrationCode"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/VerifyMemberRegistrationCode"
      tags:
      - account
    parameters: []
  "/account/onboarding/accept-tos/":
    post:
      operationId: account_onboarding_accept-tos_create
      description: |-
        API Used to update that a user has accepted terms of service.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  "/account/onboarding/first-page-validate/":
    post:
      operationId: account_onboarding_first-page-validate_create
      description: API to validate first page data during onboarding
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/OnboardingFirstPageValidation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/OnboardingFirstPageValidation"
      tags:
      - account
    parameters: []
  "/account/onboarding/validate-registration-code/":
    post:
      operationId: account_onboarding_validate-registration-code_create
      description: |-
        Validate Email, Phone number and registration code
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/OnboardingRegistrationCodeValidation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/OnboardingRegistrationCodeValidation"
      tags:
      - account
    parameters: []
  "/account/password/reset/":
    post:
      operationId: account_password_reset_create
      summary: API to generate password reset token and send reset email for Member
        for Forgot password flow.
      description: |-
        Sends an email with a link of the form /reset/{{uid}}/{{token}}/
        The UID and Token form inputs for /api/account/password/reset/confirm/user/ and /api/account/password/reset/confirm/ APIs.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PatientPasswordResetEmail"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PatientPasswordResetEmail"
      tags:
      - account
    parameters: []
  "/account/password/reset/confirm/":
    post:
      operationId: account_password_reset_confirm_create
      summary: API to update password through forgot password flow for member
      description: |-
        Matches reset token and uid (from Forgot password mail) with Member.
        If matched, sets password to new_password1 if both new_password1 and new_password2 match
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PasswordResetConfirmPatient"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PasswordResetConfirmPatient"
      tags:
      - account
    parameters: []
  "/account/password/reset/confirm/user/":
    post:
      operationId: account_password_reset_confirm_user_create
      description: |-
        API to match reset Token and UID (from Forgot password flow - reset email) with Member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PasswordResetPatient"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PasswordResetPatient"
      tags:
      - account
    parameters: []
  "/account/register-member/":
    post:
      operationId: account_register-member_create
      description: |-
        API to register a new member
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  "/account/register/":
    post:
      operationId: account_register_create
      description: |-
        Member SignUp API
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  "/account/register/post-process/":
    post:
      operationId: account_register_post-process_create
      description: |-
        View to be called after user registration to do post-register operations.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  "/account/reset-admin-password/":
    post:
      operationId: account_reset-admin-password_create
      description: |-
        Internal password Reset view for admin
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UserInternalPasswordReset"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/UserInternalPasswordReset"
      tags:
      - account
    parameters: []
  "/account/reset-password/":
    post:
      operationId: account_reset-password_create
      description: |-
        Internal password Reset view for patient
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UserInternalPasswordReset"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/UserInternalPasswordReset"
      tags:
      - account
    parameters: []
  "/account/rollback-demo-user/":
    post:
      operationId: account_rollback-demo-user_create
      description: Overridden to call rollback task in delay
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  "/account/send-support-email/":
    post:
      operationId: account_send-support-email_create
      description: Api to send the email for the CX team regarding the satisfaction
        survey.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  "/account/send-verification-email/":
    post:
      operationId: account_send-verification-email_create
      description: |-
        API used to send account verification email
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/Email"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/Email"
      tags:
      - account
    parameters: []
  "/account/set-password/":
    post:
      operationId: account_set-password_create
      description: API to validate delegation token and uid from link sent in account
        access management notification, and set account password for minor
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SetMinorPassword"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SetMinorPassword"
      tags:
      - account
    parameters: []
  "/account/ssn-verification/":
    post:
      operationId: account_ssn-verification_create
      description: |-
        API to validate last digits of ssn code during registration process
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UnRegisteredMemberSSNVerification"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/UnRegisteredMemberSSNVerification"
      tags:
      - account
    parameters: []
  "/account/terms/":
    post:
      operationId: account_terms_create
      description: |-
        API to mark that user has accepted terms and conditions.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UserTerms"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/UserTerms"
      tags:
      - account
    parameters: []
  "/account/touch-id/add/":
    post:
      operationId: account_touch-id_add_create
      description: |-
        API to create user's touch_id
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UserTouchId"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/UserTouchId"
      tags:
      - account
    parameters: []
  "/account/touch-id/delete/":
    delete:
      operationId: account_touch-id_delete_delete
      description: |-
        API to delete user's touch_id
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - account
    parameters: []
  "/account/two-factor-auth/":
    get:
      operationId: account_two-factor-auth_list
      description: |-
        API to get status of two factor authentication for a member user's account
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberTwoFactorStatus"
      tags:
      - account
    parameters: []
  "/account/two-factor-auth/back-up-codes/":
    get:
      operationId: account_two-factor-auth_back-up-codes_list
      description: |-
        API to get backup codes for 2 factor authentication
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberTwoFactorBackupCodes"
      tags:
      - account
    parameters: []
  "/account/two-factor-auth/disable/":
    post:
      operationId: account_two-factor-auth_disable_create
      description: |-
        API to disable two-factor authentication for member user
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberTwoFactorDisableStepOne"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberTwoFactorDisableStepOne"
      tags:
      - account
    parameters: []
  "/account/two-factor-auth/disable/verify/":
    post:
      operationId: account_two-factor-auth_disable_verify_create
      description: |-
        API to verify the otp and disable two-factor authentication for member user
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberTwoFactorDisableStepTwo"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberTwoFactorDisableStepTwo"
      tags:
      - account
    parameters: []
  "/account/two-factor-auth/enable/":
    post:
      operationId: account_two-factor-auth_enable_create
      description: |-
        API to initiate two-factor authentication - google authenticator - for member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberTwoFactorEnableStepOne"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberTwoFactorEnableStepOne"
      tags:
      - account
    parameters: []
  "/account/two-factor-auth/enable/verify/":
    post:
      operationId: account_two-factor-auth_enable_verify_create
      description: |-
        API to validate and enable two-factor authentication for member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberTwoFactorEnableStepTwo"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberTwoFactorEnableStepTwo"
      tags:
      - account
    parameters: []
  "/account/two-factor-authentication-registration/":
    post:
      operationId: account_two-factor-authentication-registration_create
      description: |-
        API to validate 2FA code during registration process
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/TwoFactorAuthenticationRegistration"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/TwoFactorAuthenticationRegistration"
      tags:
      - account
    parameters: []
  "/account/two-factor-generation-registration/":
    post:
      operationId: account_two-factor-generation-registration_create
      description: |-
        API to request 2FA code during registration process
        Generates uid and token to be used as validation for two-factor registration
        Sends SMS or Email with TOTP
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/TwoFactorGenerationRegistration"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/TwoFactorGenerationRegistration"
      tags:
      - account
    parameters: []
  "/account/validate-common-password/":
    post:
      operationId: account_validate-common-password_create
      description: API to validate secure password
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/CommonPassword"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/CommonPassword"
      tags:
      - account
    parameters: []
  "/account/validate-email/":
    post:
      operationId: account_validate-email_create
      description: API to validate that the email provided by the user during sign-up
        is already registered in the system or not.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/EmailValidation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/EmailValidation"
      tags:
      - account
    parameters: []
  "/account/validate-password/":
    post:
      operationId: account_validate-password_create
      description: |-
        API for validating user's password to enable his touch ID
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PasswordValidation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PasswordValidation"
      tags:
      - account
    parameters: []
  "/account/validate-phone/":
    post:
      operationId: account_validate-phone_create
      description: API to validate that the email provided by the user during sign-up
        is already registered in the system or not.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UserPhoneValidation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/UserPhoneValidation"
      tags:
      - account
    parameters: []
  "/account/verify-code/":
    post:
      operationId: account_verify-code_create
      description: |-
        Check code exists for some client and unregistered user's first_name, last_name and dob exists in User table
        and return the Member detail OR
        Check code exists in family member invite table
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/VerifyAnonymousRegistrationCode"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/VerifyAnonymousRegistrationCode"
      tags:
      - account
    parameters: []
  "/account/verify-minor/":
    post:
      operationId: account_verify-minor_create
      description: |-
        API to validate delegation token and uid from link sent in account access management notification
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/VerifyMinorUser"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/VerifyMinorUser"
      tags:
      - account
    parameters: []
  "/account/verify-signup-allowed/":
    post:
      operationId: account_verify-signup-allowed_create
      description: |-
        Check unregistered user's first_name, last_name, dob. gender and zipcode exists and return the
        Member detail OR
        Check code exists in family member invite table
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/VerifyMemberSignupAllowed"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/VerifyMemberSignupAllowed"
      tags:
      - account
    parameters: []
  "/apps/health-check/celery/all-tasks/":
    get:
      operationId: apps_health-check_celery_all-tasks_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/celery/calendar/":
    get:
      operationId: apps_health-check_celery_calendar_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/celery/file-processor/":
    get:
      operationId: apps_health-check_celery_file-processor_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/celery/mychart-data/":
    get:
      operationId: apps_health-check_celery_mychart-data_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/celery/mychart/":
    get:
      operationId: apps_health-check_celery_mychart_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/celery/primary/":
    get:
      operationId: apps_health-check_celery_primary_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/celery/priority/":
    get:
      operationId: apps_health-check_celery_priority_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/celery/special/":
    get:
      operationId: apps_health-check_celery_special_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/elastic-search/":
    get:
      operationId: apps_health-check_elastic-search_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/mysql/":
    get:
      operationId: apps_health-check_mysql_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/rabbitmq/":
    get:
      operationId: apps_health-check_rabbitmq_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/apps/health-check/redis/":
    get:
      operationId: apps_health-check_redis_list
      description: Gets response based on service status. 200 if running, 503 if not.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - apps
    parameters: []
  "/calendar/event-details-choices/":
    get:
      operationId: calendar_event-details-choices_list
      description: |-
        API view to get Alert choices list
        ---
         GET:
            type:
                choices:
                    type: array
                    required: true
                    items:
                        $ref: [{"id":"1", "display_text":"No reminder"}]
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/EventDetailsChoices"
      tags:
      - calendar
    parameters: []
  "/calendar/event-types/":
    get:
      operationId: calendar_event-types_list
      description: |-
        API to get event id and event type data mapping
        ---
         GET:
             type:
                 event_type:
                     type: dict
                     required: True
                     items:
                         $ref: {"name": "", "icon": ""}
             parameters:
                 - name: Authorization
                   description: User's authentication token
                   type: string
                   paramType: header
                   required: true
             responseMessages:
                 - code: 401
                   message: Invalid token
                 - code: 403
                   message: You do not have permission to perform this action
                 - code: 420
                   message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - calendar
    parameters: []
  "/calendar/event/create/":
    post:
      operationId: calendar_event_create_create
      description: |-
        Api to create single and recurring events on user personal health calendar
        ---
         POST:
             omit_serializer: true
             parameters:
                 - name: Authorization
                   description: User's authentication token
                   type: string
                   paramType: header
                   required: true
                 - name: is_recurring
                   description: Event is recurring or not
                   type: Boolean
                   paramType: form
                   required: true
                 - name: start_date
                   description: Start date of event
                   type: Date
                   paramType: form
                   required: true
                 - name: end_date
                   description: End date of event
                   type: Date
                   paramType: form
                   required: true
                 - name: event_type
                   description: Type of event(ID of Object of class EventType)
                   type: Date
                   paramType: form
                   required: true
                 - name: status
                   description: Status of event
                   type: Integer
                   paramType: form
                   required: true
                 - name: all_day
                   description: Event is all day or not
                   type: Boolean
                   paramType: form
                   required: true
                 - name: frequency
                   description: Event repeating frequency
                   type: integer
                   paramType: form
                   required: true (Required if repeat=True)
                 - name: interval
                   description: Interval after which event repeats
                   type: integer
                   paramType: form
                   required: true (Required if repeat=True)
                 - name: repeat_days
                   description: Days on which event repeats
                   type: List
                   paramType: form
                   required: false
                 - name: notes
                   description: Notes of event
                   type: Text
                   paramType: form
                   required: false
                 - name: dtend
                   description: End date of recurring event
                   type: Datetime
                   paramType: form
                   required: false
                 - name: start_time
                   description: Start time of event
                   type: Time
                   paramType: form
                   required: false
                 - name: end_time
                   description: End time of event
                   type: Time
                   paramType: form
                   required: false
                 - name: location
                   description: Location of event
                   type: Text
                   paramType: form
                   required: false
                 - name: summary
                   description: Title of event
                   type: String
                   paramType: form
                   required: false
                 - name: alert_time_frame
                   description: Alert time of event
                   type: Integer
                   paramType: form
                   required: false
             responseMessages:
                 - code: 401
                   message: Invalid token
                 - code: 403
                   message: You do not have permission to perform this action
                 - code: 420
                   message: Token expired
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - calendar
    parameters: []
  "/calendar/event/list/":
    get:
      operationId: calendar_event_list_list
      description: |-
        Api to get list of events detail
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - calendar
    parameters: []
  "/calendar/event/list/months/":
    get:
      operationId: calendar_event_list_months_list
      description: |-
        Api to get list of dates in which event exists
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - calendar
    parameters: []
  "/calendar/get-external-calendar-url/":
    get:
      operationId: calendar_get-external-calendar-url_list
      description: |-
        API for preparing calendar url for external services
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - calendar
    parameters: []
  "/calendar/inconsistent-device-events/{device_calendar_id}/":
    get:
      operationId: calendar_inconsistent-device-events_read
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/DeviceEventSyncGet"
      tags:
      - calendar
    parameters:
    - name: device_calendar_id
      in: path
      required: true
      type: string
  "/calendar/recurring-event/{id}/":
    get:
      operationId: calendar_recurring-event_read
      description: |-
        API to retrieve recurring event details
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/RecurringEventRetrieve"
      tags:
      - calendar
    delete:
      operationId: calendar_recurring-event_delete
      description: |-
        API to retrieve recurring event details
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - calendar
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/calendar/recurring-event/{id}/update/":
    put:
      operationId: calendar_recurring-event_update_update
      description: |-
        API to update recurring event for event attendee or creator
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - calendar
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/calendar/recurring-event/{recurring_event_id}/update/status/":
    put:
      operationId: calendar_recurring-event_update_status_update
      description: |-
        API to update recursive event
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UpdateRecursiveEventStatus"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/UpdateRecursiveEventStatus"
      tags:
      - calendar
    parameters:
    - name: recurring_event_id
      in: path
      required: true
      type: string
  "/calendar/single-event/{id}/":
    get:
      operationId: calendar_single-event_read
      description: |-
        API to get single event details
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SingleEventRetrieve"
      tags:
      - calendar
    delete:
      operationId: calendar_single-event_delete
      description: |-
        API to get single event details
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - calendar
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/calendar/single-event/{id}/update/":
    put:
      operationId: calendar_single-event_update_update
      description: |-
        API to update single event for event attendee or creator
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - calendar
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/calendar/single-event/{single_event_id}/update/status/":
    put:
      operationId: calendar_single-event_update_status_update
      description: |-
        API to update single event
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UpdateSingleEventStatus"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/UpdateSingleEventStatus"
      tags:
      - calendar
    parameters:
    - name: single_event_id
      in: path
      required: true
      type: string
  "/calendar/sync-calendar/":
    get:
      operationId: calendar_sync-calendar_read
      description: |-
        Api to get and update value of the sync of user calendar
        ---
         GET:
            type:
                sync:
                    type: char
                    required: true
                    items:
                        $ref: {"sync":"true"}
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
         PUT:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SyncWithDeviceCalendar"
      tags:
      - calendar
    put:
      operationId: calendar_sync-calendar_update
      description: |-
        Api to get and update value of the sync of user calendar
        ---
         GET:
            type:
                sync:
                    type: char
                    required: true
                    items:
                        $ref: {"sync":"true"}
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
         PUT:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SyncWithDeviceCalendar"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SyncWithDeviceCalendar"
      tags:
      - calendar
    parameters: []
  "/calendar/timezone/":
    get:
      operationId: calendar_timezone_read
      description: |-
        API view to get TimeZone choices list and update timezone
        ---
         GET:
             type:
                 choices:
                     type: array
                     required: true
                     items:
                         $ref: {"name":"Central Standrd Time(CST)", "id":"America/Chicago"}
             parameters:
                 - name: Authorization
                   description: User's authentication token
                   type: string
                   paramType: header
                   required: true
             responseMessages:
                 - code: 401
                   message: Invalid token
                 - code: 403
                   message: You do not have permission to perform this action
                 - code: 420
                   message: Token expired
         PUT:
             omit_serializer: true
             type:
                 calendar_timezone:
                     required: True
                     type: char
             parameters:
                 - name: Authorization
                   description: User's authentication token
                   type: string
                   paramType: header
                   required: true
                 - name: data
                   type: dict
                   paramType: body
                   required: True
             responseMessages:
                 - code: 401
                   message: Invalid token
                 - code: 403
                   message: You do not have permission to perform this action
                 - code: 420
                   message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/Timezone"
      tags:
      - calendar
    put:
      operationId: calendar_timezone_update
      description: |-
        API view to get TimeZone choices list and update timezone
        ---
         GET:
             type:
                 choices:
                     type: array
                     required: true
                     items:
                         $ref: {"name":"Central Standrd Time(CST)", "id":"America/Chicago"}
             parameters:
                 - name: Authorization
                   description: User's authentication token
                   type: string
                   paramType: header
                   required: true
             responseMessages:
                 - code: 401
                   message: Invalid token
                 - code: 403
                   message: You do not have permission to perform this action
                 - code: 420
                   message: Token expired
         PUT:
             omit_serializer: true
             type:
                 calendar_timezone:
                     required: True
                     type: char
             parameters:
                 - name: Authorization
                   description: User's authentication token
                   type: string
                   paramType: header
                   required: true
                 - name: data
                   type: dict
                   paramType: body
                   required: True
             responseMessages:
                 - code: 401
                   message: Invalid token
                 - code: 403
                   message: You do not have permission to perform this action
                 - code: 420
                   message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/Timezone"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/Timezone"
      tags:
      - calendar
    parameters: []
  "/calendar/unregistered-family-members/":
    get:
      operationId: calendar_unregistered-family-members_list
      description: Return list of distinct patient names stored in member's claims
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - calendar
    parameters: []
  "/calendar/unsynced-events/{device_calendar_id}/":
    get:
      operationId: calendar_unsynced-events_read
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - calendar
    parameters:
    - name: device_calendar_id
      in: path
      required: true
      type: string
  "/callback/1up/":
    get:
      operationId: callback_1up_list
      description: |-
        API to fetch access token from OneUp api and initiate records fetch.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - callback
    parameters: []
  "/callback/mychart/":
    get:
      operationId: callback_mychart_list
      description: |-
        Callback url at /api/callback/mychart to allow for OAuth2 grant type authorization_code
        Expect query_param code and state, where state is stringified JSON containing auth_token and url to redirect to
        :param request: REQUIRED request.query_params.code and
        request.query_params.state = json.dumps({auth_token: '', url: ''})
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - callback
    parameters: []
  "/challenge-designer/categories/":
    get:
      operationId: challenge-designer_categories_list
      description: |-
        API for getting all categories.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/CategoriesList"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/challenges/":
    get:
      operationId: challenge-designer_challenges_list
      description: |-
        serializer: challenge_designer_serializers.ChallengeListSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid
                - code: 404
                  message: Invalid lookup id
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: name
        in: query
        description: ''
        required: false
        type: string
      - name: title
        in: query
        description: ''
        required: false
        type: string
      - name: challenge_class__id
        in: query
        description: ''
        required: false
        type: number
      - name: status
        in: query
        description: ''
        required: false
        type: string
      - name: displayed_on
        in: query
        description: ''
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/ChallengeDetail"
      tags:
      - challenge-designer
    post:
      operationId: challenge-designer_challenges_create
      description: |-
        API for getting all challenges eligible for Challenge Designer
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ChallengeDetail"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ChallengeDetail"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/challenges/challenge-meta-data/":
    get:
      operationId: challenge-designer_challenges_challenge_meta_data
      description: |-
        Get the list of all challenge types and classes
        :param request: Request object.
        :return: list of challenge types and classes
      parameters:
      - name: name
        in: query
        description: ''
        required: false
        type: string
      - name: title
        in: query
        description: ''
        required: false
        type: string
      - name: challenge_class__id
        in: query
        description: ''
        required: false
        type: number
      - name: status
        in: query
        description: ''
        required: false
        type: string
      - name: displayed_on
        in: query
        description: ''
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/ChallengeDetail"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/challenges/contact-support/":
    post:
      operationId: challenge-designer_challenges_contact_support
      description: |-
        Send email to support team with a custom message for a challenge.
        :param request: Request object.
        :return: Empty Response
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ChallengeDetail"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ChallengeDetail"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/challenges/download/":
    get:
      operationId: challenge-designer_challenges_get_challenges_zip
      description: |-
        API for getting all challenges eligible for Challenge Designer
        ---
      parameters:
      - name: name
        in: query
        description: ''
        required: false
        type: string
      - name: title
        in: query
        description: ''
        required: false
        type: string
      - name: challenge_class__id
        in: query
        description: ''
        required: false
        type: number
      - name: status
        in: query
        description: ''
        required: false
        type: string
      - name: displayed_on
        in: query
        description: ''
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/ChallengeDetail"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/challenges/eligible-members-count/":
    post:
      operationId: challenge-designer_challenges_eligible_members_count
      description: |-
        Get the count of all eligible members for a particular challenge.
        :param request: Request object.
        :return: Count of the eligible members.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ChallengeDetail"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ChallengeDetail"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/challenges/upload/":
    post:
      operationId: challenge-designer_challenges_upload_challenges_zip
      description: |-
        View for handling the upload of challenges data.
        Returns either the success message, or a zip file containing the error_report csv files.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ChallengeDetail"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ChallengeDetail"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/challenges/{unique_id}/":
    get:
      operationId: challenge-designer_challenges_read
      description: |-
        API for getting all challenges eligible for Challenge Designer
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/ChallengeDetail"
      tags:
      - challenge-designer
    put:
      operationId: challenge-designer_challenges_update
      description: |-
        API for getting all challenges eligible for Challenge Designer
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - challenge-designer
    patch:
      operationId: challenge-designer_challenges_partial_update
      description: |-
        API for getting all challenges eligible for Challenge Designer
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - challenge-designer
    parameters:
    - name: unique_id
      in: path
      required: true
      type: string
      format: uuid
  "/challenge-designer/challenges/{unique_id}/clone/":
    post:
      operationId: challenge-designer_challenges_clone_challenge
      description: |-
        Clone a challenge with the given name and status as draft.
        :param request: Request object.
        :param args: Arguments.
        :param kwargs: Keyword Arguments.
        :return: Response containing challenge id of the cloned challenge
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ChallengeDetail"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ChallengeDetail"
      tags:
      - challenge-designer
    parameters:
    - name: unique_id
      in: path
      required: true
      type: string
      format: uuid
  "/challenge-designer/challenges/{unique_id}/update-status/":
    put:
      operationId: challenge-designer_challenges_update_status
      description: |-
        API for getting all challenges eligible for Challenge Designer
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - challenge-designer
    parameters:
    - name: unique_id
      in: path
      required: true
      type: string
      format: uuid
  "/challenge-designer/custom_methods/":
    get:
      operationId: challenge-designer_custom_methods_list
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: title
        in: query
        description: ''
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/CustomSQLMethodDetail"
      tags:
      - challenge-designer
    post:
      operationId: challenge-designer_custom_methods_create
      description: |-
        ViewSet for Fields model.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/CustomSQLMethodDetail"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/CustomSQLMethodDetail"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/custom_methods/{unique_id}/":
    get:
      operationId: challenge-designer_custom_methods_read
      description: |-
        ViewSet for Fields model.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/CustomSQLMethodDetail"
      tags:
      - challenge-designer
    put:
      operationId: challenge-designer_custom_methods_update
      description: |-
        ViewSet for Fields model.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/CustomSQLMethodDetail"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/CustomSQLMethodDetail"
      tags:
      - challenge-designer
    delete:
      operationId: challenge-designer_custom_methods_delete
      description: |-
        ViewSet for Fields model.
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - challenge-designer
    parameters:
    - name: unique_id
      in: path
      required: true
      type: string
      format: uuid
  "/challenge-designer/custom_methods/{unique_id}/search-parameter/":
    get:
      operationId: challenge-designer_custom_methods_get_custom_method_parameter_data
      description: |-
        ViewSet for Fields model.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/CustomSQLMethodDetail"
      tags:
      - challenge-designer
    parameters:
    - name: unique_id
      in: path
      required: true
      type: string
      format: uuid
  "/challenge-designer/fields/":
    get:
      operationId: challenge-designer_fields_list
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/FieldsList"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/fields/{id}/":
    get:
      operationId: challenge-designer_fields_read
      description: |-
        ViewSet for Fields model.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/FieldsList"
      tags:
      - challenge-designer
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/challenge-designer/generic-searchable-field/{field_unique_id}/":
    get:
      operationId: challenge-designer_generic-searchable-field_read
      description: API for getting searchable list for a field
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - challenge-designer
    parameters:
    - name: field_unique_id
      in: path
      required: true
      type: string
  "/challenge-designer/multi-eligibility-edit/":
    get:
      operationId: challenge-designer_multi-eligibility-edit_list
      description: |-
        serializer: challenge_designer_serializers.ChallengeListSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid
                - code: 404
                  message: Invalid lookup id
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired

        update-eligibility:
            serializer: challenge_designer_serializers.MultiUpdateEligibilityEditSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: operator
                  description: And or OR operator which will join the old and new conditions
                  type: string
                  paramType: form
                  required: true
                - name: sql_json
                  description: New condition to be added
                  type: JSON
                  paramType: form
                  required: true
                - name: select_all
                  description: Stores if all the challenges needs to be updated
                  type: Boolean
                  paramType: form
                  required: False
                - name: challenge_ids
                  description: Challenge ids for which eligibility needs to be updated
                  type: List
                  paramType: form
                  required: false
            responseMessages:
                - code: 401
                  message: Invalid
                - code: 404
                  message: Invalid lookup id
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: name
        in: query
        description: ''
        required: false
        type: string
      - name: title
        in: query
        description: ''
        required: false
        type: string
      - name: challenge_class__id
        in: query
        description: ''
        required: false
        type: number
      - name: status
        in: query
        description: ''
        required: false
        type: string
      - name: displayed_on
        in: query
        description: ''
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/MultiEligibilityEdit"
      tags:
      - challenge-designer
    post:
      operationId: challenge-designer_multi-eligibility-edit_create
      description: |-
        API for updating eligibility of multiple challenges
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MultiEligibilityEdit"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MultiEligibilityEdit"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/multi-eligibility-edit/download/":
    get:
      operationId: challenge-designer_multi-eligibility-edit_get_challenges_zip
      description: |-
        Get dump of challenges in a zip file
        :return: Zip file with dump of challenges
      parameters:
      - name: name
        in: query
        description: ''
        required: false
        type: string
      - name: title
        in: query
        description: ''
        required: false
        type: string
      - name: challenge_class__id
        in: query
        description: ''
        required: false
        type: number
      - name: status
        in: query
        description: ''
        required: false
        type: string
      - name: displayed_on
        in: query
        description: ''
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/MultiEligibilityEdit"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/multi-eligibility-edit/eligible-members-query/":
    post:
      operationId: challenge-designer_multi-eligibility-edit_eligible_members_query
      description: |-
        Get the query for the eligible members for a particular challenge.
        :param request: Request object.
        :return: Eligible members query.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MultiEligibilityEdit"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MultiEligibilityEdit"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/multi-eligibility-edit/link-client-challenge/":
    post:
      operationId: challenge-designer_multi-eligibility-edit_link_client_challenge
      description: |-
        API for updating eligibility of multiple challenges
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MultiEligibilityEdit"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MultiEligibilityEdit"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/multi-eligibility-edit/{unique_id}/":
    get:
      operationId: challenge-designer_multi-eligibility-edit_read
      description: |-
        API for updating eligibility of multiple challenges
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MultiEligibilityEdit"
      tags:
      - challenge-designer
    parameters:
    - name: unique_id
      in: path
      required: true
      type: string
      format: uuid
  "/challenge-designer/query-meta-data/":
    get:
      operationId: challenge-designer_query-meta-data_read
      description: API for getting meta data for creating SQL query
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/QueryMetaData"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/sub-queries/":
    get:
      operationId: challenge-designer_sub-queries_list
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: title
        in: query
        description: ''
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/SubQuery"
      tags:
      - challenge-designer
    post:
      operationId: challenge-designer_sub-queries_create
      description: |-
        ViewSet for SubQuery model.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SubQuery"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SubQuery"
      tags:
      - challenge-designer
    parameters: []
  "/challenge-designer/sub-queries/{unique_id}/":
    get:
      operationId: challenge-designer_sub-queries_read
      description: |-
        ViewSet for SubQuery model.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SubQuery"
      tags:
      - challenge-designer
    put:
      operationId: challenge-designer_sub-queries_update
      description: |-
        ViewSet for SubQuery model.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SubQuery"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SubQuery"
      tags:
      - challenge-designer
    delete:
      operationId: challenge-designer_sub-queries_delete
      description: |-
        ViewSet for SubQuery model.
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - challenge-designer
    parameters:
    - name: unique_id
      in: path
      required: true
      type: string
      format: uuid
  "/check-app-version/":
    get:
      operationId: check-app-version_read
      description: |-
        Checks the Mobile App Version and if version is incompatible sends 409
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - check-app-version
    parameters: []
  "/claims/":
    get:
      operationId: claims_list
      description: |-
        API to view details for Claims and Financials for members for the past 12 months
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - claims
    parameters: []
  "/claims/all/":
    get:
      operationId: claims_all_list
      description: |-
        API to view a list of all claims for members
        ---
      parameters:
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/Claim"
      tags:
      - claims
    parameters: []
  "/claims/downward-family-member-choices/":
    get:
      operationId: claims_downward-family-member-choices_list
      description: |-
        API to view a list of valid family members whose data can be seen by family subscriber
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ClaimFamilyMemberTypeChoice"
      tags:
      - claims
    parameters: []
  "/claims/eob-doc/share/":
    post:
      operationId: claims_eob-doc_share_create
      description: |-
        API for creating EOBDocShare object.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - claims
    parameters: []
  "/claims/eob-doc/share/access/":
    post:
      operationId: claims_eob-doc_share_access_create
      description: |-
        API to save information of user who accesses shared eob documents as EOBDocShareAccess objects.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/EOBDocShareAccess"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/EOBDocShareAccess"
      tags:
      - claims
    parameters: []
  "/claims/eob-doc/share/{eob_doc_share_id}/":
    get:
      operationId: claims_eob-doc_share_read
      description: |-
        API for getting details of a particular EOB Document.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/EOBDocShareDetail"
      tags:
      - claims
    parameters:
    - name: eob_doc_share_id
      in: path
      required: true
      type: string
  "/claims/list-paginated/":
    get:
      operationId: claims_list-paginated_list
      description: |-
        API to view a list of all claims with ClaimLines info for members with pagination
        ---
      parameters:
      - name: claim_type
        in: query
        description: ''
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - claims
    parameters: []
  "/claims/list/":
    get:
      operationId: claims_list_list
      description: |-
        API to view a list of all claims with ClaimLines info for members
        ---
      parameters:
      - name: claim_type
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
      tags:
      - claims
    parameters: []
  "/claims/medicare/":
    get:
      operationId: claims_medicare_list
      description: |-
        API view to create token for the medicare and load claims
        ---
         GET:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/OAuthCallback"
      tags:
      - claims
    post:
      operationId: claims_medicare_create
      description: |-
        API view to create token for the medicare and load claims
        ---
         GET:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/OAuthCallback"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/OAuthCallback"
      tags:
      - claims
    parameters: []
  "/claims/oauth-callback/":
    get:
      operationId: claims_oauth-callback_list
      description: |-
        API view to create token for the medicare and load claims
        ---
         GET:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/OAuthCallback"
      tags:
      - claims
    post:
      operationId: claims_oauth-callback_create
      description: |-
        API view to create token for the medicare and load claims
        ---
         GET:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/OAuthCallback"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/OAuthCallback"
      tags:
      - claims
    parameters: []
  "/claims/related-patient_names-choices/":
    get:
      operationId: claims_related-patient_names-choices_list
      description: Return list of distinct patient names stored in member's claims
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - claims
    parameters: []
  "/claims/toggle-sharing-with-company/{claim_id}/":
    post:
      operationId: claims_toggle-sharing-with-company_create
      description: |-
        API to toggle sharing with company of a claim
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - claims
    parameters:
    - name: claim_id
      in: path
      required: true
      type: string
  "/claims/type-choices/":
    get:
      operationId: claims_type-choices_list
      description: |-
        API view to get Claim type choices list
        ---
         GET:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ClaimTypeChoices"
      tags:
      - claims
    parameters: []
  "/clients/app-downloads/":
    get:
      operationId: clients_app-downloads_list
      description: Client API to fetch list of registered members
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_1
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_2
        in: query
        description: ''
        required: false
        type: string
      - name: city
        in: query
        description: ''
        required: false
        type: string
      - name: state
        in: query
        description: ''
        required: false
        type: string
      - name: zipcode
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: is_registered
        in: query
        description: ''
        required: false
        type: string
      - name: client
        in: query
        description: ''
        required: false
        type: string
      - name: user
        in: query
        description: ''
        required: false
        type: string
      - name: member_id
        in: query
        description: ''
        required: false
        type: string
      - name: is_mhd_updated
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber_relation
        in: query
        description: ''
        required: false
        type: string
      - name: ssn
        in: query
        description: ''
        required: false
        type: string
      - name: last_digits_ssn
        in: query
        description: ''
        required: false
        type: string
      - name: height
        in: query
        description: ''
        required: false
        type: number
      - name: weight
        in: query
        description: ''
        required: false
        type: number
      - name: health_quality
        in: query
        description: ''
        required: false
        type: string
      - name: current_points
        in: query
        description: ''
        required: false
        type: number
      - name: marital_status
        in: query
        description: ''
        required: false
        type: string
      - name: last_visit_to_doctor
        in: query
        description: ''
        required: false
        type: string
      - name: latitude
        in: query
        description: ''
        required: false
        type: number
      - name: longitude
        in: query
        description: ''
        required: false
        type: number
      - name: stripe_customer_id
        in: query
        description: ''
        required: false
        type: string
      - name: completed_demo
        in: query
        description: ''
        required: false
        type: string
      - name: onboarding_step_completed
        in: query
        description: ''
        required: false
        type: string
      - name: has_allergies
        in: query
        description: ''
        required: false
        type: string
      - name: no_allergy_source
        in: query
        description: ''
        required: false
        type: string
      - name: has_prescriptions
        in: query
        description: ''
        required: false
        type: string
      - name: wellness_connected_device
        in: query
        description: ''
        required: false
        type: string
      - name: timezone
        in: query
        description: ''
        required: false
        type: string
      - name: last_notification_read_at
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_date
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_token
        in: query
        description: ''
        required: false
        type: string
      - name: claims_last_updated
        in: query
        description: ''
        required: false
        type: string
      - name: registration_status
        in: query
        description: ''
        required: false
        type: string
      - name: new_feature_slider_seen
        in: query
        description: ''
        required: false
        type: string
      - name: has_subscription_family_members
        in: query
        description: ''
        required: false
        type: string
      - name: high_risk_sleep_apnea
        in: query
        description: ''
        required: false
        type: string
      - name: search_page_intro_seen
        in: query
        description: ''
        required: false
        type: string
      - name: is_mrc_walkthrough_disabled
        in: query
        description: ''
        required: false
        type: string
      - name: department_name
        in: query
        description: ''
        required: false
        type: string
      - name: last_challenge_completion_call
        in: query
        description: ''
        required: false
        type: string
      - name: member_external_id
        in: query
        description: ''
        required: false
        type: string
      - name: employee_id
        in: query
        description: ''
        required: false
        type: string
      - name: termination_date
        in: query
        description: ''
        required: false
        type: string
      - name: termination_reason
        in: query
        description: ''
        required: false
        type: string
      - name: employment_status
        in: query
        description: ''
        required: false
        type: string
      - name: hire_date
        in: query
        description: ''
        required: false
        type: string
      - name: employer_location
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_employee_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_employee
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_eligibility_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_historical
        in: query
        description: ''
        required: false
        type: string
      - name: multiple_birth_order
        in: query
        description: ''
        required: false
        type: number
      - name: has_fwp
        in: query
        description: ''
        required: false
        type: string
      - name: in_roster_file
        in: query
        description: ''
        required: false
        type: string
      - name: registration_datetime
        in: query
        description: ''
        required: false
        type: string
      - name: is_data_shared_with_client
        in: query
        description: ''
        required: false
        type: string
      - name: is_first_onboarding_todo_completed
        in: query
        description: ''
        required: false
        type: string
      - name: accepted_client_terms
        in: query
        description: ''
        required: false
        type: string
      - name: member_ids
        in: query
        description: ''
        required: false
        type: string
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/MemberId"
      tags:
      - clients
    parameters: []
  "/clients/client-features/":
    get:
      operationId: clients_client-features_read
      description: Returns feature set for a given client
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - clients
    parameters: []
  "/clients/client-member-details/":
    get:
      operationId: clients_client-member-details_read
      description: |-
        API to get member verified details and update it
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/ClientMemberDetail"
      tags:
      - clients
    post:
      operationId: clients_client-member-details_create
      description: |-
        API to get member verified details and update it
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ClientMembeDetailUpdate"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ClientMembeDetailUpdate"
      tags:
      - clients
    parameters: []
  "/clients/create-member/":
    post:
      operationId: clients_create-member_create
      description: Method to handle post request. Validate provided data by client
        and process it to create member data.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AltruaCreateMember"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AltruaCreateMember"
      tags:
      - clients
    parameters: []
  "/clients/documents/":
    get:
      operationId: clients_documents_list
      description: Client API to fetch the list of documents submitted by the members
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_1
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_2
        in: query
        description: ''
        required: false
        type: string
      - name: city
        in: query
        description: ''
        required: false
        type: string
      - name: state
        in: query
        description: ''
        required: false
        type: string
      - name: zipcode
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: is_registered
        in: query
        description: ''
        required: false
        type: string
      - name: client
        in: query
        description: ''
        required: false
        type: string
      - name: user
        in: query
        description: ''
        required: false
        type: string
      - name: member_id
        in: query
        description: ''
        required: false
        type: string
      - name: is_mhd_updated
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber_relation
        in: query
        description: ''
        required: false
        type: string
      - name: ssn
        in: query
        description: ''
        required: false
        type: string
      - name: last_digits_ssn
        in: query
        description: ''
        required: false
        type: string
      - name: height
        in: query
        description: ''
        required: false
        type: number
      - name: weight
        in: query
        description: ''
        required: false
        type: number
      - name: health_quality
        in: query
        description: ''
        required: false
        type: string
      - name: current_points
        in: query
        description: ''
        required: false
        type: number
      - name: marital_status
        in: query
        description: ''
        required: false
        type: string
      - name: last_visit_to_doctor
        in: query
        description: ''
        required: false
        type: string
      - name: latitude
        in: query
        description: ''
        required: false
        type: number
      - name: longitude
        in: query
        description: ''
        required: false
        type: number
      - name: stripe_customer_id
        in: query
        description: ''
        required: false
        type: string
      - name: completed_demo
        in: query
        description: ''
        required: false
        type: string
      - name: onboarding_step_completed
        in: query
        description: ''
        required: false
        type: string
      - name: has_allergies
        in: query
        description: ''
        required: false
        type: string
      - name: no_allergy_source
        in: query
        description: ''
        required: false
        type: string
      - name: has_prescriptions
        in: query
        description: ''
        required: false
        type: string
      - name: wellness_connected_device
        in: query
        description: ''
        required: false
        type: string
      - name: timezone
        in: query
        description: ''
        required: false
        type: string
      - name: last_notification_read_at
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_date
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_token
        in: query
        description: ''
        required: false
        type: string
      - name: claims_last_updated
        in: query
        description: ''
        required: false
        type: string
      - name: registration_status
        in: query
        description: ''
        required: false
        type: string
      - name: new_feature_slider_seen
        in: query
        description: ''
        required: false
        type: string
      - name: has_subscription_family_members
        in: query
        description: ''
        required: false
        type: string
      - name: high_risk_sleep_apnea
        in: query
        description: ''
        required: false
        type: string
      - name: search_page_intro_seen
        in: query
        description: ''
        required: false
        type: string
      - name: is_mrc_walkthrough_disabled
        in: query
        description: ''
        required: false
        type: string
      - name: department_name
        in: query
        description: ''
        required: false
        type: string
      - name: last_challenge_completion_call
        in: query
        description: ''
        required: false
        type: string
      - name: member_external_id
        in: query
        description: ''
        required: false
        type: string
      - name: employee_id
        in: query
        description: ''
        required: false
        type: string
      - name: termination_date
        in: query
        description: ''
        required: false
        type: string
      - name: termination_reason
        in: query
        description: ''
        required: false
        type: string
      - name: employment_status
        in: query
        description: ''
        required: false
        type: string
      - name: hire_date
        in: query
        description: ''
        required: false
        type: string
      - name: employer_location
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_employee_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_employee
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_eligibility_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_historical
        in: query
        description: ''
        required: false
        type: string
      - name: multiple_birth_order
        in: query
        description: ''
        required: false
        type: number
      - name: has_fwp
        in: query
        description: ''
        required: false
        type: string
      - name: in_roster_file
        in: query
        description: ''
        required: false
        type: string
      - name: registration_datetime
        in: query
        description: ''
        required: false
        type: string
      - name: is_data_shared_with_client
        in: query
        description: ''
        required: false
        type: string
      - name: is_first_onboarding_todo_completed
        in: query
        description: ''
        required: false
        type: string
      - name: accepted_client_terms
        in: query
        description: ''
        required: false
        type: string
      - name: member_ids
        in: query
        description: ''
        required: false
        type: string
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/MemberDocument"
      tags:
      - clients
    parameters: []
  "/clients/documents/create/":
    post:
      operationId: clients_documents_create_create
      description: Override to process request data list while suppressing errors
        for payload sets
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberDocumentsCreate"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberDocumentsCreate"
      tags:
      - clients
    parameters: []
  "/clients/member-biometrics/":
    get:
      operationId: clients_member-biometrics_list
      description: Client API to fetch list of member ids along with their biometrics
        information
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_1
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_2
        in: query
        description: ''
        required: false
        type: string
      - name: city
        in: query
        description: ''
        required: false
        type: string
      - name: state
        in: query
        description: ''
        required: false
        type: string
      - name: zipcode
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: is_registered
        in: query
        description: ''
        required: false
        type: string
      - name: client
        in: query
        description: ''
        required: false
        type: string
      - name: user
        in: query
        description: ''
        required: false
        type: string
      - name: member_id
        in: query
        description: ''
        required: false
        type: string
      - name: is_mhd_updated
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber_relation
        in: query
        description: ''
        required: false
        type: string
      - name: ssn
        in: query
        description: ''
        required: false
        type: string
      - name: last_digits_ssn
        in: query
        description: ''
        required: false
        type: string
      - name: height
        in: query
        description: ''
        required: false
        type: number
      - name: weight
        in: query
        description: ''
        required: false
        type: number
      - name: health_quality
        in: query
        description: ''
        required: false
        type: string
      - name: current_points
        in: query
        description: ''
        required: false
        type: number
      - name: marital_status
        in: query
        description: ''
        required: false
        type: string
      - name: last_visit_to_doctor
        in: query
        description: ''
        required: false
        type: string
      - name: latitude
        in: query
        description: ''
        required: false
        type: number
      - name: longitude
        in: query
        description: ''
        required: false
        type: number
      - name: stripe_customer_id
        in: query
        description: ''
        required: false
        type: string
      - name: completed_demo
        in: query
        description: ''
        required: false
        type: string
      - name: onboarding_step_completed
        in: query
        description: ''
        required: false
        type: string
      - name: has_allergies
        in: query
        description: ''
        required: false
        type: string
      - name: no_allergy_source
        in: query
        description: ''
        required: false
        type: string
      - name: has_prescriptions
        in: query
        description: ''
        required: false
        type: string
      - name: wellness_connected_device
        in: query
        description: ''
        required: false
        type: string
      - name: timezone
        in: query
        description: ''
        required: false
        type: string
      - name: last_notification_read_at
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_date
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_token
        in: query
        description: ''
        required: false
        type: string
      - name: claims_last_updated
        in: query
        description: ''
        required: false
        type: string
      - name: registration_status
        in: query
        description: ''
        required: false
        type: string
      - name: new_feature_slider_seen
        in: query
        description: ''
        required: false
        type: string
      - name: has_subscription_family_members
        in: query
        description: ''
        required: false
        type: string
      - name: high_risk_sleep_apnea
        in: query
        description: ''
        required: false
        type: string
      - name: search_page_intro_seen
        in: query
        description: ''
        required: false
        type: string
      - name: is_mrc_walkthrough_disabled
        in: query
        description: ''
        required: false
        type: string
      - name: department_name
        in: query
        description: ''
        required: false
        type: string
      - name: last_challenge_completion_call
        in: query
        description: ''
        required: false
        type: string
      - name: member_external_id
        in: query
        description: ''
        required: false
        type: string
      - name: employee_id
        in: query
        description: ''
        required: false
        type: string
      - name: termination_date
        in: query
        description: ''
        required: false
        type: string
      - name: termination_reason
        in: query
        description: ''
        required: false
        type: string
      - name: employment_status
        in: query
        description: ''
        required: false
        type: string
      - name: hire_date
        in: query
        description: ''
        required: false
        type: string
      - name: employer_location
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_employee_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_employee
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_eligibility_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_historical
        in: query
        description: ''
        required: false
        type: string
      - name: multiple_birth_order
        in: query
        description: ''
        required: false
        type: number
      - name: has_fwp
        in: query
        description: ''
        required: false
        type: string
      - name: in_roster_file
        in: query
        description: ''
        required: false
        type: string
      - name: registration_datetime
        in: query
        description: ''
        required: false
        type: string
      - name: is_data_shared_with_client
        in: query
        description: ''
        required: false
        type: string
      - name: is_first_onboarding_todo_completed
        in: query
        description: ''
        required: false
        type: string
      - name: accepted_client_terms
        in: query
        description: ''
        required: false
        type: string
      - name: member_ids
        in: query
        description: ''
        required: false
        type: string
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/MemberBiometrics"
      tags:
      - clients
    parameters: []
  "/clients/rewards/":
    get:
      operationId: clients_rewards_list
      description: Client API to fetch list of member ids along with their claimed
        rewards
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_1
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_2
        in: query
        description: ''
        required: false
        type: string
      - name: city
        in: query
        description: ''
        required: false
        type: string
      - name: state
        in: query
        description: ''
        required: false
        type: string
      - name: zipcode
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: is_registered
        in: query
        description: ''
        required: false
        type: string
      - name: client
        in: query
        description: ''
        required: false
        type: string
      - name: user
        in: query
        description: ''
        required: false
        type: string
      - name: member_id
        in: query
        description: ''
        required: false
        type: string
      - name: is_mhd_updated
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber_relation
        in: query
        description: ''
        required: false
        type: string
      - name: ssn
        in: query
        description: ''
        required: false
        type: string
      - name: last_digits_ssn
        in: query
        description: ''
        required: false
        type: string
      - name: height
        in: query
        description: ''
        required: false
        type: number
      - name: weight
        in: query
        description: ''
        required: false
        type: number
      - name: health_quality
        in: query
        description: ''
        required: false
        type: string
      - name: current_points
        in: query
        description: ''
        required: false
        type: number
      - name: marital_status
        in: query
        description: ''
        required: false
        type: string
      - name: last_visit_to_doctor
        in: query
        description: ''
        required: false
        type: string
      - name: latitude
        in: query
        description: ''
        required: false
        type: number
      - name: longitude
        in: query
        description: ''
        required: false
        type: number
      - name: stripe_customer_id
        in: query
        description: ''
        required: false
        type: string
      - name: completed_demo
        in: query
        description: ''
        required: false
        type: string
      - name: onboarding_step_completed
        in: query
        description: ''
        required: false
        type: string
      - name: has_allergies
        in: query
        description: ''
        required: false
        type: string
      - name: no_allergy_source
        in: query
        description: ''
        required: false
        type: string
      - name: has_prescriptions
        in: query
        description: ''
        required: false
        type: string
      - name: wellness_connected_device
        in: query
        description: ''
        required: false
        type: string
      - name: timezone
        in: query
        description: ''
        required: false
        type: string
      - name: last_notification_read_at
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_date
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_token
        in: query
        description: ''
        required: false
        type: string
      - name: claims_last_updated
        in: query
        description: ''
        required: false
        type: string
      - name: registration_status
        in: query
        description: ''
        required: false
        type: string
      - name: new_feature_slider_seen
        in: query
        description: ''
        required: false
        type: string
      - name: has_subscription_family_members
        in: query
        description: ''
        required: false
        type: string
      - name: high_risk_sleep_apnea
        in: query
        description: ''
        required: false
        type: string
      - name: search_page_intro_seen
        in: query
        description: ''
        required: false
        type: string
      - name: is_mrc_walkthrough_disabled
        in: query
        description: ''
        required: false
        type: string
      - name: department_name
        in: query
        description: ''
        required: false
        type: string
      - name: last_challenge_completion_call
        in: query
        description: ''
        required: false
        type: string
      - name: member_external_id
        in: query
        description: ''
        required: false
        type: string
      - name: employee_id
        in: query
        description: ''
        required: false
        type: string
      - name: termination_date
        in: query
        description: ''
        required: false
        type: string
      - name: termination_reason
        in: query
        description: ''
        required: false
        type: string
      - name: employment_status
        in: query
        description: ''
        required: false
        type: string
      - name: hire_date
        in: query
        description: ''
        required: false
        type: string
      - name: employer_location
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_employee_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_employee
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_eligibility_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_historical
        in: query
        description: ''
        required: false
        type: string
      - name: multiple_birth_order
        in: query
        description: ''
        required: false
        type: number
      - name: has_fwp
        in: query
        description: ''
        required: false
        type: string
      - name: in_roster_file
        in: query
        description: ''
        required: false
        type: string
      - name: registration_datetime
        in: query
        description: ''
        required: false
        type: string
      - name: is_data_shared_with_client
        in: query
        description: ''
        required: false
        type: string
      - name: is_first_onboarding_todo_completed
        in: query
        description: ''
        required: false
        type: string
      - name: accepted_client_terms
        in: query
        description: ''
        required: false
        type: string
      - name: member_ids
        in: query
        description: ''
        required: false
        type: string
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/ClientNameDate"
      tags:
      - clients
    parameters: []
  "/clients/surveys/":
    get:
      operationId: clients_surveys_list
      description: Client API to fetch list of member ids along with their completed
        surveys
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_1
        in: query
        description: ''
        required: false
        type: string
      - name: address_line_2
        in: query
        description: ''
        required: false
        type: string
      - name: city
        in: query
        description: ''
        required: false
        type: string
      - name: state
        in: query
        description: ''
        required: false
        type: string
      - name: zipcode
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: is_registered
        in: query
        description: ''
        required: false
        type: string
      - name: client
        in: query
        description: ''
        required: false
        type: string
      - name: user
        in: query
        description: ''
        required: false
        type: string
      - name: member_id
        in: query
        description: ''
        required: false
        type: string
      - name: is_mhd_updated
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber
        in: query
        description: ''
        required: false
        type: string
      - name: family_subscriber_relation
        in: query
        description: ''
        required: false
        type: string
      - name: ssn
        in: query
        description: ''
        required: false
        type: string
      - name: last_digits_ssn
        in: query
        description: ''
        required: false
        type: string
      - name: height
        in: query
        description: ''
        required: false
        type: number
      - name: weight
        in: query
        description: ''
        required: false
        type: number
      - name: health_quality
        in: query
        description: ''
        required: false
        type: string
      - name: current_points
        in: query
        description: ''
        required: false
        type: number
      - name: marital_status
        in: query
        description: ''
        required: false
        type: string
      - name: last_visit_to_doctor
        in: query
        description: ''
        required: false
        type: string
      - name: latitude
        in: query
        description: ''
        required: false
        type: number
      - name: longitude
        in: query
        description: ''
        required: false
        type: number
      - name: stripe_customer_id
        in: query
        description: ''
        required: false
        type: string
      - name: completed_demo
        in: query
        description: ''
        required: false
        type: string
      - name: onboarding_step_completed
        in: query
        description: ''
        required: false
        type: string
      - name: has_allergies
        in: query
        description: ''
        required: false
        type: string
      - name: no_allergy_source
        in: query
        description: ''
        required: false
        type: string
      - name: has_prescriptions
        in: query
        description: ''
        required: false
        type: string
      - name: wellness_connected_device
        in: query
        description: ''
        required: false
        type: string
      - name: timezone
        in: query
        description: ''
        required: false
        type: string
      - name: last_notification_read_at
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_date
        in: query
        description: ''
        required: false
        type: string
      - name: delegation_token
        in: query
        description: ''
        required: false
        type: string
      - name: claims_last_updated
        in: query
        description: ''
        required: false
        type: string
      - name: registration_status
        in: query
        description: ''
        required: false
        type: string
      - name: new_feature_slider_seen
        in: query
        description: ''
        required: false
        type: string
      - name: has_subscription_family_members
        in: query
        description: ''
        required: false
        type: string
      - name: high_risk_sleep_apnea
        in: query
        description: ''
        required: false
        type: string
      - name: search_page_intro_seen
        in: query
        description: ''
        required: false
        type: string
      - name: is_mrc_walkthrough_disabled
        in: query
        description: ''
        required: false
        type: string
      - name: department_name
        in: query
        description: ''
        required: false
        type: string
      - name: last_challenge_completion_call
        in: query
        description: ''
        required: false
        type: string
      - name: member_external_id
        in: query
        description: ''
        required: false
        type: string
      - name: employee_id
        in: query
        description: ''
        required: false
        type: string
      - name: termination_date
        in: query
        description: ''
        required: false
        type: string
      - name: termination_reason
        in: query
        description: ''
        required: false
        type: string
      - name: employment_status
        in: query
        description: ''
        required: false
        type: string
      - name: hire_date
        in: query
        description: ''
        required: false
        type: string
      - name: employer_location
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_employee_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_employee
        in: query
        description: ''
        required: false
        type: string
      - name: is_active_on_eligibility_file
        in: query
        description: ''
        required: false
        type: string
      - name: is_historical
        in: query
        description: ''
        required: false
        type: string
      - name: multiple_birth_order
        in: query
        description: ''
        required: false
        type: number
      - name: has_fwp
        in: query
        description: ''
        required: false
        type: string
      - name: in_roster_file
        in: query
        description: ''
        required: false
        type: string
      - name: registration_datetime
        in: query
        description: ''
        required: false
        type: string
      - name: is_data_shared_with_client
        in: query
        description: ''
        required: false
        type: string
      - name: is_first_onboarding_todo_completed
        in: query
        description: ''
        required: false
        type: string
      - name: accepted_client_terms
        in: query
        description: ''
        required: false
        type: string
      - name: member_ids
        in: query
        description: ''
        required: false
        type: string
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/ClientNameDate"
      tags:
      - clients
    parameters: []
  "/complete-view-insurance-todo/":
    post:
      operationId: complete-view-insurance-todo_create
      description: API to mark view insurance todo Completed
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - complete-view-insurance-todo
    parameters: []
  "/complete-wellness-program-todo/":
    post:
      operationId: complete-wellness-program-todo_create
      description: API to mark wellness program to-do completed.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - complete-wellness-program-todo
    parameters: []
  "/connected-health/hapi_notify/":
    post:
      operationId: connected-health_hapi_notify_create
      description: |-
        # Check for authorized sender
        # Save the bundled items to S3 for immediate processing.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - connected-health
    parameters: []
  "/doctors/add/":
    post:
      operationId: doctors_add_create
      description: |-
        API to add physician
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/CreatePhysicianPracticeLocation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/CreatePhysicianPracticeLocation"
      tags:
      - doctors
    parameters: []
  "/doctors/affidavit-physician/":
    get:
      operationId: doctors_affidavit-physician_read
      description: |-
        API to get the detail of the member physician which are attached to Physical Verification Affidavit.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberPhysicianAffidavit"
      tags:
      - doctors
    parameters: []
  "/doctors/all/":
    get:
      operationId: doctors_all_list
      description: |-
        Lightweight API to get names, ids and Profile images of all doctors
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PhysicianIdNamePic"
      tags:
      - doctors
    parameters: []
  "/doctors/associated/":
    get:
      operationId: doctors_associated_list
      description: |-
        API to get list of doctors that qualify as 'My Doctors' for a member
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    parameters: []
  "/doctors/check-coverage/":
    get:
      operationId: doctors_check-coverage_list
      description: API to check the coverage of Insurance for a Provider Practice
        Location.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/CheckCoverageValidation"
      tags:
      - doctors
    parameters: []
  "/doctors/labs-list/":
    get:
      operationId: doctors_labs-list_list
      description: |-
        API for list of Labs
        ---
      parameters:
      - name: image
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/LabsList"
      tags:
      - doctors
    parameters: []
  "/doctors/locations-connection-status/":
    get:
      operationId: doctors_locations-connection-status_list
      description: |-
        API for list of status of connection with physician-practice-locations connected to member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    parameters: []
  "/doctors/member-place-parking/":
    get:
      operationId: doctors_member-place-parking_read
      description: |-
        API to save,retrieve,delete the parking details of a member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberPlaceParking"
      tags:
      - doctors
    post:
      operationId: doctors_member-place-parking_create
      description: |-
        API to save,retrieve,delete the parking details of a member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberPlaceParking"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberPlaceParking"
      tags:
      - doctors
    delete:
      operationId: doctors_member-place-parking_delete
      description: |-
        API to save,retrieve,delete the parking details of a member
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - doctors
    parameters: []
  "/doctors/physician-affidavit/submit/":
    post:
      operationId: doctors_physician-affidavit_submit_create
      description: |-
        API to submit physician affidavit
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PhysicianVerificationAffidavit"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PhysicianVerificationAffidavit"
      tags:
      - doctors
    parameters: []
  "/doctors/place-group-list/":
    get:
      operationId: doctors_place-group-list_list
      description: |-
        API to get list of dynamic categories
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PlaceGroup"
      tags:
      - doctors
    parameters: []
  "/doctors/place/{place_id}/":
    get:
      operationId: doctors_place_read
      description: |-
        API to get the detail of the member physician which are attached to Physical Verification Affidavit.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PlaceDetail"
      tags:
      - doctors
    parameters:
    - name: place_id
      in: path
      description: Id for data received
      required: true
      type: integer
  "/doctors/place/{place_id}/indoor-map/":
    get:
      operationId: doctors_place_indoor-map_read
      description: |-
        API to get the detail of Place Indoor Map
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PlaceIndoorMap"
      tags:
      - doctors
    parameters:
    - name: place_id
      in: path
      description: Id for data received
      required: true
      type: integer
  "/doctors/place/{place_id}/toggle-favorite/":
    put:
      operationId: doctors_place_toggle-favorite_update
      description: |-
        API to mark a place favorite
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    patch:
      operationId: doctors_place_toggle-favorite_partial_update
      description: |-
        API to mark a place favorite
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    parameters:
    - name: place_id
      in: path
      required: true
      type: string
  "/doctors/places/":
    get:
      operationId: doctors_places_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/PlaceList"
      tags:
      - doctors
    parameters: []
  "/doctors/portal-list/":
    get:
      operationId: doctors_portal-list_list
      description: |-
        API for list of portals
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PortalList"
      tags:
      - doctors
    parameters: []
  "/doctors/portals/":
    get:
      operationId: doctors_portals_list
      description: |-
        API for list of portals
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PortalDoctorList"
      tags:
      - doctors
    parameters: []
  "/doctors/practice-connection-status/{practice_id}/":
    get:
      operationId: doctors_practice-connection-status_read
      description: API to get Connection status for a Practice along with location.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    parameters:
    - name: practice_id
      in: path
      required: true
      type: string
  "/doctors/provider-filter-choices/":
    get:
      operationId: doctors_provider-filter-choices_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    parameters: []
  "/doctors/provider-sub-types/":
    get:
      operationId: doctors_provider-sub-types_list
      description: |-
        API to fetch list of Provider sub-types
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ProviderSubType"
      tags:
      - doctors
    parameters: []
  "/doctors/search-providers/":
    get:
      operationId: doctors_search-providers_list
      description: |-
        API to get list of doctors and practices as per search criteria
        ---
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - doctors
    parameters: []
  "/doctors/specialities/":
    get:
      operationId: doctors_specialities_list
      description: |-
        API to view a list of Specialities for doctor search flow
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Specialities"
      tags:
      - doctors
    parameters: []
  "/doctors/specialities/popular/":
    get:
      operationId: doctors_specialities_popular_list
      description: |-
        API to view a list of Popular Specialities for doctor search flow
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Specialities"
      tags:
      - doctors
    parameters: []
  "/doctors/type-ahead/new/":
    get:
      operationId: doctors_type-ahead_new_list
      description: |-
        API to search practices and doctors
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    parameters: []
  "/doctors/{physician_id}/":
    get:
      operationId: doctors_read
      description: |-
        API to view details for Doctor's Profile for a given physician id
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    put:
      operationId: doctors_update
      description: |-
        API to view details for Doctor's Profile for a given physician id
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    delete:
      operationId: doctors_delete
      description: |-
        To handle deletion of Physician for cases when demo/base-demo user triggers delete,
        and/or when physician is related to more than one member
        :param request: (Object) Request object
        :param args: Positional arguments if any
        :param kwargs: Dict of keyword arguments
        :return Response object
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - doctors
    parameters:
    - name: physician_id
      in: path
      required: true
      type: string
  "/doctors/{physician_id}/toggle-favorite/":
    post:
      operationId: doctors_toggle-favorite_create
      description: |-
        API to toggle favorite attribute of the doctor for a member
        If this API is called on a favorite doctor, it will 'unfavorite' the doctor, otherwise mark it as favorite.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - doctors
    parameters:
    - name: physician_id
      in: path
      required: true
      type: string
  "/doctors/{physician_id}/toggle-pcp/":
    post:
      operationId: doctors_toggle-pcp_create
      summary: This method handles that  non-bwell-client-user cannot toggle pcp
      description: |-
        :param request: request object
        :param physician_id: Id of the physician
        :param args: Positional arguments if any
        :param kwargs: Dict of keyword arguments
        :return: response object with 400_bad_request if user is non-bwell-client-user otherwise
                return  super class post method
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - doctors
    parameters:
    - name: physician_id
      in: path
      required: true
      type: string
  "/doctors/{physician_id}/un-delete/":
    put:
      operationId: doctors_un-delete_update
      description: |-
        API to undelete a self-reported physician and its related data
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - doctors
    parameters:
    - name: physician_id
      in: path
      required: true
      type: string
  "/encounters/appointment-types/visit-reasons/":
    get:
      operationId: encounters_appointment-types_visit-reasons_list
      description: |-
        API to get data of Visit Reason
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/AppointmentTypeVisitReasonProtocol"
      tags:
      - encounters
    parameters: []
  "/encounters/appointment/cancel-modal-details/{cancel_reason}/":
    get:
      operationId: encounters_appointment_cancel-modal-details_read
      description: |-
        API to get details for modals to be shown based on selected Appointment Cancel Reason.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/ClientCancelReasonModal"
      tags:
      - encounters
    parameters:
    - name: cancel_reason
      in: path
      required: true
      type: string
  "/encounters/appointment/cancel/reasons/":
    get:
      operationId: encounters_appointment_cancel_reasons_list
      description: |-
        API to get data for Appointment Cancellation View
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MedstarApptCancellationReasonList"
      tags:
      - encounters
    parameters: []
  "/encounters/appointment/filter-choices/":
    get:
      operationId: encounters_appointment_filter-choices_list
      description: |-
        API to view provider, visit reason and year choices for Prescriptions filter.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - encounters
    parameters: []
  "/encounters/appointment/get-slots/":
    get:
      operationId: encounters_appointment_get-slots_list
      description: |-
        API to get available slots for medstar appointment scheduling
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - encounters
    parameters: []
  "/encounters/appointment/reasons/":
    get:
      operationId: encounters_appointment_reasons_list
      description: |-
        API to get data of Visit Reason
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/VisitReasonList"
      tags:
      - encounters
    parameters: []
  "/encounters/appointment/register/":
    post:
      operationId: encounters_appointment_register_create
      description: |-
        API to register for appointment by medstar member.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedstarRegistration"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MedstarRegistration"
      tags:
      - encounters
    put:
      operationId: encounters_appointment_register_update
      description: |-
        API to register for appointment by medstar member.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedstarRegistrationComplete"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedstarRegistrationComplete"
      tags:
      - encounters
    parameters: []
  "/encounters/appointment/types/":
    get:
      operationId: encounters_appointment_types_list
      description: |-
        API to get data of appointment types
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/AppointmentTypeList"
      tags:
      - encounters
    parameters: []
  "/encounters/appointments/":
    get:
      operationId: encounters_appointments_list
      description: |-
        API to GET paginated list of scheduled appointments.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                    - name: page
                        description: Page number of the results needed
                        type: int
                        paramType: query param
                        required: false ( all the pages will be returned )
                    - name: page_size
                        description: Number of results needed on a single page
                        type: int
                        paramType: query param
                        required: false
                        default: 25
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
      parameters:
      - name: slot
        in: query
        description: ''
        required: false
        type: string
      - name: physician_id
        in: query
        description: ''
        required: false
        type: string
      - name: asc
        in: query
        description: ''
        required: false
        type: string
      - name: reason_for_visit_id
        in: query
        description: ''
        required: false
        type: string
      - name: year
        in: query
        description: ''
        required: false
        type: number
      - name: is_past
        in: query
        description: ''
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/AppointmentsList"
      tags:
      - encounters
    parameters: []
  "/encounters/appointments/{id}/":
    get:
      operationId: encounters_appointments_read
      description: |-
        API to GET paginated list of scheduled appointments.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                    - name: page
                        description: Page number of the results needed
                        type: int
                        paramType: query param
                        required: false ( all the pages will be returned )
                    - name: page_size
                        description: Number of results needed on a single page
                        type: int
                        paramType: query param
                        required: false
                        default: 25
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - encounters
    put:
      operationId: encounters_appointments_update
      description: |-
        API to GET paginated list of scheduled appointments.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                    - name: page
                        description: Page number of the results needed
                        type: int
                        paramType: query param
                        required: false ( all the pages will be returned )
                    - name: page_size
                        description: Number of results needed on a single page
                        type: int
                        paramType: query param
                        required: false
                        default: 25
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AppointmentsList"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AppointmentsList"
      tags:
      - encounters
    patch:
      operationId: encounters_appointments_partial_update
      description: |-
        API to GET paginated list of scheduled appointments.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                    - name: page
                        description: Page number of the results needed
                        type: int
                        paramType: query param
                        required: false ( all the pages will be returned )
                    - name: page_size
                        description: Number of results needed on a single page
                        type: int
                        paramType: query param
                        required: false
                        default: 25
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AppointmentsList"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AppointmentsList"
      tags:
      - encounters
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/encounters/appointments/{id}/cancel/":
    patch:
      operationId: encounters_appointments_cancel
      description: |-
        API to GET paginated list of scheduled appointments.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                    - name: page
                        description: Page number of the results needed
                        type: int
                        paramType: query param
                        required: false ( all the pages will be returned )
                    - name: page_size
                        description: Number of results needed on a single page
                        type: int
                        paramType: query param
                        required: false
                        default: 25
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedstarApptCancellation"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedstarApptCancellation"
      tags:
      - encounters
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/encounters/appointments/{id}/reschedule/":
    put:
      operationId: encounters_appointments_reschedule
      description: |-
        API to GET paginated list of scheduled appointments.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                    - name: page
                        description: Page number of the results needed
                        type: int
                        paramType: query param
                        required: false ( all the pages will be returned )
                    - name: page_size
                        description: Number of results needed on a single page
                        type: int
                        paramType: query param
                        required: false
                        default: 25
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedstarApptReschedule"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedstarApptReschedule"
      tags:
      - encounters
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/encounters/book-appointment/":
    post:
      operationId: encounters_book-appointment_create
      description: |-
        API to book appointment for medstar member.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/BookAppointment"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/BookAppointment"
      tags:
      - encounters
    parameters: []
  "/encounters/conditional-questions/{provider_id}/type/(P{appointment_type_id}d+)":
    get:
      operationId: encounters_conditional-questions_type_read
      description: |-
        API for retrieving conditional questions data for specific provider and appt type
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PhysicianAppointmentType"
      tags:
      - encounters
    parameters:
    - name: appointment_type_id
      in: path
      required: true
      type: string
    - name: provider_id
      in: path
      required: true
      type: string
  "/encounters/encounter/add/":
    post:
      operationId: encounters_encounter_add_create
      description: |-
        API to add encounter for member.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/EncounterAdd"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/EncounterAdd"
      tags:
      - encounters
    parameters: []
  "/encounters/menu-options/{feature_id}/":
    get:
      operationId: encounters_menu-options_read
      description: |-
        API to GET list of menu options for client's feature.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MenuData"
      tags:
      - encounters
    parameters:
    - name: feature_id
      in: path
      required: true
      type: string
  "/encounters/registration-data/{appointment_id}/":
    get:
      operationId: encounters_registration-data_read
      description: |-
        API for retrieving registration data for pre-filling in complete registration form
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/RegistrationData"
      tags:
      - encounters
    parameters:
    - name: appointment_id
      in: path
      required: true
      type: string
  "/encounters/scheduled-appointments/":
    get:
      operationId: encounters_scheduled-appointments_list
      description: |-
        API for appointment functions for medstar member.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/
                        response :
                            [
                                {
                                   "id":424,
                                   "physician":{
                                      "id":448,
                                      "user":{
                                         "name_prefix":"1",
                                         "first_name":"1",
                                         "middle_name":"1",
                                         "last_name":"1",
                                         "name_suffix":"1",
                                         "full_name":"1 1 1 1 1",
                                         "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                      }
                                   },
                                   "practice_location":{
                                      "name":"1",
                                      "address_line_1":"1",
                                      "address_line_2":"1",
                                      "city":"1",
                                      "state":"1",
                                      "zipcode":"1",
                                      "latitude":"40.000000",
                                      "longitude":"11.000000",
                                      "phone":"1"
                                   },
                                   "appointment_type":{
                                      "id":436,
                                      "type":"1"
                                   },
                                   "slot":"2015-07-01T01:00:01.000000"
                                }
                            ]
                    - url: url: api/encounters/scheduled-appointments/1/
                        response:
                            {
                               "seen_in_last_three_years":False,
                               "reason_for_visit":{
                                  "id":439,
                                  "reason":"1",
                                  "applicable_for":0,
                                  "idx_name":"1"
                               },
                               "appointment_context":"1",
                               "visitor_data":{

                               },
                               "is_cancelled":False,
                               "insurance":"None",
                               "appointment_number":"1",
                               "appointment_data":[

                               ],
                               "id":427,
                               "physician":{
                                  "id":451,
                                  "user":{
                                     "name_prefix":"1",
                                     "first_name":"1",
                                     "middle_name":"1",
                                     "last_name":"1",
                                     "name_suffix":"1",
                                     "full_name":"1 1 1 1 1",
                                     "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                  }
                               },
                               "practice_location":{
                                  "name":"1",
                                  "address_line_1":"1",
                                  "address_line_2":"1",
                                  "city":"1",
                                  "state":"1",
                                  "zipcode":"1",
                                  "latitude":"40.000000",
                                  "longitude":"11.000000",
                                  "phone":"1"
                               },
                               "appointment_type":{
                                  "id":439,
                                  "type":"1"
                               },
                               "slot":"2015-07-01T01:00:01.000000"
                            }
            PATCH:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                    - name: reason
                        description: pk of CancelReason in our system
                        type: integer
                        paramType: form
                        required: true
                    - name: comment
                        description: string representing user comment for cancellation
                        type: string
                        paramType: form
                        required: false
                        default: ''
                    - name: waitlist
                        description: Do we remove this appointment from any waitlist?
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: ancillaries
                        description: Cancel ancillary appointments or let them become standalone.
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: optional_resources
                        description: Cancel optional resources or let them become stand alone
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/1/cancel/
                        response :
                            { 'message': 'Success' }
      parameters:
      - name: slot
        in: query
        description: ''
        required: false
        type: string
      - name: physician_id
        in: query
        description: ''
        required: false
        type: string
      - name: asc
        in: query
        description: ''
        required: false
        type: string
      - name: reason_for_visit_id
        in: query
        description: ''
        required: false
        type: string
      - name: year
        in: query
        description: ''
        required: false
        type: number
      - name: is_past
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/AppointmentsList"
      tags:
      - encounters
    parameters: []
  "/encounters/scheduled-appointments/{id}/":
    get:
      operationId: encounters_scheduled-appointments_read
      description: |-
        API for appointment functions for medstar member.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/
                        response :
                            [
                                {
                                   "id":424,
                                   "physician":{
                                      "id":448,
                                      "user":{
                                         "name_prefix":"1",
                                         "first_name":"1",
                                         "middle_name":"1",
                                         "last_name":"1",
                                         "name_suffix":"1",
                                         "full_name":"1 1 1 1 1",
                                         "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                      }
                                   },
                                   "practice_location":{
                                      "name":"1",
                                      "address_line_1":"1",
                                      "address_line_2":"1",
                                      "city":"1",
                                      "state":"1",
                                      "zipcode":"1",
                                      "latitude":"40.000000",
                                      "longitude":"11.000000",
                                      "phone":"1"
                                   },
                                   "appointment_type":{
                                      "id":436,
                                      "type":"1"
                                   },
                                   "slot":"2015-07-01T01:00:01.000000"
                                }
                            ]
                    - url: url: api/encounters/scheduled-appointments/1/
                        response:
                            {
                               "seen_in_last_three_years":False,
                               "reason_for_visit":{
                                  "id":439,
                                  "reason":"1",
                                  "applicable_for":0,
                                  "idx_name":"1"
                               },
                               "appointment_context":"1",
                               "visitor_data":{

                               },
                               "is_cancelled":False,
                               "insurance":"None",
                               "appointment_number":"1",
                               "appointment_data":[

                               ],
                               "id":427,
                               "physician":{
                                  "id":451,
                                  "user":{
                                     "name_prefix":"1",
                                     "first_name":"1",
                                     "middle_name":"1",
                                     "last_name":"1",
                                     "name_suffix":"1",
                                     "full_name":"1 1 1 1 1",
                                     "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                  }
                               },
                               "practice_location":{
                                  "name":"1",
                                  "address_line_1":"1",
                                  "address_line_2":"1",
                                  "city":"1",
                                  "state":"1",
                                  "zipcode":"1",
                                  "latitude":"40.000000",
                                  "longitude":"11.000000",
                                  "phone":"1"
                               },
                               "appointment_type":{
                                  "id":439,
                                  "type":"1"
                               },
                               "slot":"2015-07-01T01:00:01.000000"
                            }
            PATCH:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                    - name: reason
                        description: pk of CancelReason in our system
                        type: integer
                        paramType: form
                        required: true
                    - name: comment
                        description: string representing user comment for cancellation
                        type: string
                        paramType: form
                        required: false
                        default: ''
                    - name: waitlist
                        description: Do we remove this appointment from any waitlist?
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: ancillaries
                        description: Cancel ancillary appointments or let them become standalone.
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: optional_resources
                        description: Cancel optional resources or let them become stand alone
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/1/cancel/
                        response :
                            { 'message': 'Success' }
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - encounters
    put:
      operationId: encounters_scheduled-appointments_update
      description: |-
        API for appointment functions for medstar member.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/
                        response :
                            [
                                {
                                   "id":424,
                                   "physician":{
                                      "id":448,
                                      "user":{
                                         "name_prefix":"1",
                                         "first_name":"1",
                                         "middle_name":"1",
                                         "last_name":"1",
                                         "name_suffix":"1",
                                         "full_name":"1 1 1 1 1",
                                         "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                      }
                                   },
                                   "practice_location":{
                                      "name":"1",
                                      "address_line_1":"1",
                                      "address_line_2":"1",
                                      "city":"1",
                                      "state":"1",
                                      "zipcode":"1",
                                      "latitude":"40.000000",
                                      "longitude":"11.000000",
                                      "phone":"1"
                                   },
                                   "appointment_type":{
                                      "id":436,
                                      "type":"1"
                                   },
                                   "slot":"2015-07-01T01:00:01.000000"
                                }
                            ]
                    - url: url: api/encounters/scheduled-appointments/1/
                        response:
                            {
                               "seen_in_last_three_years":False,
                               "reason_for_visit":{
                                  "id":439,
                                  "reason":"1",
                                  "applicable_for":0,
                                  "idx_name":"1"
                               },
                               "appointment_context":"1",
                               "visitor_data":{

                               },
                               "is_cancelled":False,
                               "insurance":"None",
                               "appointment_number":"1",
                               "appointment_data":[

                               ],
                               "id":427,
                               "physician":{
                                  "id":451,
                                  "user":{
                                     "name_prefix":"1",
                                     "first_name":"1",
                                     "middle_name":"1",
                                     "last_name":"1",
                                     "name_suffix":"1",
                                     "full_name":"1 1 1 1 1",
                                     "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                  }
                               },
                               "practice_location":{
                                  "name":"1",
                                  "address_line_1":"1",
                                  "address_line_2":"1",
                                  "city":"1",
                                  "state":"1",
                                  "zipcode":"1",
                                  "latitude":"40.000000",
                                  "longitude":"11.000000",
                                  "phone":"1"
                               },
                               "appointment_type":{
                                  "id":439,
                                  "type":"1"
                               },
                               "slot":"2015-07-01T01:00:01.000000"
                            }
            PATCH:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                    - name: reason
                        description: pk of CancelReason in our system
                        type: integer
                        paramType: form
                        required: true
                    - name: comment
                        description: string representing user comment for cancellation
                        type: string
                        paramType: form
                        required: false
                        default: ''
                    - name: waitlist
                        description: Do we remove this appointment from any waitlist?
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: ancillaries
                        description: Cancel ancillary appointments or let them become standalone.
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: optional_resources
                        description: Cancel optional resources or let them become stand alone
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/1/cancel/
                        response :
                            { 'message': 'Success' }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AppointmentsList"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AppointmentsList"
      tags:
      - encounters
    patch:
      operationId: encounters_scheduled-appointments_partial_update
      description: |-
        API for appointment functions for medstar member.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/
                        response :
                            [
                                {
                                   "id":424,
                                   "physician":{
                                      "id":448,
                                      "user":{
                                         "name_prefix":"1",
                                         "first_name":"1",
                                         "middle_name":"1",
                                         "last_name":"1",
                                         "name_suffix":"1",
                                         "full_name":"1 1 1 1 1",
                                         "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                      }
                                   },
                                   "practice_location":{
                                      "name":"1",
                                      "address_line_1":"1",
                                      "address_line_2":"1",
                                      "city":"1",
                                      "state":"1",
                                      "zipcode":"1",
                                      "latitude":"40.000000",
                                      "longitude":"11.000000",
                                      "phone":"1"
                                   },
                                   "appointment_type":{
                                      "id":436,
                                      "type":"1"
                                   },
                                   "slot":"2015-07-01T01:00:01.000000"
                                }
                            ]
                    - url: url: api/encounters/scheduled-appointments/1/
                        response:
                            {
                               "seen_in_last_three_years":False,
                               "reason_for_visit":{
                                  "id":439,
                                  "reason":"1",
                                  "applicable_for":0,
                                  "idx_name":"1"
                               },
                               "appointment_context":"1",
                               "visitor_data":{

                               },
                               "is_cancelled":False,
                               "insurance":"None",
                               "appointment_number":"1",
                               "appointment_data":[

                               ],
                               "id":427,
                               "physician":{
                                  "id":451,
                                  "user":{
                                     "name_prefix":"1",
                                     "first_name":"1",
                                     "middle_name":"1",
                                     "last_name":"1",
                                     "name_suffix":"1",
                                     "full_name":"1 1 1 1 1",
                                     "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                  }
                               },
                               "practice_location":{
                                  "name":"1",
                                  "address_line_1":"1",
                                  "address_line_2":"1",
                                  "city":"1",
                                  "state":"1",
                                  "zipcode":"1",
                                  "latitude":"40.000000",
                                  "longitude":"11.000000",
                                  "phone":"1"
                               },
                               "appointment_type":{
                                  "id":439,
                                  "type":"1"
                               },
                               "slot":"2015-07-01T01:00:01.000000"
                            }
            PATCH:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                    - name: reason
                        description: pk of CancelReason in our system
                        type: integer
                        paramType: form
                        required: true
                    - name: comment
                        description: string representing user comment for cancellation
                        type: string
                        paramType: form
                        required: false
                        default: ''
                    - name: waitlist
                        description: Do we remove this appointment from any waitlist?
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: ancillaries
                        description: Cancel ancillary appointments or let them become standalone.
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: optional_resources
                        description: Cancel optional resources or let them become stand alone
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/1/cancel/
                        response :
                            { 'message': 'Success' }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AppointmentsList"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AppointmentsList"
      tags:
      - encounters
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/encounters/scheduled-appointments/{id}/cancel/":
    patch:
      operationId: encounters_scheduled-appointments_cancel
      description: |-
        API for appointment functions for medstar member.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/
                        response :
                            [
                                {
                                   "id":424,
                                   "physician":{
                                      "id":448,
                                      "user":{
                                         "name_prefix":"1",
                                         "first_name":"1",
                                         "middle_name":"1",
                                         "last_name":"1",
                                         "name_suffix":"1",
                                         "full_name":"1 1 1 1 1",
                                         "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                      }
                                   },
                                   "practice_location":{
                                      "name":"1",
                                      "address_line_1":"1",
                                      "address_line_2":"1",
                                      "city":"1",
                                      "state":"1",
                                      "zipcode":"1",
                                      "latitude":"40.000000",
                                      "longitude":"11.000000",
                                      "phone":"1"
                                   },
                                   "appointment_type":{
                                      "id":436,
                                      "type":"1"
                                   },
                                   "slot":"2015-07-01T01:00:01.000000"
                                }
                            ]
                    - url: url: api/encounters/scheduled-appointments/1/
                        response:
                            {
                               "seen_in_last_three_years":False,
                               "reason_for_visit":{
                                  "id":439,
                                  "reason":"1",
                                  "applicable_for":0,
                                  "idx_name":"1"
                               },
                               "appointment_context":"1",
                               "visitor_data":{

                               },
                               "is_cancelled":False,
                               "insurance":"None",
                               "appointment_number":"1",
                               "appointment_data":[

                               ],
                               "id":427,
                               "physician":{
                                  "id":451,
                                  "user":{
                                     "name_prefix":"1",
                                     "first_name":"1",
                                     "middle_name":"1",
                                     "last_name":"1",
                                     "name_suffix":"1",
                                     "full_name":"1 1 1 1 1",
                                     "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                  }
                               },
                               "practice_location":{
                                  "name":"1",
                                  "address_line_1":"1",
                                  "address_line_2":"1",
                                  "city":"1",
                                  "state":"1",
                                  "zipcode":"1",
                                  "latitude":"40.000000",
                                  "longitude":"11.000000",
                                  "phone":"1"
                               },
                               "appointment_type":{
                                  "id":439,
                                  "type":"1"
                               },
                               "slot":"2015-07-01T01:00:01.000000"
                            }
            PATCH:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                    - name: reason
                        description: pk of CancelReason in our system
                        type: integer
                        paramType: form
                        required: true
                    - name: comment
                        description: string representing user comment for cancellation
                        type: string
                        paramType: form
                        required: false
                        default: ''
                    - name: waitlist
                        description: Do we remove this appointment from any waitlist?
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: ancillaries
                        description: Cancel ancillary appointments or let them become standalone.
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: optional_resources
                        description: Cancel optional resources or let them become stand alone
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/1/cancel/
                        response :
                            { 'message': 'Success' }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedstarApptCancellation"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedstarApptCancellation"
      tags:
      - encounters
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/encounters/scheduled-appointments/{id}/reschedule/":
    put:
      operationId: encounters_scheduled-appointments_reschedule
      description: |-
        API for appointment functions for medstar member.
        ---
            GET:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                filters:
                    - name: slot_before
                        description: List all appointments before given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: slot_after
                        description: List all appointments after given UTC time (inclusive)
                        type: string
                        paramType: query param
                        required: false
                    - name: physician_id
                        description: List of all appointments with given physician
                        type: string
                        paramType: query param
                        required: false
                    - name: asc
                        description: Sort the results in ascending order
                        type: bool
                        paramType: query param
                        required: false
                        default value: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/
                        response :
                            [
                                {
                                   "id":424,
                                   "physician":{
                                      "id":448,
                                      "user":{
                                         "name_prefix":"1",
                                         "first_name":"1",
                                         "middle_name":"1",
                                         "last_name":"1",
                                         "name_suffix":"1",
                                         "full_name":"1 1 1 1 1",
                                         "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                      }
                                   },
                                   "practice_location":{
                                      "name":"1",
                                      "address_line_1":"1",
                                      "address_line_2":"1",
                                      "city":"1",
                                      "state":"1",
                                      "zipcode":"1",
                                      "latitude":"40.000000",
                                      "longitude":"11.000000",
                                      "phone":"1"
                                   },
                                   "appointment_type":{
                                      "id":436,
                                      "type":"1"
                                   },
                                   "slot":"2015-07-01T01:00:01.000000"
                                }
                            ]
                    - url: url: api/encounters/scheduled-appointments/1/
                        response:
                            {
                               "seen_in_last_three_years":False,
                               "reason_for_visit":{
                                  "id":439,
                                  "reason":"1",
                                  "applicable_for":0,
                                  "idx_name":"1"
                               },
                               "appointment_context":"1",
                               "visitor_data":{

                               },
                               "is_cancelled":False,
                               "insurance":"None",
                               "appointment_number":"1",
                               "appointment_data":[

                               ],
                               "id":427,
                               "physician":{
                                  "id":451,
                                  "user":{
                                     "name_prefix":"1",
                                     "first_name":"1",
                                     "middle_name":"1",
                                     "last_name":"1",
                                     "name_suffix":"1",
                                     "full_name":"1 1 1 1 1",
                                     "profile_pic":"http://127.0.0.1:8000/v1.1/media/1"
                                  }
                               },
                               "practice_location":{
                                  "name":"1",
                                  "address_line_1":"1",
                                  "address_line_2":"1",
                                  "city":"1",
                                  "state":"1",
                                  "zipcode":"1",
                                  "latitude":"40.000000",
                                  "longitude":"11.000000",
                                  "phone":"1"
                               },
                               "appointment_type":{
                                  "id":439,
                                  "type":"1"
                               },
                               "slot":"2015-07-01T01:00:01.000000"
                            }
            PATCH:
                parameters:
                    - name: Authorization
                        description: User's authentication token
                        type: string
                        paramType: header
                        required: true
                    - name: reason
                        description: pk of CancelReason in our system
                        type: integer
                        paramType: form
                        required: true
                    - name: comment
                        description: string representing user comment for cancellation
                        type: string
                        paramType: form
                        required: false
                        default: ''
                    - name: waitlist
                        description: Do we remove this appointment from any waitlist?
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: ancillaries
                        description: Cancel ancillary appointments or let them become standalone.
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                    - name: optional_resources
                        description: Cancel optional resources or let them become stand alone
                        type: boolean
                        paramType: form
                        required: false
                        default: false
                responseMessages:
                    - code: 401
                        message: Invalid token
                    - code: 403
                        message: You do not have permission to perform this action
                    - code: 420
                        message: Token expired
                responses:
                    - url: api/encounters/scheduled-appointments/1/cancel/
                        response :
                            { 'message': 'Success' }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedstarApptReschedule"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedstarApptReschedule"
      tags:
      - encounters
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/encounters/update-appointment/{id}/":
    put:
      operationId: encounters_update-appointment_update
      description: |-
        serializer: encounters_serializers.SetWillAttendFlagForAppointmentSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: will_attend_appointment
                  description: will user attend the appointment
                  type: boolean
                  required: false
                - name: appointment_context
                  description: add context to an appointment
                  type: char
                  required: false
            responseMessages:
                - code: 400
                  message: Invalid data
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UpdateAppointment"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/UpdateAppointment"
      tags:
      - encounters
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this scheduled appointment.
      required: true
      type: integer
  "/health-tribe/":
    get:
      operationId: health-tribe_list
      description: |-
        API view to get list of all the possible members for health tribe invites
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/activity-acknowledgement/{activity_id}/":
    put:
      operationId: health-tribe_activity-acknowledgement_update
      description: |-
        API to update acknowledged status to False
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AcknowledgeActivity"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AcknowledgeActivity"
      tags:
      - health-tribe
    parameters:
    - name: activity_id
      in: path
      required: true
      type: string
  "/health-tribe/activity-list/":
    get:
      operationId: health-tribe_activity-list_list
      description: API to get list of Health Tribe Activities
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/activity/":
    get:
      operationId: health-tribe_activity_list
      description: |-
        API to remove health tribe activity entry
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/activity/{id}/":
    delete:
      operationId: health-tribe_activity_delete
      description: |-
        API to remove health tribe activity entry
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - health-tribe
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/health-tribe/birthday-modal-viewed/{inviter_id}/":
    put:
      operationId: health-tribe_birthday-modal-viewed_update
      description: |-
        API to update show birthday modal status to False
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UpdateBirthdayModalStatus"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/UpdateBirthdayModalStatus"
      tags:
      - health-tribe
    parameters:
    - name: inviter_id
      in: path
      required: true
      type: string
  "/health-tribe/external-invite/":
    post:
      operationId: health-tribe_external-invite_create
      description: |-
        API to send Health Tribe Invite for invites generated in an external client.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HealthTribeExternalInvite"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HealthTribeExternalInvite"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/family-invite/list/":
    get:
      operationId: health-tribe_family-invite_list_list
      description: |-
        API for listing HealthTribe invites.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MeInvitedAsHealthTribe"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/get-health-tribe-invite/{token}/":
    get:
      operationId: health-tribe_get-health-tribe-invite_read
      description: |-
        Internal API to get HealthTribeInvite object.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/GetHealthTribeInvite"
      tags:
      - health-tribe
    parameters:
    - name: token
      in: path
      required: true
      type: string
  "/health-tribe/internal/invite/accept/":
    post:
      operationId: health-tribe_internal_invite_accept_create
      description: |-
        Internal API used by clients to accept invite across clients
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/InternalHealthTribeAcceptInvite"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/InternalHealthTribeAcceptInvite"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/internal/invite/cancel/":
    put:
      operationId: health-tribe_internal_invite_cancel_update
      description: |-
        Internal API used by clients to cancel invite across clients
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/InternalHealthTribeCancelInvite"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/InternalHealthTribeCancelInvite"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/internal/invite/decline/":
    put:
      operationId: health-tribe_internal_invite_decline_update
      description: |-
        Internal API used by clients to decline invite across clients
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/InternalHealthTribeDeclineInvite"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/InternalHealthTribeDeclineInvite"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/invite-updates/":
    get:
      operationId: health-tribe_invite-updates_list
      description: |-
        API to get and update the count of health tribe updates
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    put:
      operationId: health-tribe_invite-updates_update
      description: |-
        API to get and update the count of health tribe updates
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/invite/":
    get:
      operationId: health-tribe_invite_list
      description: |-
        API to send Health Tribe Invite.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    post:
      operationId: health-tribe_invite_create
      description: |-
        API to send Health Tribe Invite.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/invite/accept/":
    post:
      operationId: health-tribe_invite_accept_create
      description: |-
        API for accepting Health Tribe Invite.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HealthTribeAcceptInvite"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HealthTribeAcceptInvite"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/invite/cancel/{id}/":
    post:
      operationId: health-tribe_invite_cancel_create
      description: |-
        API for cancelling Health Tribe Invite.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - health-tribe
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/health-tribe/invite/decline/":
    post:
      operationId: health-tribe_invite_decline_create
      description: |-
        API for declining Health Tribe Invite.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HealthTribeDeclineInvite"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HealthTribeDeclineInvite"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/invite/{id}/":
    get:
      operationId: health-tribe_invite_read
      description: |-
        API to send Health Tribe Invite.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    patch:
      operationId: health-tribe_invite_partial_update
      description: |-
        API to send Health Tribe Invite.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/health-tribe/invitee/update-image/{id}/":
    post:
      operationId: health-tribe_invitee_update-image_create
      description: |-
        View to update the invitee's profile photo of the Health Tribe Invitee object
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HealthTribeInviteeProfile"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HealthTribeInviteeProfile"
      tags:
      - health-tribe
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/health-tribe/me-invited-as-health-tribe/list/":
    get:
      operationId: health-tribe_me-invited-as-health-tribe_list_list
      description: |-
        API for listing HealthTribe invites.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MeInvitedAsHealthTribe"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/member-details/":
    get:
      operationId: health-tribe_member-details_read
      description: |-
        API to fetch member details from original client for impersonation switch on Health Tribe
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/HealthTribeMemberDetail"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/member-list/":
    get:
      operationId: health-tribe_member-list_list
      description: |-
        API to get list of Health Tribe Members
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/members-list/":
    get:
      operationId: health-tribe_members-list_list
      description: |-
        API to get list of Health Tribe Members
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/members/":
    post:
      operationId: health-tribe_members_create
      description: |-
        API for getting Health Tribe Members for the uuids given in the post data
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/GetHealthTribeMemberData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/GetHealthTribeMemberData"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/parent-attestation/":
    post:
      operationId: health-tribe_parent-attestation_create
      description: |-
        API to sign parent attestation for age of consent<age<18 child
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ParentAttestation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ParentAttestation"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/permission-choices/":
    get:
      operationId: health-tribe_permission-choices_list
      description: |-
        API for listing choices for sections of clinical summary.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HealthTribePermissionChoices"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/permissions/":
    get:
      operationId: health-tribe_permissions_read
      description: |-
        API for listing given permissions to Health Tribe member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/HealthTribeMemberPermissionsAccess"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/re-invite/{invite_id}/":
    post:
      operationId: health-tribe_re-invite_create
      description: To re-send invite for selected Health Tribe Invite and cancel all
        pending invites
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HealthTribeInvite"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HealthTribeInvite"
      tags:
      - health-tribe
    parameters:
    - name: invite_id
      in: path
      required: true
      type: string
  "/health-tribe/relationship-choices/":
    get:
      operationId: health-tribe_relationship-choices_list
      description: |-
        API for listing set of relationship choices for health tribe.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/remove-inviter/{invitee_username}/{inviter_username}/":
    delete:
      operationId: health-tribe_remove-inviter_delete
      description: |-
        Internal API for removing Health Tribe Invitee Object.
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - health-tribe
    parameters:
    - name: invitee_username
      in: path
      required: true
      type: string
    - name: inviter_username
      in: path
      required: true
      type: string
  "/health-tribe/remove-suggestion/":
    post:
      operationId: health-tribe_remove-suggestion_create
      description: |-
        API to remove a member from family suggestion
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/RemoveFamilySuggestion"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/RemoveFamilySuggestion"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/remove/{id}/":
    delete:
      operationId: health-tribe_remove_delete
      description: |-
        API for removing Health Tribe.
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - health-tribe
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/health-tribe/section-choices/":
    get:
      operationId: health-tribe_section-choices_list
      description: |-
        API for listing choices for sections of clinical summary.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HealthTribeSectionChoices"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/section-choices/new/":
    get:
      operationId: health-tribe_section-choices_new_list
      description: |-
        API for listing choices for sections of clinical summary.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HealthTribeSectionChoices"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/switch-choices/":
    get:
      operationId: health-tribe_switch-choices_list
      description: |-
        API for listing choices for switching between Health Tribe.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HealthTribeChoices"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/switch/":
    post:
      operationId: health-tribe_switch_create
      description: |-
        API for switching between Health Tribe members.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HealthTribeSwitch"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HealthTribeSwitch"
      tags:
      - health-tribe
    parameters: []
  "/health-tribe/{id}/":
    get:
      operationId: health-tribe_read
      description: API to get details of a Health tribe
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health-tribe
    post:
      operationId: health-tribe_create
      description: API to update permissions of a Health tribe
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - health-tribe
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/human-api/activity-type-choices/":
    get:
      operationId: human-api_activity-type-choices_list
      description: |-
        API to fetch list of choices for Activity-Type
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActivityType"
      tags:
      - human-api
    parameters: []
  "/human-api/add-missing-health-tracking-device/":
    post:
      operationId: human-api_add-missing-health-tracking-device_create
      description: |-
        API to add health tracking device, which are not visible on add source page
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddHealthTrackingMissingDevice"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AddHealthTrackingMissingDevice"
      tags:
      - human-api
    parameters: []
  "/human-api/apple-health/add-data/":
    post:
      operationId: human-api_apple-health_add-data_create
      description: API Method to update apple health data
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - human-api
    parameters: []
  "/human-api/apple-health/last-updated/":
    get:
      operationId: human-api_apple-health_last-updated_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - human-api
    post:
      operationId: human-api_apple-health_last-updated_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - human-api
    parameters: []
  "/human-api/care-plan/{care_plan_id}/":
    get:
      operationId: human-api_care-plan_read
      description: |-
        API to get detail of a care plan
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - human-api
    parameters:
    - name: care_plan_id
      in: path
      required: true
      type: string
  "/human-api/connect/":
    post:
      operationId: human-api_connect_create
      description: |-
        API for Human API connect flow
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HumanAPIConnect"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HumanAPIConnect"
      tags:
      - human-api
    parameters: []
  "/human-api/disconnected-sources/":
    get:
      operationId: human-api_disconnected-sources_list
      description: |-
        API view to get Disconnected Sources' list for current user
        ---
         GET:
            type:
                sources:
                    type: SourceNameSerializer
                    required: True
                id:
                    type: int
                    required: True
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/DisconnectedSources"
      tags:
      - human-api
    parameters: []
  "/human-api/disconnected-sources/{source_member_id}/":
    delete:
      operationId: human-api_disconnected-sources_delete
      description: |-
        API view to delete a particular Disconnected Sources's data
        ---
         DELETE:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - human-api
    parameters:
    - name: source_member_id
      in: path
      required: true
      type: string
  "/human-api/dynosense/login/":
    post:
      operationId: human-api_dynosense_login_create
      description: |-
        API to verify dynosense login credentials
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/DynosenseAccount"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/DynosenseAccount"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id-list/":
    post:
      operationId: human-api_health-id-list_create
      description: |-
        API to Add Health Devices on Connected Health Dashboard
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/":
    get:
      operationId: human-api_health-id_list
      description: |-
        API to view Health ID details for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HealthID"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/activity/add/":
    post:
      operationId: human-api_health-id_activity_add_create
      description: |-
        API to create Activity entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ActivityAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ActivityAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/blood-glucose/":
    get:
      operationId: human-api_health-id_blood-glucose_list
      description: |-
        API to view Blood Glucose tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: timestamp
        in: query
        description: ''
        required: false
        type: string
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      - name: value
        in: query
        description: ''
        required: false
        type: number
      - name: notes
        in: query
        description: ''
        required: false
        type: string
      - name: meal_tag
        in: query
        description: ''
        required: false
        type: string
      - name: medication_tag
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/blood-glucose/add/":
    post:
      operationId: human-api_health-id_blood-glucose_add_create
      description: |-
        API to create BloodGlucose entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/BloodGlucoseAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/BloodGlucoseAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/blood-glucose/all/":
    get:
      operationId: human-api_health-id_blood-glucose_all_list
      description: |-
        API to view All Data for Blood Glucose for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/BloodGlucoseAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/blood-oxygen/":
    get:
      operationId: human-api_health-id_blood-oxygen_list
      description: |-
        API to view Blood Oxygen tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: timestamp
        in: query
        description: ''
        required: false
        type: string
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      - name: value
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/blood-oxygen/add/":
    post:
      operationId: human-api_health-id_blood-oxygen_add_create
      description: |-
        API to create BloodOxygen entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/BloodOxygenAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/BloodOxygenAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/blood-oxygen/all/":
    get:
      operationId: human-api_health-id_blood-oxygen_all_list
      description: |-
        API to view All Data for Blood Oxygen for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/BloodOxygenAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/blood-pressure/":
    get:
      operationId: human-api_health-id_blood-pressure_list
      description: |-
        API to view Blood Pressure tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: timestamp
        in: query
        description: ''
        required: false
        type: string
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      - name: heart_rate
        in: query
        description: ''
        required: false
        type: string
      - name: systolic
        in: query
        description: ''
        required: false
        type: number
      - name: diastolic
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/blood-pressure/add/":
    post:
      operationId: human-api_health-id_blood-pressure_add_create
      description: |-
        API to create BloodPressure entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/BloodPressureAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/BloodPressureAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/blood-pressure/all/":
    get:
      operationId: human-api_health-id_blood-pressure_all_list
      description: |-
        API to view All Data for Blood Pressure for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/BloodPressureAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/bmi/":
    get:
      operationId: human-api_health-id_bmi_list
      description: |-
        API to view BMI tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: timestamp
        in: query
        description: ''
        required: false
        type: string
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      - name: value
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/bmi/add/":
    post:
      operationId: human-api_health-id_bmi_add_create
      description: |-
        API to create BMI entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/BMIAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/BMIAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/bmi/all/":
    get:
      operationId: human-api_health-id_bmi_all_list
      description: |-
        API to view All Data for BMI for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/BMIAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/body-fat/":
    get:
      operationId: human-api_health-id_body-fat_list
      description: |-
        API to view Body Fat tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: timestamp
        in: query
        description: ''
        required: false
        type: string
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      - name: value
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/body-fat/add/":
    post:
      operationId: human-api_health-id_body-fat_add_create
      description: |-
        API to create BodyFat entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/BodyFatAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/BodyFatAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/body-fat/all/":
    get:
      operationId: human-api_health-id_body-fat_all_list
      description: |-
        API to view All Data for Body Fat for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/BodyFatAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/calories/":
    get:
      operationId: human-api_health-id_calories_list
      description: |-
        API to view Calories tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: duration
        in: query
        description: ''
        required: false
        type: number
      - name: distance
        in: query
        description: ''
        required: false
        type: number
      - name: steps
        in: query
        description: ''
        required: false
        type: number
      - name: calories
        in: query
        description: ''
        required: false
        type: number
      - name: source_data
        in: query
        description: ''
        required: false
        type: string
      - name: time_series
        in: query
        description: ''
        required: false
        type: string
      - name: date
        in: query
        description: ''
        required: false
        type: string
      - name: vigorous
        in: query
        description: ''
        required: false
        type: number
      - name: moderate
        in: query
        description: ''
        required: false
        type: number
      - name: light
        in: query
        description: ''
        required: false
        type: number
      - name: sedentary
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/calories/all/":
    get:
      operationId: human-api_health-id_calories_all_list
      description: |-
        API to view All Data for Calories for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/CaloriesAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/fitness/":
    get:
      operationId: human-api_health-id_fitness_list
      description: |-
        API to view Fitness tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: duration
        in: query
        description: ''
        required: false
        type: number
      - name: distance
        in: query
        description: ''
        required: false
        type: number
      - name: steps
        in: query
        description: ''
        required: false
        type: number
      - name: calories
        in: query
        description: ''
        required: false
        type: number
      - name: source_data
        in: query
        description: ''
        required: false
        type: string
      - name: time_series
        in: query
        description: ''
        required: false
        type: string
      - name: date
        in: query
        description: ''
        required: false
        type: string
      - name: vigorous
        in: query
        description: ''
        required: false
        type: number
      - name: moderate
        in: query
        description: ''
        required: false
        type: number
      - name: light
        in: query
        description: ''
        required: false
        type: number
      - name: sedentary
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/fitness/all/":
    get:
      operationId: human-api_health-id_fitness_all_list
      description: |-
        API to view All Data for Fitness for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/FitnessAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/heart-rate/":
    get:
      operationId: human-api_health-id_heart-rate_list
      description: |-
        API to view Heart Rate tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: timestamp
        in: query
        description: ''
        required: false
        type: string
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      - name: value
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/heart-rate/add/":
    post:
      operationId: human-api_health-id_heart-rate_add_create
      description: |-
        API to create HeartRate entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HeartRateAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HeartRateAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/heart-rate/all/":
    get:
      operationId: human-api_health-id_heart-rate_all_list
      description: |-
        API to view All Data for Heart Rate for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HeartRateAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/height/":
    get:
      operationId: human-api_health-id_height_list
      description: |-
        API to view Height tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: timestamp
        in: query
        description: ''
        required: false
        type: string
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: value
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/height/add/":
    post:
      operationId: human-api_health-id_height_add_create
      description: |-
        API to create Height entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HeightAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HeightAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/height/all/":
    get:
      operationId: human-api_health-id_height_all_list
      description: |-
        API to view All Data for Height for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HeightAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/sleep/":
    get:
      operationId: human-api_health-id_sleep_list
      description: |-
        API to view Sleep tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: start_time
        in: query
        description: ''
        required: false
        type: string
      - name: end_time
        in: query
        description: ''
        required: false
        type: string
      - name: time_asleep
        in: query
        description: ''
        required: false
        type: number
      - name: time_awake
        in: query
        description: ''
        required: false
        type: number
      - name: main_sleep
        in: query
        description: ''
        required: false
        type: string
      - name: efficiency
        in: query
        description: ''
        required: false
        type: number
      - name: time_to_fall_asleep
        in: query
        description: ''
        required: false
        type: number
      - name: time_after_wakeup
        in: query
        description: ''
        required: false
        type: number
      - name: time_in_bed
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/sleep/add/":
    post:
      operationId: human-api_health-id_sleep_add_create
      description: |-
        API to create Sleep entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SleepAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SleepAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/sleep/all/":
    get:
      operationId: human-api_health-id_sleep_all_list
      description: |-
        API to view All Data for Sleep for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/SleepAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/steps/":
    get:
      operationId: human-api_health-id_steps_list
      description: |-
        API to view Steps tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: duration
        in: query
        description: ''
        required: false
        type: number
      - name: distance
        in: query
        description: ''
        required: false
        type: number
      - name: steps
        in: query
        description: ''
        required: false
        type: number
      - name: calories
        in: query
        description: ''
        required: false
        type: number
      - name: source_data
        in: query
        description: ''
        required: false
        type: string
      - name: time_series
        in: query
        description: ''
        required: false
        type: string
      - name: date
        in: query
        description: ''
        required: false
        type: string
      - name: vigorous
        in: query
        description: ''
        required: false
        type: number
      - name: moderate
        in: query
        description: ''
        required: false
        type: number
      - name: light
        in: query
        description: ''
        required: false
        type: number
      - name: sedentary
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/steps/all/":
    get:
      operationId: human-api_health-id_steps_all_list
      description: |-
        API to view All Data for Steps for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/StepsAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/temperature/":
    get:
      operationId: human-api_health-id_temperature_list
      description: |-
        API to view Temperature tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: timestamp
        in: query
        description: ''
        required: false
        type: string
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      - name: value
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/temperature/add/":
    post:
      operationId: human-api_health-id_temperature_add_create
      description: |-
        API to create Temperature entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/TemperatureAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/TemperatureAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/temperature/all/":
    get:
      operationId: human-api_health-id_temperature_all_list
      description: |-
        API to view All Data for Temperature for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/TemperatureAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/toggle/":
    post:
      operationId: human-api_health-id_toggle_create
      description: |-
        API to toggle visibility of given Health ID parameter on health-id dashboard of member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HealthIDToggle"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HealthIDToggle"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/water-consumption/":
    get:
      operationId: human-api_health-id_water-consumption_list
      description: |-
        API to view Water Consumption history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: date
        in: query
        description: ''
        required: false
        type: string
      - name: value
        in: query
        description: ''
        required: false
        type: number
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/water-consumption/add/":
    post:
      operationId: human-api_health-id_water-consumption_add_create
      description: |-
        API to create Water Consumption entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/WaterConsumptionAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/WaterConsumptionAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/water-consumption/all/":
    get:
      operationId: human-api_health-id_water-consumption_all_list
      description: |-
        API to view All Data for Water-Consumption for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/WaterConsumptionAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/weight/":
    get:
      operationId: human-api_health-id_weight_list
      description: |-
        API to view Weight tracking history for a member
        ---
      parameters:
      - name: hapi_data
        in: query
        description: ''
        required: false
        type: string
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: self_reported
        in: query
        description: ''
        required: false
        type: string
      - name: source
        in: query
        description: ''
        required: false
        type: string
      - name: resource_id
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_created_at
        in: query
        description: ''
        required: false
        type: string
      - name: human_api_updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: timestamp
        in: query
        description: ''
        required: false
        type: string
      - name: unit
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: value
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GraphData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/weight/add/":
    post:
      operationId: human-api_health-id_weight_add_create
      description: |-
        API to create Weight entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/WeightAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/WeightAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/weight/all/":
    get:
      operationId: human-api_health-id_weight_all_list
      description: |-
        API to view All Data for Weight for Member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/WeightAllData"
      tags:
      - human-api
    parameters: []
  "/human-api/health-id/wellness-choices/":
    get:
      operationId: human-api_health-id_wellness-choices_list
      description: |-
        API view to get health-id wellness-type choices list
        ---
         GET:
            type:
                choices:
                   type: array
                   required: true
                   items:
                       $ref: {'id': 1, 'display_text': 'Calories'}
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HealthIDWellnessTypeChoices"
      tags:
      - human-api
    parameters: []
  "/human-api/immunization/add/":
    post:
      operationId: human-api_immunization_add_create
      description: |-
        API to add immunization for member.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ImmunizationAdd"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ImmunizationAdd"
      tags:
      - human-api
    parameters: []
  "/human-api/immunization/choices/":
    get:
      operationId: human-api_immunization_choices_list
      description: |-
        API for choices of immunization.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ImmunizationChoice"
      tags:
      - human-api
    parameters: []
  "/human-api/lab-panels/":
    get:
      operationId: human-api_lab-panels_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - human-api
    parameters: []
  "/human-api/labs/":
    get:
      operationId: human-api_labs_read
      summary: API to get all lab test reports of member
      description: "---"
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - human-api
    parameters: []
  "/human-api/labs/test-type/choices/":
    get:
      operationId: human-api_labs_test-type_choices_list
      description: |-
        API view to get Test Type choices for a member on the Labs filter page
        ---
         GET:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/TestTypeChoices"
      tags:
      - human-api
    parameters: []
  "/human-api/locked-human-api-id/":
    post:
      operationId: human-api_locked-human-api-id_create
      description: |-
        API to add or update human_api_id to LockedHumanApiId table
        :param request: Request object
        :param args: Arguments
        :param kwargs: Keyword arguments
        :return: Response object
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/LockedHumanApiIdAddUpdate"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/LockedHumanApiIdAddUpdate"
      tags:
      - human-api
    parameters: []
  "/human-api/mark-labs-visited/{test_type}/":
    post:
      operationId: human-api_mark-labs-visited_create
      description: |-
        API to Mark Labs as visited
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - human-api
    parameters:
    - name: test_type
      in: path
      required: true
      type: string
  "/human-api/narratives/":
    get:
      operationId: human-api_narratives_list
      summary: API to get all narratives of member
      description: "---"
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberNarrative"
      tags:
      - human-api
    parameters: []
  "/human-api/no-connected-device/":
    post:
      operationId: human-api_no-connected-device_create
      description: |-
        API to mark a member has no wellness connected device
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - human-api
    parameters: []
  "/human-api/notify/":
    post:
      operationId: human-api_notify_create
      summary: View for handling data update task on receiving notifications from
        human-api.
      description: |-
        This has been made a normal view instead of an APIView because its only purpose is to handle post requests from HUMAN-API for providing notifications,
        and hence does not need any feature of an APIView.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - human-api
    parameters: []
  "/human-api/plan-of-care/add/":
    post:
      operationId: human-api_plan-of-care_add_create
      description: |-
        API to add plans of care for member.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PlanOfCareAdd"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PlanOfCareAdd"
      tags:
      - human-api
    parameters: []
  "/human-api/preferred-wellness-device/{source_member_wellness_type_id}/":
    put:
      operationId: human-api_preferred-wellness-device_update
      description: |-
        API view to set a Preferred device for specific metric
        ---
         PUT:
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: source_member_wellness_type_id
                  description: id of source_member_wellness_data_type which is to be preferred for specific metric
                  type: integer
                  paramType: path
                  required: true
            omit_parameters: body
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PreferredDevice"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PreferredDevice"
      tags:
      - human-api
    parameters:
    - name: source_member_wellness_type_id
      in: path
      required: true
      type: string
  "/human-api/procedure/add/":
    post:
      operationId: human-api_procedure_add_create
      description: |-
        API to create Procedure entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberProcedureAdd"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberProcedureAdd"
      tags:
      - human-api
    parameters: []
  "/human-api/procedure/type-ahead/":
    get:
      operationId: human-api_procedure_type-ahead_list
      description: |-
        API to support type ahead search for procedure.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ProcedureTypeAhead"
      tags:
      - human-api
    parameters: []
  "/human-api/terms/":
    post:
      operationId: human-api_terms_create
      description: |-
        API to mark that user has accepted terms and conditions for medical sources.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/Terms"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/Terms"
      tags:
      - human-api
    parameters: []
  "/human-api/test_notify/":
    post:
      operationId: human-api_test_notify_create
      summary: View for testing notifications that are indirectly arriving from human-api.
      description: |-
        This has been made a normal view instead of an APIView because its only purpose is to test reposted notifications from HUMAN-API,
        and hence does not need any feature of an APIView.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - human-api
    parameters: []
  "/human-api/update-medical-sources/":
    get:
      operationId: human-api_update-medical-sources_list
      description: |-
        API for updating connected sources of member from Human API for medical sources
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/SourceMember"
      tags:
      - human-api
    post:
      operationId: human-api_update-medical-sources_create
      description: |-
        API for updating connected sources of member from Human API for medical sources
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SourceMember"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SourceMember"
      tags:
      - human-api
    parameters: []
  "/human-api/update-sources/":
    get:
      operationId: human-api_update-sources_list
      description: |-
        API for updating connected sources of member from Human API
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/SourceMember"
      tags:
      - human-api
    post:
      operationId: human-api_update-sources_create
      description: |-
        API for updating connected sources of member from Human API
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SourceMember"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SourceMember"
      tags:
      - human-api
    parameters: []
  "/human-api/vital/add/":
    post:
      operationId: human-api_vital_add_create
      description: |-
        API to create Vital entry
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/VitalAddData"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/VitalAddData"
      tags:
      - human-api
    parameters: []
  "/human-api/wellness-device-data-type/{source_member_wellness_type_id}/":
    patch:
      operationId: human-api_wellness-device-data-type_partial_update
      description: View to update the member's wellness device
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/WellnessDeviceDataTypeUpdate"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/WellnessDeviceDataTypeUpdate"
      tags:
      - human-api
    parameters:
    - name: source_member_wellness_type_id
      in: path
      required: true
      type: string
  "/human-api/wellness-device/{source_member_id}/":
    post:
      operationId: human-api_wellness-device_create
      description: View to toggle the member's wellness device import data
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - human-api
    parameters:
    - name: source_member_id
      in: path
      required: true
      type: string
  "/human-api/wellness-devices/":
    get:
      operationId: human-api_wellness-devices_list
      description: |-
        API view to get list of wellness devices with respect to specific metrics
        ---
         GET:
            type:
                Blood-Pressure:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
                Weight:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
                Heart-Rate:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
                BMI:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
                Height:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
                Blood-oxygen:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
                Blood-Glucose:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
                Sleep:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
                Body-Fat:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
                Activity:
                    required: true
                    pytype: apps.human_api.serializers.WellnessDeviceSerializer
                    type: array
                    items:
                        $ref: WellnessDeviceSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: source_member_id
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/WellnessDevice"
      tags:
      - human-api
    parameters: []
  "/journeys/":
    get:
      operationId: journeys_list
      description: |-
        API to view a list of journeys which a member is eligible for.
        populates MemberJourneys for the current member when they call this API for the first time.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberJourneyWithLevelDetails"
      tags:
      - journeys
    parameters: []
  "/journeys/achievement-badge-section/":
    get:
      operationId: journeys_achievement-badge-section_list
      description: |-
        API for get badge list containing total available badges and received badges by a user
        ---
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/AchievementBadgeSection"
      tags:
      - journeys
    parameters: []
  "/journeys/achievement-user-section/":
    get:
      operationId: journeys_achievement-user-section_read
      description: |-
        API for get user's level and rank details for achievement's user section
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AchievementUserSection"
      tags:
      - journeys
    parameters: []
  "/journeys/badge-detail/{id}/":
    get:
      operationId: journeys_badge-detail_read
      description: |-
        API for get badge details
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/BadgeDetail"
      tags:
      - journeys
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this badge.
      required: true
      type: integer
  "/journeys/care-need-challenges/{care_need_condition_id}/":
    get:
      operationId: journeys_care-need-challenges_read
      description: |-
        API to get Care need member stage challenge list.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/CareNeedChallengeList"
      tags:
      - journeys
    parameters:
    - name: care_need_condition_id
      in: path
      required: true
      type: string
  "/journeys/care-need-detail/{id}/":
    get:
      operationId: journeys_care-need-detail_read
      description: |-
        API to get Care need detail.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/CareNeedDetail"
      tags:
      - journeys
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this challenge sub class.
      required: true
      type: integer
  "/journeys/care-need-dismiss/{care_need_id}":
    post:
      operationId: journeys_care-need-dismiss_create
      description: |-
        API to dismiss the care need
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/CareNeedDismissal"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/CareNeedDismissal"
      tags:
      - journeys
    parameters:
    - name: care_need_id
      in: path
      required: true
      type: string
  "/journeys/care-need-questionnaire/{identity}/detail/":
    get:
      operationId: journeys_care-need-questionnaire_detail_read
      description: |-
        API to get the details of questionnaire for members
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters:
    - name: identity
      in: path
      required: true
      type: string
  "/journeys/care-need-questionnaire/{questionnaire_id}/":
    post:
      operationId: journeys_care-need-questionnaire_create
      description: |-
        API to create creating Member Questionnaires and Member Questionnaire Responses when a user attempts a questionnaire.
        Also create care need closing history.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - journeys
    parameters:
    - name: questionnaire_id
      in: path
      required: true
      type: string
  "/journeys/challenges/get-latest-stage-challenge/{member_stage_challenge_id}/":
    get:
      operationId: journeys_challenges_get-latest-stage-challenge_read
      description: |-
        API to get MemberStageChallenge object of the latest stage from previous stage's msc id.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/GetLatestStageChallenge"
      tags:
      - journeys
    parameters:
    - name: member_stage_challenge_id
      in: path
      required: true
      type: string
  "/journeys/challenges/{member_stage_challenge_id}/":
    get:
      operationId: journeys_challenges_read
      description: |-
        API to view goal (challenge) details for a given member-stage-challenge id.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters:
    - name: member_stage_challenge_id
      in: path
      required: true
      type: string
  "/journeys/challenges/{member_stage_challenge_id}/complete-manual/":
    put:
      operationId: journeys_challenges_complete-manual_update
      description: |-
        API to mark manual challenge completed.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters:
    - name: member_stage_challenge_id
      in: path
      required: true
      type: string
  "/journeys/challenges/{member_stage_challenge_id}/toggle-challenge-deferral/":
    put:
      operationId: journeys_challenges_toggle-challenge-deferral_update
      description: |-
        API to defer and un-defer a challenge.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ToggleChallengeDeferral"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/ToggleChallengeDeferral"
      tags:
      - journeys
    parameters:
    - name: member_stage_challenge_id
      in: path
      required: true
      type: string
  "/journeys/current-stage-detail/":
    get:
      operationId: journeys_current-stage-detail_list
      description: |-
        API to get paginated details of journey's current stage
        ---
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters: []
  "/journeys/get-eligible-msc-id/{challenge_id}/":
    get:
      operationId: journeys_get-eligible-msc-id_read
      description: |-
        API to get msc id for given challenge pk
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters:
    - name: challenge_id
      in: path
      required: true
      type: string
  "/journeys/level-completed-stages/{member_journey_id}/":
    get:
      operationId: journeys_level-completed-stages_read
      description: |-
        API to view the journey details for a member for the completed stages of a level.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters:
    - name: member_journey_id
      in: path
      required: true
      type: string
  "/journeys/my-health-journey-id/":
    get:
      operationId: journeys_my-health-journey-id_read
      description: |-
        API to get the 'My Health Journey' id of member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberMyHealthJourneyId"
      tags:
      - journeys
    parameters: []
  "/journeys/questionnaire/{identity}/detail/":
    get:
      operationId: journeys_questionnaire_detail_read
      description: |-
        API to get the details of questionnaire for members
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters:
    - name: identity
      in: path
      required: true
      type: string
  "/journeys/questionnaire/{questionnaire_id}/":
    post:
      operationId: journeys_questionnaire_create
      description: |-
        API to create creating Member Questionnaires and Member Questionnaire Responses when a user attempts a questionnaire.
        Also complete challenges in case a challenge completion is dependent on the questionnaire.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - journeys
    parameters:
    - name: questionnaire_id
      in: path
      required: true
      type: string
  "/journeys/reward-partners/{id}/":
    get:
      operationId: journeys_reward-partners_read
      description: |-
        API to view details for reward-partner with given id
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/RewardPartnerWithRewardsAndMemberScore"
      tags:
      - journeys
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this reward partner.
      required: true
      type: integer
  "/journeys/rewards-filter-choices/":
    get:
      operationId: journeys_rewards-filter-choices_list
      description: |-
        API to get reward filter options: reward type and reward partner
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/RewardFilterMultiSelect"
      tags:
      - journeys
    parameters: []
  "/journeys/rewards/":
    get:
      operationId: journeys_rewards_list
      description: |-
        API to get list of rewards for Members
        ---
      parameters:
      - name: enough_points
        in: query
        description: ''
        required: false
        type: string
      - name: reward_partner
        in: query
        description: ''
        required: false
        type: string
      - name: reward_type
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters: []
  "/journeys/rewards/history/":
    get:
      operationId: journeys_rewards_history_list
      description: |-
        API to view list of for reward order for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberRewardOrder"
      tags:
      - journeys
    parameters: []
  "/journeys/rewards/history/{member_reward_order_id}/":
    get:
      operationId: journeys_rewards_history_read
      description: |-
        API to view details of reward order history for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberRewardOrderDetail"
      tags:
      - journeys
    parameters:
    - name: member_reward_order_id
      in: path
      required: true
      type: string
  "/journeys/rewards/{reward_id}/":
    get:
      operationId: journeys_rewards_read
      description: |-
        API to view details for reward with given id
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters:
    - name: reward_id
      in: path
      required: true
      type: string
  "/journeys/rewards/{reward_id}/claim/":
    get:
      operationId: journeys_rewards_claim_list
      description: |-
        API to claim a reward.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Address"
      tags:
      - journeys
    parameters:
    - name: reward_id
      in: path
      required: true
      type: string
  "/journeys/rewards/{reward_id}/claim/confirm/":
    post:
      operationId: journeys_rewards_claim_confirm_create
      description: |-
        API to confirm a reward for claiming it.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - journeys
    parameters:
    - name: reward_id
      in: path
      required: true
      type: string
  "/journeys/rewards/{reward_id}/target/":
    post:
      operationId: journeys_rewards_target_create
      description: |-
        API to mark reward as targeted.
        Marks the previously targeted reward(if it exists) as 'untargeted', thereby updating its end_date.
        If this API is called on a targeted reward, it will mark it as 'untargeted' and does not create a new targeted MemberReward object
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - journeys
    parameters:
    - name: reward_id
      in: path
      required: true
      type: string
  "/journeys/sectional-challenges/":
    get:
      operationId: journeys_sectional-challenges_list
      description: |-
        serializer: journeys_serializers.SectionalChallengeSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid
                - code: 404
                  message: Invalid lookup id
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/SectionalChallenge"
      tags:
      - journeys
    parameters: []
  "/journeys/sectional-challenges/{unique_id}/":
    get:
      operationId: journeys_sectional-challenges_read
      description: |-
        API for getting all active section challenges
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SectionalChallenge"
      tags:
      - journeys
    parameters:
    - name: unique_id
      in: path
      required: true
      type: string
  "/journeys/update-low-challenge-modal-activity/":
    post:
      operationId: journeys_update-low-challenge-modal-activity_create
      description: |-
        API to check and update low challenge modal activity
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - journeys
    parameters: []
  "/journeys/update-member-badge/":
    post:
      operationId: journeys_update-member-badge_create
      description: |-
        API to check badge logic for badge earning
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - journeys
    parameters: []
  "/journeys/variable-templates/":
    get:
      operationId: journeys_variable-templates_list
      description: |-
        API for getting all variable templates.
        ---
      parameters:
      - name: title
        in: query
        description: ''
        required: false
        type: string
      - name: return_type
        in: query
        description: ''
        required: false
        type: string
      - name: type
        in: query
        description: ''
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/VariableTemplateList"
      tags:
      - journeys
    parameters: []
  "/journeys/{member_journey_id}/":
    get:
      operationId: journeys_read
      description: |-
        API to view the journey details for a member including completed challenges, available challenges, target reward information for a given level.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - journeys
    parameters:
    - name: member_journey_id
      in: path
      required: true
      type: string
  "/journeys/{member_journey_id}/enroll/":
    post:
      operationId: journeys_enroll_create
      description: |-
        API to enroll a member to member-journey with given id.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - journeys
    parameters:
    - name: member_journey_id
      in: path
      required: true
      type: string
  "/journeys/{member_journey_id}/unenroll/":
    post:
      operationId: journeys_unenroll_create
      description: |-
        API to un-enroll a member from member-journey with given id.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - journeys
    parameters:
    - name: member_journey_id
      in: path
      required: true
      type: string
  "/mastercard-id-assist/cancel/":
    post:
      operationId: mastercard-id-assist_cancel_create
      description: |-
        Member SignUp API TODO UPDATE COMMENTS HERE
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AbandonedUserRegistration"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AbandonedUserRegistration"
      tags:
      - mastercard-id-assist
    parameters: []
  "/mastercard-id-assist/verify/{route}/":
    post:
      operationId: mastercard-id-assist_verify_create
      description: |-
        Class to retrieve and confirm user Identity.
        This API will provide information about an individual user through various methods that includes
        mobile device, sms, & phone number.
        See "bwell_integrations/mastercard_id_assist/schemas.py" for parameter & validation information:
        1. MC_SCHEMA_LIST: Payload json schemas used for validiation
        2. MC_ROUTES:  route requirements ex. /?route=user
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - mastercard-id-assist
    parameters:
    - name: route
      in: path
      required: true
      type: string
  "/member-interaction/":
    get:
      operationId: member-interaction_list
      description: View Set to create and list MemberInteraction
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member-interaction
    post:
      operationId: member-interaction_create
      description: View Set to create and list MemberInteraction
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member-interaction
    parameters: []
  "/member-questionnaire/assessment-list":
    get:
      operationId: member-questionnaire_assessment-list_list
      description: |-
        API for Assessments list page
        ---
      parameters:
      - name: status
        in: query
        description: ''
        required: false
        type: string
      - name: completed_at
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
      tags:
      - member-questionnaire
    parameters: []
  "/member-questionnaire/assessment/{identity}/detail/":
    get:
      operationId: member-questionnaire_assessment_detail_read
      description: |-
        API for Assessments detail page
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AssessmentQuestionAnswer"
      tags:
      - member-questionnaire
    parameters:
    - name: identity
      in: path
      required: true
      type: string
  "/member-questionnaire/assessment/{questionnaire_id}/attempt/":
    post:
      operationId: member-questionnaire_assessment_attempt_create
      description: |-
        API to create creating Member Questionnaires and Member Questionnaire Responses when a user attempts a questionnaire.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member-questionnaire
    parameters:
    - name: questionnaire_id
      in: path
      required: true
      type: string
  "/member-questionnaire/result-content/{questionnaire_id}/":
    post:
      operationId: member-questionnaire_result-content_create
      description: |-
        API to get questionnaire content based on user response to show on assessment last page
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member-questionnaire
    parameters:
    - name: questionnaire_id
      in: path
      required: true
      type: string
  "/member/account-verification/":
    post:
      operationId: member_account-verification_create
      description: Validate token and verify account
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberAccountVerification"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberAccountVerification"
      tags:
      - member
    parameters: []
  "/member/account-verification/token-check/":
    get:
      operationId: member_account-verification_token-check_list
      description: |-
        API to verify a token for account deletion.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberAccountVerification"
      tags:
      - member
    parameters: []
  "/member/accountability-survey-quiz/":
    get:
      operationId: member_accountability-survey-quiz_read
      description: |-
        Api to get and update Accountability quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AccountabilitySurveyQuiz"
      tags:
      - member
    post:
      operationId: member_accountability-survey-quiz_create
      summary: API to update AccountabilitySurvey Quiz data
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AccountabilitySurveyQuiz"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AccountabilitySurveyQuiz"
      tags:
      - member
    parameters: []
  "/member/accumulators/":
    get:
      operationId: member_accumulators_list
      description: |-
        API to fetch Accumulators for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ServiceType"
      tags:
      - member
    parameters: []
  "/member/add-family-member-email/{family_member_id}/":
    put:
      operationId: member_add-family-member-email_update
      description: |-
        API to add email for a family member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddFamilyMemberEmail"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AddFamilyMemberEmail"
      tags:
      - member
    parameters:
    - name: family_member_id
      in: path
      required: true
      type: string
  "/member/all-family-members/":
    get:
      operationId: member_all-family-members_list
      description: Get list of all family members
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/AllFamilyMemberList"
      tags:
      - member
    parameters: []
  "/member/allergies/":
    get:
      operationId: member_allergies_list
      description: |-
        API to view a list of allergies for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PatientAllergyList"
      tags:
      - member
    parameters: []
  "/member/allergies/add/":
    post:
      operationId: member_allergies_add_create
      description: |-
        API to add allergies for member
        choices for severity, status and allergy type as described by possible choices from /api/members/allergy-filter-choices/
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddPatientAllergy"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AddPatientAllergy"
      tags:
      - member
    parameters: []
  "/member/allergies/mark-none/":
    post:
      operationId: member_allergies_mark-none_create
      description: |-
        API to mark a member has no Allergies
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/allergies/{allergy_id}/":
    get:
      operationId: member_allergies_read
      description: |-
        API to retrieve, update and delete allergy member
        Choices for severity, status and allergy type as described by possible choices from /api/members/allergy-filter-choices/
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PatientAllergy"
      tags:
      - member
    put:
      operationId: member_allergies_update
      description: |-
        API to retrieve, update and delete allergy member
        Choices for severity, status and allergy type as described by possible choices from /api/members/allergy-filter-choices/
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PatientAllergy"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PatientAllergy"
      tags:
      - member
    delete:
      operationId: member_allergies_delete
      description: |-
        API to retrieve, update and delete allergy member
        Choices for severity, status and allergy type as described by possible choices from /api/members/allergy-filter-choices/
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters:
    - name: allergy_id
      in: path
      required: true
      type: string
  "/member/allergy-add-choices/":
    get:
      operationId: member_allergy-add-choices_list
      description: |-
        API to get Allergy choices list (ie severity, status and allergy names) used in Adding new allergy for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PatientAllergyAddChoiceList"
      tags:
      - member
    parameters: []
  "/member/allergy-filter-choices/":
    get:
      operationId: member_allergy-filter-choices_list
      description: |-
        API to get Allergy Filter choices list ie severity, status and allergy types
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PatientAllergyFilterChoiceList"
      tags:
      - member
    parameters: []
  "/member/authorize-locations/":
    post:
      operationId: member_authorize-locations_create
      description: |-
        API for authorizing the physician practice locations
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/LocationsList"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/LocationsList"
      tags:
      - member
    parameters: []
  "/member/authorize-practice/":
    post:
      operationId: member_authorize-practice_create
      description: |-
        API to authorize a practice for a user.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PracticeAuthorization"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PracticeAuthorization"
      tags:
      - member
    parameters: []
  "/member/cards/":
    get:
      operationId: member_cards_list
      description: API to list cards for the Member
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberCard"
      tags:
      - member
    post:
      operationId: member_cards_create
      description: |-
        serializer: patients_serializers.MemberCardSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 400
                  message: Invalid data
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberCard"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberCard"
      tags:
      - member
    parameters: []
  "/member/cards/{id}/":
    get:
      operationId: member_cards_read
      description: API to get details of a card
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberCard"
      tags:
      - member
    patch:
      operationId: member_cards_partial_update
      description: API to update details of a card
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberCard"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberCard"
      tags:
      - member
    delete:
      operationId: member_cards_delete
      description: |-
        omit_serializer: True
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: id
                  description: ID for the card
                  type: string
                  paramType: path
                  required: true
            parameters_strategy: replace
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 404
                  message: Not Found
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/member/care-needs/clinical-summary/":
    get:
      operationId: member_care-needs_clinical-summary_read
      description: |-
        API for clinical summary page.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/ClinicalSummary"
      tags:
      - member
    parameters: []
  "/member/clinical-summary/relation-choices/":
    get:
      operationId: member_clinical-summary_relation-choices_list
      description: |-
        API to get list of relation choices for clinical summary share
        ---
         GET:
            type:
                choices:
                    type: array
                    required: true
                    items:
                        $ref: {"display_text": "Father", "id": "father"}
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ClinicalSummaryRelationChoices"
      tags:
      - member
    parameters: []
  "/member/clinical-summary/section-choices/":
    get:
      operationId: member_clinical-summary_section-choices_list
      description: |-
        API for listing choices for sections of clinical summary.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ClinicalSummarySectionChoices"
      tags:
      - member
    parameters: []
  "/member/clinical-summary/share/":
    post:
      operationId: member_clinical-summary_share_create
      description: |-
        API to share data of clinical summary.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ClinicalSummaryShare"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ClinicalSummaryShare"
      tags:
      - member
    parameters: []
  "/member/clinical-summary/share/access/":
    post:
      operationId: member_clinical-summary_share_access_create
      description: |-
        API to save information of user who accesses Clinical Summary Pdf.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ClinicalSummaryPDFAccess"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ClinicalSummaryPDFAccess"
      tags:
      - member
    parameters: []
  "/member/clinical-summary/share/history/":
    get:
      operationId: member_clinical-summary_share_history_list
      description: |-
        API for listing share-history of clinical summary.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ClinicalSummaryShareHistory"
      tags:
      - member
    parameters: []
  "/member/clinical-summary/share/{clinical_summary_share_id}/":
    get:
      operationId: member_clinical-summary_share_read
      description: |-
        API for getting details of a particular clinical summary share.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/ClinicalSummaryShareDetail"
      tags:
      - member
    parameters:
    - name: clinical_summary_share_id
      in: path
      required: true
      type: string
  "/member/complete-demo/":
    post:
      operationId: member_complete-demo_create
      description: API to update members completed demo info
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/confirm-your-doctors/":
    get:
      operationId: member_confirm-your-doctors_list
      description: View to list doctors for confirm your doctor flow, and to confirm
        doctors as responded by user.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    post:
      operationId: member_confirm-your-doctors_create
      description: View to list doctors for confirm your doctor flow, and to confirm
        doctors as responded by user.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/connection-refusal-survey/{id}/":
    get:
      operationId: member_connection-refusal-survey_read
      description: Retrieve a list of questions for a survey
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    put:
      operationId: member_connection-refusal-survey_update
      description: Update view
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/member/consent-choices/":
    get:
      operationId: member_consent-choices_list
      description: |-
        API for choices of consent
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ConsentChoice"
      tags:
      - member
    parameters: []
  "/member/coping-with-stress-survey/":
    get:
      operationId: member_coping-with-stress-survey_read
      description: |-
        API for Coping with Stress Survey for member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/CopingWithStressSurvey"
      tags:
      - member
    post:
      operationId: member_coping-with-stress-survey_create
      summary: API to update CopingWithStress survey data.
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/CopingWithStressSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/CopingWithStressSurvey"
      tags:
      - member
    parameters: []
  "/member/covid19-symptom-checker-survey/":
    get:
      operationId: member_covid19-symptom-checker-survey_read
      description: |-
        Api to get and update Covid19 symptom checker Survey
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/Covid19Assessment"
      tags:
      - member
    post:
      operationId: member_covid19-symptom-checker-survey_create
      description: API to update covid-19 survey
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/Covid19Assessment"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/Covid19Assessment"
      tags:
      - member
    parameters: []
  "/member/daily-sleep-check-in-survey/":
    get:
      operationId: member_daily-sleep-check-in-survey_read
      description: |-
        Api to get and update Daily sleep check in survey quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/DailySleepCheckIn"
      tags:
      - member
    post:
      operationId: member_daily-sleep-check-in-survey_create
      summary: API to update Daily Sleep check In survey
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/DailySleepCheckIn"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/DailySleepCheckIn"
      tags:
      - member
    parameters: []
  "/member/dashboard-api/":
    get:
      operationId: member_dashboard-api_read
      description: |-
        API to view details for member dashboard
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/DashBoard"
      tags:
      - member
    parameters: []
  "/member/dashboard-feature-content/":
    get:
      operationId: member_dashboard-feature-content_list
      description: Get list of dashboard featured contents for a member
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/dashboard/":
    get:
      operationId: member_dashboard_list
      description: |-
        API to view details for member dashboard
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/delete-member-account/":
    delete:
      operationId: member_delete-member-account_delete
      description: |-
        API to delete a member's account.
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters: []
  "/member/depression-screening-quiz/":
    get:
      operationId: member_depression-screening-quiz_read
      description: |-
        Api to get and update Depression screening quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/DepressionScreeningQuiz"
      tags:
      - member
    post:
      operationId: member_depression-screening-quiz_create
      summary: API to update Depression Screening Quiz data
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/DepressionScreeningQuiz"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/DepressionScreeningQuiz"
      tags:
      - member
    parameters: []
  "/member/diabetes-management-survey/":
    get:
      operationId: member_diabetes-management-survey_read
      description: |-
        API for Diabetes Management Survey for member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/DiabetesManagementSurvey"
      tags:
      - member
    post:
      operationId: member_diabetes-management-survey_create
      summary: API to update Diabetes Management survey data.
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/DiabetesManagementSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/DiabetesManagementSurvey"
      tags:
      - member
    parameters: []
  "/member/diabetes-survey/":
    get:
      operationId: member_diabetes-survey_read
      description: |-
        Api to get and update diabetes quiz.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/DiabetesSurvey"
      tags:
      - member
    post:
      operationId: member_diabetes-survey_create
      summary: API to update Diabetes Quiz data
      description: |-
        Sample POST Data:<br/>
            { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/DiabetesSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/DiabetesSurvey"
      tags:
      - member
    parameters: []
  "/member/disable-mrc-walkthrough/":
    post:
      operationId: member_disable-mrc-walkthrough_create
      description: |-
        API to disable walkthrough for the member's medical record collection
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/dismiss-member-connection/":
    post:
      operationId: member_dismiss-member-connection_create
      description: |-
        Overriden to delete multiple member connection ids sent in data and soft-delete member_portal if these are the
        only member_connections associated with the member_portal.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberConnectionDismiss"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberConnectionDismiss"
      tags:
      - member
    delete:
      operationId: member_dismiss-member-connection_delete
      description: |-
        API for dismissing Member Connection.
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters: []
  "/member/dismiss-member-connection/{member_connection_id}/":
    post:
      operationId: member_dismiss-member-connection_create
      description: |-
        Overriden to delete multiple member connection ids sent in data and soft-delete member_portal if these are the
        only member_connections associated with the member_portal.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberConnectionDismiss"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberConnectionDismiss"
      tags:
      - member
    delete:
      operationId: member_dismiss-member-connection_delete
      description: |-
        API for dismissing Member Connection.
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters:
    - name: member_connection_id
      in: path
      required: true
      type: string
  "/member/documents/":
    get:
      operationId: member_documents_read
      description: |-
        API to create or retrieve a member document.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberDocumentView"
      tags:
      - member
    post:
      operationId: member_documents_create
      description: |-
        API to create or retrieve a member document.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberDocumentCreate"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberDocumentCreate"
      tags:
      - member
    parameters: []
  "/member/dyslipidemia-four-survey/":
    get:
      operationId: member_dyslipidemia-four-survey_read
      description: |-
        Api to get and update Dyslipidemia Four quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/DyslipidemiaFourSurvey"
      tags:
      - member
    post:
      operationId: member_dyslipidemia-four-survey_create
      summary: API to update Dyslipidemia Four Quiz data
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/DyslipidemiaFourSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/DyslipidemiaFourSurvey"
      tags:
      - member
    parameters: []
  "/member/empty-payor/{payor_id}/":
    get:
      operationId: member_empty-payor_read
      description: Get Empty member payor id if exists
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters:
    - name: payor_id
      in: path
      required: true
      type: string
  "/member/family-history/":
    get:
      operationId: member_family-history_list
      description: |-
        API to get the diagnosis and disease/conditions specific history of member's family members.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/family-member-invite/":
    post:
      operationId: member_family-member-invite_create
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: family_members
                  description: listt of detail of family member i.e first_name, last_name, date_of_birth, email
                  paramType: body
                  required: true
            responseMessages:
                - code: 400
                  message: Dict with spouse and children key having info about missing info
                - Code: 201
                  message: None
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/FamilyMemberInvite"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMemberInvite"
      tags:
      - member
    parameters: []
  "/member/family-member-invite/{id}/":
    patch:
      operationId: member_family-member-invite_partial_update
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: pk
                  description: Database id of family member invite
                  paramType: path
                  type: integer
                  required: true
                - name: family_members
                  description: detail of family members i.e first_name, last_name, date_of_birth, email
                  paramType: body
                  required: true
            responseMessages:
                - code: 400
                  message: Dict with spouse and children key having info about missing info
                - Code: 201
                  message: None
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/FamilyMemberInvite"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMemberInvite"
      tags:
      - member
    delete:
      operationId: member_family-member-invite_delete
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: pk
                  description: Database id of family member invite
                  paramType: path
                  type: integer
                  required: true
            responseMessages:
                - Code: 204
                  message: Success
                - code: 404
                  message: Not found
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/member/family-member-list/":
    get:
      operationId: member_family-member-list_list
      description: Get list of registered and invite family members
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/AllFamilyMember"
      tags:
      - member
    parameters: []
  "/member/family-member-relationship/":
    get:
      operationId: member_family-member-relationship_list
      description: |-
        API view to get FamilyMember Relation-type choices list
        ---
         GET:
            type:
                choices:
                    type: array
                    required: true
                    items:
                        $ref: {"display_text":"Father", "id":1}
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/FamilyMemberInviteRelationship"
      tags:
      - member
    parameters: []
  "/member/family-member-teladoc-detail/{family_member_id}/":
    get:
      operationId: member_family-member-teladoc-detail_read
      description: |-
        API to fetch various teladoc details for a family member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMemberTeladocDetail"
      tags:
      - member
    parameters:
    - name: family_member_id
      in: path
      required: true
      type: string
  "/member/family-members-invited/mark-none/":
    post:
      operationId: member_family-members-invited_mark-none_create
      description: |-
        API to mark a member has no family members
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/family-members/":
    get:
      operationId: member_family-members_list
      description: |-
        API to view details of family members for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/FamilyMemberAllDetails"
      tags:
      - member
    parameters: []
  "/member/family-members/tree/":
    get:
      operationId: member_family-members_tree_list
      description: |-
        API to get details for Family Member Tree
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/FamilyMemberTree"
      tags:
      - member
    parameters: []
  "/member/family-members/tree/{family_member_id}/":
    get:
      operationId: member_family-members_tree_read
      description: |-
        API to get details for Family Member Tree
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMemberTreeDetail"
      tags:
      - member
    delete:
      operationId: member_family-members_tree_delete
      description: |-
        API to get details for Family Member Tree
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters:
    - name: family_member_id
      in: path
      required: true
      type: string
  "/member/family-members/tree/{family_member_id}/re-invite/":
    post:
      operationId: member_family-members_tree_re-invite_create
      description: |-
        API to re-invite family member
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters:
    - name: family_member_id
      in: path
      required: true
      type: string
  "/member/family-members/{family_member_id}/questionnaire/":
    get:
      operationId: member_family-members_questionnaire_read
      description: |-
        API to get family member questionnaire questions and answer options for member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMemberQuestionnaire"
      tags:
      - member
    post:
      operationId: member_family-members_questionnaire_create
      summary: API to update family member questionnaire data<br/>
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  name: Name of Family Member(Required), <br/>
                  "relationship": Choice from ( 1-Father, 2-Mother, 3-Maternal Grandfather, 4-Maternal Grandmother, 5-Paternal Grandfather, 6-Paternal Grandmother,
                           7-Brother, 8-Sister, 9-Son, 10-Daughter, 11-Maternal Uncle, 12-Maternal Aunt, 13-Paternal Uncle, 14-Paternal Aunt) (Required), <br/>
                  "race": Choice from ("AI"-American Indian or Alaska Native, "A"-Asian, "B"-Black or African-American,
                           "NH"-Native Hawaiian/Other Pacific Islander, "O"-Other, "W"-White) (Required), <br/>
                  "date_of_death": Date of death of family member - Format(YYYY-MM-DD), <br/>
                  "deceased_age": Age of death of family member, required if deceased, <br/>
                  "deceased_cause": ID of high level diagnose object that caused death of family member, required if deceased - options in
                           GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "date_of_birth": Date of birth of family member - Format(YYYY-MM-DD) (Required),<br/>
                  "gender": Choice from ("M"-Male, "F"-Female) (Required), <br/>
                  "weight": Weight of family member in pounds (Required), <br/>
                  "height": Height of family member in inches (Required), <br/>
                  "smoker": Choice from ("smoker"-Smoker, "ex-smoker"-Ex-Smoker, "non-smoker"-Non-smoker, "not-sure"-Not Sure) (Required),<br/>
                  "smoke_frequency": Choice from ("lt_1"-Less than 1 pack a day, "eq_1"-About 1 pack a day, "gt_1"-More than 1 pack a day)
                           (Required if smoker = "smoker" or "ex-smoker)", <br/>
                  "alcohol": Choice from ("R"-Regular, "S"-Sometimes, "N"-Never, "NS"-Not Sure) (Required),<br/>
                  "exercise": Choice from ("Y"-Yes, "N"-No, "NS"-Not Sure) (Required), <br/>
                  "allergies": Allergies as array of dicts in format {"id": id}, "id" being id of allergy, options in
                           GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "cancer": Cancer as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/,<br/>
                  "clotting_disorders": Clotting Disorder as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "coronary_bypass_surgery": Coronary Bypass Surgery as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "dementia_alzheimer": Dementia Alzheimer as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "diabetes": Diabetes as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "gastrointestinal_disorders": Gastrointestinal Disorders as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "heart_diseases": Heart Diseases as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "high_blood_pressure": high_blood_pressure as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "high_cholesterol": High Cholesterol as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "hip_fracture": Hip Fracture as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "hypertension": Hypertension as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "kidney_diseases": Kidney Diseases as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "lung_diseases": Lung Diseases as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "osteoporosis": Osteoporosis as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "psychological_disorders": Psychological Disorders as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "septicemia": Septicemia as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "stroke_brain_attack": Stroke Brain Attack as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "sudden_infant_death_syndrome": Sudden Infant Death Syndrome as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in GET /api/member/family-members/{family_member_id}/questionnaire/, <br/>
                  "other": other as array of dicts in format {"id": "name", "value": value}, "name" being name of the high level diagnose and "value" being diagnosed age, <br/>
              }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/FamilyMemberQuestionnaire"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMemberQuestionnaire"
      tags:
      - member
    parameters:
    - name: family_member_id
      in: path
      required: true
      type: string
  "/member/family-selector-choices/":
    get:
      operationId: member_family-selector-choices_list
      description: |-
        API to fetch options for Family Selector for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/FamilySelectorChoices"
      tags:
      - member
    parameters: []
  "/member/family-selector/":
    post:
      operationId: member_family-selector_create
      description: |-
        API to impersonate Family Member selected from Family Selector
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/FamilySelector"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/FamilySelector"
      tags:
      - member
    parameters: []
  "/member/fhir_authorization_callback/":
    get:
      operationId: member_fhir_authorization_callback_list
      description: |-
        API to fetch access token from FHIR api and initiate patient records fetch.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/financial-wellness-survey/":
    get:
      operationId: member_financial-wellness-survey_read
      description: Allow access only for Trinity user.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/FinancialWellnessSurvey"
      tags:
      - member
    post:
      operationId: member_financial-wellness-survey_create
      summary: API to update Financial Wellness Survey data. Restrict survey for only
        Trinity users.
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/FinancialWellnessSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/FinancialWellnessSurvey"
      tags:
      - member
    parameters: []
  "/member/health-assessment-list/":
    get:
      operationId: member_health-assessment-list_list
      description: |-
        API for Health Assessment/Survey list page.
        ---
      parameters:
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: survey
        in: query
        description: ''
        required: false
        type: string
      - name: completed_at
        in: query
        description: ''
        required: false
        type: string
      - name: status
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HealthAssessment"
      tags:
      - member
    parameters: []
  "/member/health-environment-follow-up-survey/":
    get:
      operationId: member_health-environment-follow-up-survey_read
      description: |-
        Api to get and update HealthFollowUpSurvey quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/HealthFollowUpSurvey"
      tags:
      - member
    post:
      operationId: member_health-environment-follow-up-survey_create
      description: |-
        API to update Satisfaction Survey survey
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HealthFollowUpSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HealthFollowUpSurvey"
      tags:
      - member
    parameters: []
  "/member/health-history-quiz/":
    get:
      operationId: member_health-history-quiz_read
      description: |-
        API for internal quiz questions and answers for member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/HealthHistoryQuiz"
      tags:
      - member
    post:
      operationId: member_health-history-quiz_create
      summary: API to update health history data
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HealthHistoryQuiz"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HealthHistoryQuiz"
      tags:
      - member
    parameters: []
  "/member/help-survey-quiz/":
    get:
      operationId: member_help-survey-quiz_read
      description: |-
        Api to get and update Help Survey quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/HelpSurveyQuiz"
      tags:
      - member
    post:
      operationId: member_help-survey-quiz_create
      summary: API to update HelpSurvey Quiz data
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HelpSurveyQuiz"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/HelpSurveyQuiz"
      tags:
      - member
    parameters: []
  "/member/hld-add-choices/":
    get:
      operationId: member_hld-add-choices_list
      description: |-
        API to get HLD add choices list (ie severity and status) used in adding new HLD for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HighLevelDiagnoseAddChoiceList"
      tags:
      - member
    parameters: []
  "/member/insurances-list/":
    get:
      operationId: member_insurances-list_list
      description: |-
        API for getting list of Insurance
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/InsuranceList"
      tags:
      - member
    parameters: []
  "/member/insurances/":
    get:
      operationId: member_insurances_list
      description: List Member Plans API
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberPlan"
      tags:
      - member
    parameters: []
  "/member/insurances/{member_plan_id}/":
    get:
      operationId: member_insurances_read
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: member_plan_id
                  description: ID of the member plan
                  type: integer
                  paramType: path
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 404
                  message: Not Found
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberPlan"
      tags:
      - member
    parameters:
    - name: member_plan_id
      in: path
      required: true
      type: string
  "/member/invite-family-member/":
    post:
      operationId: member_invite-family-member_create
      description: |-
        API view to invite family members
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    put:
      operationId: member_invite-family-member_update
      description: |-
        API view to invite family members
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/invite-family-member/update/{family_member_id}/":
    post:
      operationId: member_invite-family-member_update_create
      description: |-
        API view to invite family members
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    put:
      operationId: member_invite-family-member_update_update
      description: |-
        API view to invite family members
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters:
    - name: family_member_id
      in: path
      required: true
      type: string
  "/member/invite-family-member/{family_member_id}/history-questionnaire/":
    get:
      operationId: member_invite-family-member_history-questionnaire_read
      description: |-
        API to get family member questionnaire questions and answer options for internal user.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMedicalQuestionnaire"
      tags:
      - member
    post:
      operationId: member_invite-family-member_history-questionnaire_create
      description: |-
        API to get family member questionnaire questions and answer options for internal user.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/FamilyMedicalQuestionnaire"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMedicalQuestionnaire"
      tags:
      - member
    parameters:
    - name: family_member_id
      in: path
      required: true
      type: string
  "/member/invite-family-member/{family_member_id}/questionnaire/":
    post:
      operationId: member_invite-family-member_questionnaire_create
      description: |-
        API to update family member questionnaire data<br/>
        Sample POST Data:<br/>
              { <br/>
                  name: Name of Family Member(Required), <br/>
                  "relationship": Choice from ( 1-Father, 2-Mother, 3-Maternal Grandfather, 4-Maternal Grandmother, 5-Paternal Grandfather, 6-Paternal Grandmother,
                           7-Brother, 8-Sister, 9-Son, 10-Daughter, 11-Maternal Uncle, 12-Maternal Aunt, 13-Paternal Uncle, 14-Paternal Aunt) (Required), <br/>
                  "race": Choice from ("AI"-American Indian or Alaska Native, "A"-Asian, "B"-Black or African-American,
                           "NH"-Native Hawaiian/Other Pacific Islander, "O"-Other, "W"-White) (Required), <br/>
                  "date_of_death": Date of death of family member - Format(YYYY-MM-DD), <br/>
                  "deceased_age": Age of death of family member, required if deceased, <br/>
                  "deceased_cause": ID of high level diagnose object that caused death of family member, required if deceased - options in
                           POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "date_of_birth": Date of birth of family member - Format(YYYY-MM-DD) (Required),<br/>
                  "gender": Choice from ("M"-Male, "F"-Female) (Required), <br/>
                  "weight": Weight of family member in pounds, <br/>
                  "height": Height of family member in inches, <br/>
                  "smoker": Choice from ("smoker"-Smoker, "ex-smoker"-Ex-Smoker, "non-smoker"-Non-smoker, "not-sure"-Not Sure) (Required),<br/>
                  "smoke_frequency": Choice from ("lt_1"-Less than 1 pack a day, "eq_1"-About 1 pack a day, "gt_1"-More than 1 pack a day)
                           (Required if smoker = "smoker" or "ex-smoker)", <br/>
                  "alcohol": Choice from ("R"-Regular, "S"-Sometimes, "N"-Never, "NS"-Not Sure) (Required),<br/>
                  "exercise": Choice from ("Y"-Yes, "N"-No, "NS"-Not Sure) (Required), <br/>
                  "allergies": Allergies as array of dicts in format {"id": id}, "id" being id of allergy, options in
                           POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "cancer": Cancer as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/,<br/>
                  "clotting_disorders": Clotting Disorder as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "coronary_bypass_surgery": Coronary Bypass Surgery as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "dementia_alzheimer": Dementia Alzheimer as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "diabetes": Diabetes as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "gastrointestinal_disorders": Gastrointestinal Disorders as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "heart_diseases": Heart Diseases as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "high_blood_pressure": high_blood_pressure as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "high_cholesterol": High Cholesterol as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "hip_fracture": Hip Fracture as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "hypertension": Hypertension as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "kidney_diseases": Kidney Diseases as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "lung_diseases": Lung Diseases as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "osteoporosis": Osteoporosis as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "psychological_disorders": Psychological Disorders as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "septicemia": Septicemia as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "stroke_brain_attack": Stroke Brain Attack as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "sudden_infant_death_syndrome": Sudden Infant Death Syndrome as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being diagnosed age,
                           options in POST /api/member/invite-family-member/{uid}/{fmid}/confirm/, <br/>
                  "other": other as array of dicts in format {"id": "name", "value": value}, "name" being name of the high level diagnose and "value" being diagnosed age, <br/>
              }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/FamilyMemberQuestionnaire"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMemberQuestionnaire"
      tags:
      - member
    parameters:
    - name: family_member_id
      in: path
      required: true
      type: string
  "/member/invite-family-member/{uid}/{fmid}/confirm/":
    post:
      operationId: member_invite-family-member_confirm_create
      description: |-
        API to fetch questionnaire for Family Member ID and UID (from Family Member Invite flow - invite email) from
        Survey URL (/#/survey/{{ uid }}/{{ fmid }}/)
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/FamilyMemberInvitationValidation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMemberInvitationValidation"
      tags:
      - member
    parameters:
    - name: fmid
      in: path
      required: true
      type: string
    - name: uid
      in: path
      required: true
      type: string
  "/member/invite-family-member/{uid}/{fmid}/history-questionnaire/":
    get:
      operationId: member_invite-family-member_history-questionnaire_read
      description: |-
        API to get family member questionnaire questions and answer options for External user.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMedicalQuestionnaire"
      tags:
      - member
    post:
      operationId: member_invite-family-member_history-questionnaire_create
      description: |-
        API to get family member questionnaire questions and answer options for External user.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/FamilyMedicalQuestionnaire"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/FamilyMedicalQuestionnaire"
      tags:
      - member
    parameters:
    - name: fmid
      in: path
      required: true
      type: string
    - name: uid
      in: path
      required: true
      type: string
  "/member/mark-portal-seen/":
    post:
      operationId: member_mark-portal-seen_create
      description: |-
        API to mark member portals as seen.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/medfusion-user-detail/":
    get:
      operationId: member_medfusion-user-detail_read
      description: |-
        API for retrieving medfusion user details of the member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedfusionUser"
      tags:
      - member
    parameters: []
  "/member/medfusion-users/":
    get:
      operationId: member_medfusion-users_list
      description: |-
        API for retrieving medfusion user uuid and profile id of the members
        ---
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/MedfusionUserInfo"
      tags:
      - member
    parameters: []
  "/member/medical-doc/":
    get:
      operationId: member_medical-doc_list
      description: |-
        API for medical docs list page
        ---
      parameters:
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: doc_type
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: name
        in: query
        description: ''
        required: false
        type: string
      - name: verification_status
        in: query
        description: ''
        required: false
        type: string
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MedicalDoc"
      tags:
      - member
    parameters: []
  "/member/medical-doc/add/":
    post:
      operationId: member_medical-doc_add_create
      description: |-
        API to add Medical Doc for member
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/medical-doc/share/":
    post:
      operationId: member_medical-doc_share_create
      description: |-
        API for creating MemberMedicalDocShare object.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedicalDocShare"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MedicalDocShare"
      tags:
      - member
    parameters: []
  "/member/medical-doc/share/access/":
    post:
      operationId: member_medical-doc_share_access_create
      description: |-
        API to save information of user who accesses shared medical documents as MemberMedicalDocShareAccess objects.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedicalDocShareAccess"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MedicalDocShareAccess"
      tags:
      - member
    parameters: []
  "/member/medical-doc/share/{medical_doc_share_id}/":
    get:
      operationId: member_medical-doc_share_read
      description: |-
        API for getting details of a particular medical doc share.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedicalDocShareDetail"
      tags:
      - member
    parameters:
    - name: medical_doc_share_id
      in: path
      required: true
      type: string
  "/member/medical-doc/{medical_doc_id}/":
    get:
      operationId: member_medical-doc_read
      description: |-
        API for medical doc detail page
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedicalDocDetail"
      tags:
      - member
    parameters:
    - name: medical_doc_id
      in: path
      required: true
      type: string
  "/member/medical-history-category-choices/":
    get:
      operationId: member_medical-history-category-choices_list
      description: |-
        API to get details for medical history choices
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MedicalHistoryCategoryChoices"
      tags:
      - member
    parameters: []
  "/member/medical-history/new/":
    get:
      operationId: member_medical-history_new_list
      description: |-
        API to get details for medical history for member
        ---
      parameters:
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: member
        in: query
        description: ''
        required: false
        type: string
      - name: member_physician
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: prescription_fill
        in: query
        description: ''
        required: false
        type: string
      - name: claims
        in: query
        description: ''
        required: false
        type: string
      - name: encounters
        in: query
        description: ''
        required: false
        type: string
      - name: assessment
        in: query
        description: ''
        required: false
        type: string
      - name: category
        in: query
        description: ''
        required: false
        type: string
      - name: description
        in: query
        description: ''
        required: false
        type: string
      - name: date
        in: query
        description: ''
        required: false
        type: string
      - name: unknown_physician
        in: query
        description: ''
        required: false
        type: string
      - name: no_claim_line
        in: query
        description: ''
        required: false
        type: string
      - name: member_practice
        in: query
        description: ''
        required: false
        type: string
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      - name: claim
        in: query
        description: ''
        required: false
        type: number
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/medical/questionnaire/":
    get:
      operationId: member_medical_questionnaire_read
      description: |-
        API for medical history questionnaire
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedicalQuestionnaire"
      tags:
      - member
    post:
      operationId: member_medical_questionnaire_create
      summary: API to update medical questionnaire data<br/>
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  "diseases": Diseases as array of dicts in format {"id": id, "value": value}, "id" being id of high level diagnose and "value" being
                           diagnosed age, id and diagnosis age options in GET /api/member/medical/questionnaire/, <br/>
                  "other_diseases": Other Diseases as array of dicts in format {"id": id, "value": value}, "id" being name of disease and "value" being
                           diagnosed age, diagnosis age options in GET /api/member/medical/questionnaire/, <br/>
                  "surgeries": Surgeries as array of dicts in format {"id": id, "value": value}, "id" being id of surgery and "value" being
                           date of surgery, options in GET /api/member/medical/questionnaire/,<br/>
                  "other_surgeries": Other surgeries as array of dicts in format {"id": id, "value": value}, "id" being name of surgery and "value" being
                           date of surgery, <br/>
                  "detailed_surgeries": Detailed surgeries (That take extra details) as array of dicts in format {"id": id, "value": value, key: detail_value},
                           "id" being id of surgery, "value" being date of surgery, "key" being name of the extra detail required by the surgery and
                           "detail_value" being the actual value of the extra detail<br/>
                  "allergies": Allergies as array of dict in format {"id": id, "selected_options": [reaction ids]}, "id" being id of allergy and  seleted options
                               as list of seleted reaction ids
                  "other_reactions": Other reactions as array of dicts in format {"id": Allergy id, "value": reaction name}
                  "other_allergies": Other Allergies as array of dicts in format {"id": Allergy name, "value": reaction name}
                  "detailed_surgeries_category": Detailed Surgery types as array of dict in format {"id": surgery_id, "selected_options": List of selected options}
                  "detailed_diseases_category": Detailed Disease types as array of dict in format {"id": hld id, "selected_options": List of selected options}
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedicalQuestionnaire"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MedicalQuestionnaire"
      tags:
      - member
    parameters: []
  "/member/member-connection-authorization-walkthrough-cancel/":
    post:
      operationId: member_member-connection-authorization-walkthrough-cancel_create
      description: Overriden to update 'is_mrc_walkthrough_canceled' to fasle for
        all member connection ids sent.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberConnectionIdList"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberConnectionIdList"
      tags:
      - member
    parameters: []
  "/member/member-connection-authorization/share/":
    post:
      operationId: member_member-connection-authorization_share_create
      description: |-
        API for creating MemberConnectionAuthorizationShare object.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberConnectionAuthorizationShare"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberConnectionAuthorizationShare"
      tags:
      - member
    parameters: []
  "/member/member-connection-authorization/share/access/":
    post:
      operationId: member_member-connection-authorization_share_access_create
      description: |-
        API to save information of user who accesses shared member connection authorizations as MemberConnectionAuthorizationShareAccess objects.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberConnectionAuthorizationShareAccess"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberConnectionAuthorizationShareAccess"
      tags:
      - member
    parameters: []
  "/member/member-connection-authorization/share/{member_connection_authorization_share_id}/":
    get:
      operationId: member_member-connection-authorization_share_read
      description: |-
        API for getting details of a particular member connection authorization share.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberConnectionAuthorizationShareDetail"
      tags:
      - member
    parameters:
    - name: member_connection_authorization_share_id
      in: path
      required: true
      type: string
  "/member/member-connection-detail/{member_connection_id}/":
    get:
      operationId: member_member-connection-detail_read
      description: |-
        API for detail of a member-connection.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters:
    - name: member_connection_id
      in: path
      required: true
      type: string
  "/member/member-connection-detail/{member_connection_id}/revoke/":
    post:
      operationId: member_member-connection-detail_revoke_create
      description: Created to support 'post' method.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberConnectionRevoke"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberConnectionRevoke"
      tags:
      - member
    parameters:
    - name: member_connection_id
      in: path
      required: true
      type: string
  "/member/member-connection-remove-reasons/":
    get:
      operationId: member_member-connection-remove-reasons_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/ConnectionSurveyOptions"
      tags:
      - member
    parameters: []
  "/member/member-connections-list/":
    get:
      operationId: member_member-connections-list_list
      description: |-
        API for listing all connections of a member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberConnection"
      tags:
      - member
    parameters: []
  "/member/member-consent/":
    get:
      operationId: member_member-consent_list
      description: API to get list of all consents with status for member
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    post:
      operationId: member_member-consent_create
      description: |-
        API for storing device IP address and approval timestamp, member id and approval type
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberConsent"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberConsent"
      tags:
      - member
    parameters: []
  "/member/member-consent/{approval_type}/":
    get:
      operationId: member_member-consent_read
      description: |-
        API to retrieve particular consent status for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    post:
      operationId: member_member-consent_create
      description: |-
        API to retrieve particular consent status for member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberConsentStatus"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberConsentStatus"
      tags:
      - member
    parameters:
    - name: approval_type
      in: path
      required: true
      type: string
  "/member/member-details/{username}/":
    get:
      operationId: member_member-details_read
      description: |-
        API for retrieving details of the member
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters:
    - name: username
      in: path
      required: true
      type: string
  "/member/member-hld/add/":
    post:
      operationId: member_member-hld_add_create
      description: |-
        API to add hld for member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberHighLevelDiagnoseAdd"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberHighLevelDiagnoseAdd"
      tags:
      - member
    parameters: []
  "/member/member-hld/{member_hld_id}/":
    get:
      operationId: member_member-hld_read
      description: |-
        API to update hld for member, get details of member hld and delete member hld
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberHighLevelDiagnoseEdit"
      tags:
      - member
    put:
      operationId: member_member-hld_update
      description: |-
        API to update hld for member, get details of member hld and delete member hld
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberHighLevelDiagnoseEdit"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberHighLevelDiagnoseEdit"
      tags:
      - member
    delete:
      operationId: member_member-hld_delete
      description: |-
        API to update hld for member, get details of member hld and delete member hld
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters:
    - name: member_hld_id
      in: path
      required: true
      type: string
  "/member/member-notifications/":
    get:
      operationId: member_member-notifications_list
      description: List Member Notifications API
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/NotificationDelivery"
      tags:
      - member
    parameters: []
  "/member/member-notifications/clear/":
    delete:
      operationId: member_member-notifications_clear
      description: Clear All Member Notifications API
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters: []
  "/member/member-notifications/count/":
    get:
      operationId: member_member-notifications_count
      description: Count of Internal Delivery Notification for current member
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/NotificationDelivery"
      tags:
      - member
    parameters: []
  "/member/member-notifications/{id}/":
    get:
      operationId: member_member-notifications_read
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: id
                  description: ID of the Notification
                  type: integer
                  paramType: path
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 404
                  message: Not Found
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/NotificationDelivery"
      tags:
      - member
    delete:
      operationId: member_member-notifications_delete
      description: Remove Member Notification API
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/member/member-notifications/{id}/clicked/":
    post:
      operationId: member_member-notifications_clicked
      description: Mark a notification clicked
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/NotificationDelivery"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/NotificationDelivery"
      tags:
      - member
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/member/member-other-support/":
    get:
      operationId: member_member-other-support_list
      description: Get the list of other support items for the client.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/member-points-history/":
    get:
      operationId: member_member-points-history_list
      description: |-
        API for Member Points History page
        ---
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/MemberPointsHistory"
      tags:
      - member
    parameters: []
  "/member/member-portal-automation-status/{member_portal_id}/":
    get:
      operationId: member_member-portal-automation-status_read
      description: |-
        API to retrieve the status of Member Portal Automation
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberPortalAutomationStatus"
      tags:
      - member
    parameters:
    - name: member_portal_id
      in: path
      required: true
      type: string
  "/member/merritt-test-types/":
    get:
      operationId: member_merritt-test-types_list
      description: |-
        API to return available Test Types for the given member
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/new-slider/mark-seen/":
    post:
      operationId: member_new-slider_mark-seen_create
      description: |-
        API to mark that member has seen a new slider
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/nutrition-check-in-two-survey/":
    get:
      operationId: member_nutrition-check-in-two-survey_read
      description: |-
        API for Nutrition Check In Two Survey for member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/NutritionCheckInTwoSurvey"
      tags:
      - member
    post:
      operationId: member_nutrition-check-in-two-survey_create
      summary: API to update Nutrition Check In Two survey data.
      description: |-
        Sample POST Data:<br/>
            { <br/>
                question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/NutritionCheckInTwoSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/NutritionCheckInTwoSurvey"
      tags:
      - member
    parameters: []
  "/member/nutrition-preferences-survey/":
    get:
      operationId: member_nutrition-preferences-survey_read
      description: |-
        API for Nutrition Preferences Survey for member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/NutritionPreferencesSurvey"
      tags:
      - member
    post:
      operationId: member_nutrition-preferences-survey_create
      summary: API to update NutritionPreferencesSurvey data.
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/NutritionPreferencesSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/NutritionPreferencesSurvey"
      tags:
      - member
    parameters: []
  "/member/on-demand-service-preferences/":
    post:
      operationId: member_on-demand-service-preferences_create
      description: |-
        API to set On-demand service preference
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberOnDemandServicePreference"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/MemberOnDemandServicePreference"
      tags:
      - member
    parameters: []
  "/member/onboarding-task/":
    get:
      operationId: member_onboarding-task_list
      description: |-
        API to get list of onboarding task along with its completion status
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/OnboardingTask"
      tags:
      - member
    parameters: []
  "/member/payor-choices/":
    get:
      operationId: member_payor-choices_list
      description: |-
        API to get list of choices for Payor.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/payor-credentials-error/":
    get:
      operationId: member_payor-credentials-error_list
      description: |-
        API to check for credentials error in member's payor
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PayorCredentialError"
      tags:
      - member
    parameters: []
  "/member/payor/add/":
    post:
      operationId: member_payor_add_create
      description: |-
        API to add payors for member.
        Fetch choices for payors from '/api/members/payor-choices'
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddMemberPayor"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AddMemberPayor"
      tags:
      - member
    parameters: []
  "/member/payor/{member_payor_id}/toggle-archive/":
    post:
      operationId: member_payor_toggle-archive_create
      description: |-
        API to toggle MemberPayor archive
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters:
    - name: member_payor_id
      in: path
      required: true
      type: string
  "/member/payor/{member_payor_id}/verify/":
    get:
      operationId: member_payor_verify_read
      description: |-
        API to verify given member-payor.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PayorVerification"
      tags:
      - member
    parameters:
    - name: member_payor_id
      in: path
      required: true
      type: string
  "/member/payor/{payor_id}/":
    get:
      operationId: member_payor_read
      description: |-
        API to update payors for member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/UpdateMemberPayor"
      tags:
      - member
    put:
      operationId: member_payor_update
      description: |-
        API to update payors for member.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UpdateMemberPayor"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/UpdateMemberPayor"
      tags:
      - member
    parameters:
    - name: payor_id
      in: path
      required: true
      type: string
  "/member/phia-subrogation-survey/":
    get:
      operationId: member_phia-subrogation-survey_read
      description: |-
        Api to get and update Phia Subrogation Survey Quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PhiaSubrogationSurvey"
      tags:
      - member
    post:
      operationId: member_phia-subrogation-survey_create
      description: API to update NPS Survey
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PhiaSubrogationSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PhiaSubrogationSurvey"
      tags:
      - member
    parameters: []
  "/member/plan/{member_plan_id}/toggle-archive/":
    post:
      operationId: member_plan_toggle-archive_create
      description: |-
        API to toggle MemberPlan archive
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters:
    - name: member_plan_id
      in: path
      required: true
      type: string
  "/member/policy-benefits/":
    get:
      operationId: member_policy-benefits_read
      description: |-
        Member Policy Benefits Api
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MyPolicyBenefit"
      tags:
      - member
    parameters: []
  "/member/portal/":
    post:
      operationId: member_portal_create
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: portal
                  description: Portal Id
                  type: integer
                  paramType: form
                  required: true
                - name: username
                  description: Username of the user for the member portal
                  type: string
                  paramType: form
                  required: True
                - name: password
                  description: Password of user
                  type: password
                  paramType: form
                  required: True
            parameters_strategy: replace
            responseMessages:
                - code: 400
                  message: Invalid data
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddMemberPortal"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AddMemberPortal"
      tags:
      - member
    parameters: []
  "/member/portal/{id}/":
    put:
      operationId: member_portal_update
      description: Update member portal
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddMemberPortal"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/AddMemberPortal"
      tags:
      - member
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/member/practices/":
    post:
      operationId: member_practices_create
      description: |-
        serializer: patients_serializers.MemberPracticeLocationSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: name
                  description: Name of Practice
                  type: string
                  paramType: form
                  required: true
                - name: address_line_1
                  description: Address 1 for the practice
                  type: string
                  paramType: form
                  required: true
                - name: address_line_2
                  description: Address 2 for the practice
                  type: string
                  paramType: form
                  required: true
                - name: city
                  description: City for the practice
                  type: string
                  paramType: form
                  required: true
                - name: state
                  description: State for the practice
                  type: string
                  paramType: form
                  required: true
                - name: zipcode
                  description: Zipcode for the practice
                  type: string
                  paramType: form
                  required: true
                - name: phone
                  description: Phone number of practice
                  type: string
                  paramType: form
                  required: true
            responseMessages:
                - code: 400
                  message: Invalid phone.
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/practices/{id}/":
    get:
      operationId: member_practices_read
      description: |-
        serializer: patients_serializers.MemberPracticeSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: pk
                  description: ID of practice
                  type: integer
                  paramType: path
                  required: true
                - name: latitude
                  description: Latitude of member location to calculate Miles Away
                  type: decimal
                  paramType: path
                - name: longitude
                  description: Longitude of member location to calculate Miles Away
                  type: decimal
                  paramType: path
                - name: covid_testing_location
                  description: Whether to get only locations which have covid testing facility
                  type: boolean
                  paramType: path
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    put:
      operationId: member_practices_update
      description: |-
        serializer: patients_serializers.MemberPracticeLocationSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: pk
                  description: Id of the practice to be edited
                  type: integer
                  paramType: path
                  required: True
                - name: name
                  description: Name of Practice
                  type: string
                  paramType: form
                  required: true
                - name: address_line_1
                  description: Address 1 for the practice
                  type: string
                  paramType: form
                  required: true
                - name: address_line_2
                  description: Address 2 for the practice
                  type: string
                  paramType: form
                  required: true
                - name: city
                  description: City for the practice
                  type: string
                  paramType: form
                  required: true
                - name: state
                  description: State for the practice
                  type: string
                  paramType: form
                  required: true
                - name: zipcode
                  description: Zipcode for the practice
                  type: string
                  paramType: form
                  required: true
                - name: phone
                  description: Phone number of practice
                  type: string
                  paramType: form
                  required: true
            responseMessages:
                - code: 400
                  message: Invalid data
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    delete:
      operationId: member_practices_delete
      description: |-
        omit_serializer: True
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: pk
                  description: Id of the practice to be deleted
                  type: integer
                  paramType: path
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 404
                  message: Not found
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/member/practices/{practice_id}/connect/":
    post:
      operationId: member_practices_connect_create
      description: |-
        API to connect member and practice
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters:
    - name: practice_id
      in: path
      required: true
      type: string
  "/member/practices/{practice_id}/toggle-favorite/":
    post:
      operationId: member_practices_toggle-favorite_create
      description: |-
        API to toggle favorite attribute of the practice for a member
        If this API is called on a favorite practice, it will 'unfavorite' the practice, otherwise mark it as favorite.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters:
    - name: practice_id
      in: path
      required: true
      type: string
  "/member/practices/{practice_id}/un-delete/":
    put:
      operationId: member_practices_un-delete_update
      description: |-
        API to undelete a self-reported practice and its related data
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters:
    - name: practice_id
      in: path
      required: true
      type: string
  "/member/prediabetes-survey/":
    get:
      operationId: member_prediabetes-survey_read
      description: |-
        Api to get and update pre diabetes survey quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PreDiabetesSurvey"
      tags:
      - member
    post:
      operationId: member_prediabetes-survey_create
      summary: API to update Prediabetes survey
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PreDiabetesSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PreDiabetesSurvey"
      tags:
      - member
    parameters: []
  "/member/profile/":
    get:
      operationId: member_profile_list
      description: |-
        API to view details for member profile
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/profile/client-data-sharing-settings/":
    put:
      operationId: member_profile_client-data-sharing-settings_update
      description: |-
        summary: Set a user's client data sharing setting
          requestBody:
            required: true
            content:
              application/json:
              schema:
                type: object
                properties:
                  is_data_shared_with_client:
                    type: boolean
          responses:
            '200':
              description: Updated
            '401':
              description: Invalid token
            '403':
              description: Not authorized
            '420':
              description: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberClientDataSharingSettings"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberClientDataSharingSettings"
      tags:
      - member
    parameters: []
  "/member/profile/mark-intro-seen/":
    post:
      operationId: member_profile_mark-intro-seen_create
      description: |-
        API to mark search_page_intro_seen true for the member
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/profile/preferences/":
    put:
      operationId: member_profile_preferences_update
      description: |-
        summary: Set a user's preference flags
          requestBody:
            required: true
            content:
              application/json:
              schema:
                type: object
                properties:
                  is_data_shared_with_client:
                    type: boolean
          responses:
            '200':
              description: Updated
            '401':
              description: Invalid token
            '403':
              description: Not authorized
            '420':
              description: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MemberPreference"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberPreference"
      tags:
      - member
    parameters: []
  "/member/profile/remove-family-subscriber/(P{family_member_id}d+)":
    put:
      operationId: member_profile_remove-family-subscriber_update
      description: |-
        API to remove the family subscriber from a Member Profile
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters:
    - name: family_member_id
      in: path
      required: true
      type: string
  "/member/profile/update-email/{uid}/{token}/verify/":
    post:
      operationId: member_profile_update-email_verify_create
      description: |-
        API to validate and update member email-id
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters:
    - name: token
      in: path
      required: true
      type: string
    - name: uid
      in: path
      required: true
      type: string
  "/member/profile/update-pic/":
    post:
      operationId: member_profile_update-pic_create
      description: |-
        View to update profile pic of member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UserProfilePicUpdate"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/UserProfilePicUpdate"
      tags:
      - member
    parameters: []
  "/member/profile/update/":
    get:
      operationId: member_profile_update_read
      description: |-
        API to get and update member's profile information
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    put:
      operationId: member_profile_update_update
      description: |-
        API to get and update member's profile information
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/profile/update/register/":
    put:
      operationId: member_profile_update_register_update
      description: |-
        API to update member's profile information at the time of registration
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/provider-credentials/":
    post:
      operationId: member_provider-credentials_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddProviderCredentials"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AddProviderCredentials"
      tags:
      - member
    parameters: []
  "/member/redox-destination/":
    post:
      operationId: member_redox-destination_create
      description: Web hook for Redox destination to push data
      parameters: []
      responses:
        '201':
          description: ''
      consumes:
      - application/json
      - application/fhir+json
      tags:
      - member
    parameters: []
  "/member/relation-choices/":
    get:
      operationId: member_relation-choices_list
      description: |-
        API view to get Family Member Relation choices list
        ---
         GET:
            type:
                choices:
                    type: array
                    required: true
                    items:
                        $ref: {"display_text":"Brother", "id":7}
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/FamilyMemberRelationChoices"
      tags:
      - member
    parameters: []
  "/member/relation-type-choices/":
    get:
      operationId: member_relation-type-choices_list
      description: |-
        API view to get FamilyMember Relation-type choices list
        ---
         GET:
            type:
                choices:
                    type: array
                    required: true
                    items:
                        $ref: {"display_text":"Father", "id":1}
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/FamilyMemberRelationTypeChoices"
      tags:
      - member
    parameters: []
  "/member/satisfaction-survey/":
    get:
      operationId: member_satisfaction-survey_read
      description: |-
        Api to get and update Satisfaction Survey survey quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SatisfactionSurvey"
      tags:
      - member
    post:
      operationId: member_satisfaction-survey_create
      description: |-
        API to update Satisfaction Survey survey
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SatisfactionSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SatisfactionSurvey"
      tags:
      - member
    parameters: []
  "/member/scraper-login/":
    post:
      operationId: member_scraper-login_create
      description: |-
        API to login to scraper for members with 2FA.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/scraping-in-progress-payors/":
    get:
      operationId: member_scraping-in-progress-payors_list
      description: |-
        API to view list of Member Payors for which scraping is in progress
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberPayorsWithScrapingInProgress"
      tags:
      - member
    parameters: []
  "/member/search-hld/":
    get:
      operationId: member_search-hld_list
      description: |-
        API to search on high level diagnoses by name
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/HighLevelDiagnoseNameId"
      tags:
      - member
    parameters: []
  "/member/set-onboarding-status/":
    post:
      operationId: member_set-onboarding-status_create
      description: |-
        API to set the status of onboarding for user.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/OnboardingStep"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/OnboardingStep"
      tags:
      - member
    parameters: []
  "/member/share-card/":
    post:
      operationId: member_share-card_create
      description: API to email to insurance site and extract data from there.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ShareCard"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/ShareCard"
      tags:
      - member
    parameters: []
  "/member/share-via-email/":
    post:
      operationId: member_share-via-email_create
      description: |-
        Overridden to send email to the provided email.
        Sample POST Data = {
            'email_id': <Email ID>,
            'content_key': <Email Content key>
        }
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - member
    parameters: []
  "/member/sleep-apnea-management-quiz/":
    get:
      operationId: member_sleep-apnea-management-quiz_read
      description: |-
        Api to get and update Sleep Apnea Management quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SleepApneaManagementQuiz"
      tags:
      - member
    post:
      operationId: member_sleep-apnea-management-quiz_create
      summary: API to update SleepApneaManagement Quiz data
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SleepApneaManagementQuiz"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SleepApneaManagementQuiz"
      tags:
      - member
    parameters: []
  "/member/sleep-apnea-quiz/":
    get:
      operationId: member_sleep-apnea-quiz_read
      description: |-
        Api to get and update Sleep Apnea quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SleepApneaQuiz"
      tags:
      - member
    post:
      operationId: member_sleep-apnea-quiz_create
      summary: API to update SleepApnea Quiz data
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SleepApneaQuiz"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SleepApneaQuiz"
      tags:
      - member
    parameters: []
  "/member/social-determinants-survey/":
    get:
      operationId: member_social-determinants-survey_read
      description: |-
        Api to get and update Socail Determinant survey quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/SocialDeterminantSurvey"
      tags:
      - member
    post:
      operationId: member_social-determinants-survey_create
      description: |-
        API to update Social Determinant Survey
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SocialDeterminantSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SocialDeterminantSurvey"
      tags:
      - member
    parameters: []
  "/member/submit-biometric/":
    post:
      operationId: member_submit-biometric_create
      description: |-
        API to submit biometric data
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/BiometricResults"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/BiometricResults"
      tags:
      - member
    parameters: []
  "/member/subscription-company-lead-generation/":
    post:
      operationId: member_subscription-company-lead-generation_create
      description: |-
        API to Send Email having content "Company Name", "Contact Name", "Contact Email"  to sales
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SubscriptionLeadGeneration"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SubscriptionLeadGeneration"
      tags:
      - member
    parameters: []
  "/member/support-appointments/":
    get:
      operationId: member_support-appointments_list
      description: |-
        API to view support appointments associated with a member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PatientSupportAppointment"
      tags:
      - member
    post:
      operationId: member_support-appointments_create
      description: |-
        API to view support appointments associated with a member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PatientSupportAppointment"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PatientSupportAppointment"
      tags:
      - member
    parameters: []
  "/member/support-appointments/remove/{event_id}/":
    delete:
      operationId: member_support-appointments_remove_delete
      description: |-
        API to remove an appointment from the support calendar
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - member
    parameters:
    - name: event_id
      in: path
      required: true
      type: string
  "/member/support-email/":
    post:
      operationId: member_support-email_create
      description: API to submit support email
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/SupportEmail"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/SupportEmail"
      tags:
      - member
    parameters: []
  "/member/support-email/category-choices/":
    get:
      operationId: member_support-email_category-choices_list
      description: |-
        API to get category choices for Support Email
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - member
    parameters: []
  "/member/unknown-payor/add/":
    post:
      operationId: member_unknown-payor_add_create
      description: |-
        API to add unknown payors for member.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddUnknownPayor"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AddUnknownPayor"
      tags:
      - member
    parameters: []
  "/member/vitals/":
    get:
      operationId: member_vitals_list
      description: |-
        API to view a list of allergies for member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/VitalList"
      tags:
      - member
    parameters: []
  "/member/wellness-program-follow-up-survey/":
    get:
      operationId: member_wellness-program-follow-up-survey_read
      description: |-
        Api to get and update Wellness Program follow up quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/WellnessProgramFollowUpSurvey"
      tags:
      - member
    post:
      operationId: member_wellness-program-follow-up-survey_create
      description: |-
        API to update Satisfaction Survey survey
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/WellnessProgramFollowUpSurvey"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/WellnessProgramFollowUpSurvey"
      tags:
      - member
    parameters: []
  "/mychart/refresh-access-token/":
    post:
      operationId: mychart_refresh-access-token_create
      description: |-
        API to refresh and save MyChart access token
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - mychart
    parameters: []
  "/mychart/request-proxy-access/":
    post:
      operationId: mychart_request-proxy-access_create
      description: |-
        API to store the proxy member
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/RequestProxyAccess"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/RequestProxyAccess"
      tags:
      - mychart
    parameters: []
  "/mychart/status-check/":
    post:
      operationId: mychart_status-check_create
      description: |-
        API to do MyChart Status Check and trigger async process to sync data for user's HT member
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - mychart
    parameters: []
  "/nps/eligible-events/":
    get:
      operationId: nps_eligible-events_list
      description: |-
        API to check NPS eligibility
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - nps
    parameters: []
  "/nps/quiz/":
    get:
      operationId: nps_quiz_read
      description: |-
        Api to get and update NPS survey quiz
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/Quiz"
      tags:
      - nps
    post:
      operationId: nps_quiz_create
      description: API to update NPS Survey
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/Quiz"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/Quiz"
      tags:
      - nps
    parameters: []
  "/onboarding-task/":
    get:
      operationId: onboarding-task_list
      description: API to list Onboarding tasks related to users
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - onboarding-task
    parameters: []
  "/payments/charge/":
    get:
      operationId: payments_charge_list
      description: Get the list of charged history
      parameters:
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: stripe_customer
        in: query
        description: ''
        required: false
        type: string
      - name: stripe_id
        in: query
        description: ''
        required: false
        type: string
      - name: status
        in: query
        description: ''
        required: false
        type: string
      - name: amount
        in: query
        description: ''
        required: false
        type: number
      - name: charge_datetime
        in: query
        description: ''
        required: false
        type: string
      - name: card_type
        in: query
        description: ''
        required: false
        type: string
      - name: last_four
        in: query
        description: ''
        required: false
        type: string
      - name: stripe_subscription
        in: query
        description: ''
        required: false
        type: string
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      - name: amount_upto
        in: query
        description: ''
        required: false
        type: number
      - name: amount_from
        in: query
        description: ''
        required: false
        type: number
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/StripeCharge"
      tags:
      - payments
    post:
      operationId: payments_charge_create
      description: Charge Member Default Credit Card for Charge types
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/StripeCharge"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/StripeCharge"
      tags:
      - payments
    parameters: []
  "/payments/charge/charge-type/":
    get:
      operationId: payments_charge_charge_type
      description: List Charge types
      parameters:
      - name: created_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_at
        in: query
        description: ''
        required: false
        type: string
      - name: updated_through
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process
        in: query
        description: ''
        required: false
        type: string
      - name: updating_process_meta
        in: query
        description: ''
        required: false
        type: string
      - name: updated_by
        in: query
        description: ''
        required: false
        type: string
      - name: active
        in: query
        description: ''
        required: false
        type: string
      - name: original_source
        in: query
        description: ''
        required: false
        type: string
      - name: stripe_customer
        in: query
        description: ''
        required: false
        type: string
      - name: stripe_id
        in: query
        description: ''
        required: false
        type: string
      - name: status
        in: query
        description: ''
        required: false
        type: string
      - name: amount
        in: query
        description: ''
        required: false
        type: number
      - name: charge_datetime
        in: query
        description: ''
        required: false
        type: string
      - name: card_type
        in: query
        description: ''
        required: false
        type: string
      - name: last_four
        in: query
        description: ''
        required: false
        type: string
      - name: stripe_subscription
        in: query
        description: ''
        required: false
        type: string
      - name: from_date
        in: query
        description: ''
        required: false
        type: string
      - name: to_date
        in: query
        description: ''
        required: false
        type: string
      - name: amount_upto
        in: query
        description: ''
        required: false
        type: number
      - name: amount_from
        in: query
        description: ''
        required: false
        type: number
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/StripeCharge"
      tags:
      - payments
    parameters: []
  "/payments/coupons/{stripe_id}/":
    get:
      operationId: payments_coupons_read
      description: |-
        API for processing Stripe Coupon submitted by member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/StripeCoupon"
      tags:
      - payments
    parameters:
    - name: stripe_id
      in: path
      required: true
      type: string
  "/payments/coupons/{stripe_id}/{stripe_plan_id}/":
    get:
      operationId: payments_coupons_read
      description: |-
        API for processing Stripe Coupon submitted by member
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/StripeCoupon"
      tags:
      - payments
    parameters:
    - name: stripe_id
      in: path
      required: true
      type: string
    - name: stripe_plan_id
      in: path
      required: true
      type: string
  "/payments/customers/":
    get:
      operationId: payments_customers_list
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/StripeCustomer"
      tags:
      - payments
    parameters: []
  "/payments/customers/{id}/":
    get:
      operationId: payments_customers_read
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: pk
                  description: ID of the Credit Card
                  type: integer
                  paramType: path
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 404
                  message: Not Found
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/StripeCustomer"
      tags:
      - payments
    patch:
      operationId: payments_customers_partial_update
      description: |-
        serializer: apps.payments.serializers.StripeCustomerUpdateSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: pk
                  description: ID of the Credit Card
                  type: integer
                  paramType: path
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 404
                  message: Not Found
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/StripeCustomer"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/StripeCustomer"
      tags:
      - payments
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/payments/plans/":
    get:
      operationId: payments_plans_list
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/StripePlan"
      tags:
      - payments
    parameters: []
  "/payments/plans/{id}/":
    get:
      operationId: payments_plans_read
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: pk
                  description: ID of the Plan
                  type: integer
                  paramType: path
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 404
                  message: Not Found
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/StripePlan"
      tags:
      - payments
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/payments/sources/":
    get:
      operationId: payments_sources_list
      description: |-
        serializer: apps.payments.serializers.StripeSourceSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/StripeSource"
      tags:
      - payments
    post:
      operationId: payments_sources_create
      description: |-
        serializer: apps.payments.serializers.StripeSourceSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: token
                  description: Stripe token generated by stripe.js
                  type: string
                  paramType: form
                  required: true
            responseMessages:
                - code: 400
                  message: Invalid data
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/StripeSource"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/StripeSource"
      tags:
      - payments
    parameters: []
  "/payments/sources/count/":
    get:
      operationId: payments_sources_count
      description: Number of Stripe Sources Member account has
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/StripeSource"
      tags:
      - payments
    parameters: []
  "/payments/sources/{id}/":
    delete:
      operationId: payments_sources_delete
      description: |-
        omit_serializer: True
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: pk
                  description: ID of the Credit Card
                  type: integer
                  paramType: path
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 404
                  message: Not Found
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - payments
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/payments/subscriptions/":
    get:
      operationId: payments_subscriptions_list
      description: |-
        serializer: apps.payments.serializers.StripeSubscriptionSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/StripeSubscription"
      tags:
      - payments
    post:
      operationId: payments_subscriptions_create
      description: |-
        serializer: apps.payments.serializers.StripeSubscriptionCreateSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: stripe_plan
                  description: Stripe Plan id.
                  type: string
                  paramType: form
                  required: true
                - name: stripe_coupon
                  description: Stripe Coupon.
                  type: string
                  paramType: form
                  required: false
            responseMessages:
                - code: 400
                  message: Invalid data
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/StripeSubscriptionCreate"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/StripeSubscriptionCreate"
      tags:
      - payments
    parameters: []
  "/payments/subscriptions/active-subscription-list/":
    get:
      operationId: payments_subscriptions_get_all_subscriptions
      description: |-
        Method to return current active StripeSubscription related to logged-in member and it's primary subscriber.
        :param request: Request object.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/StripeSubscription"
      tags:
      - payments
    parameters: []
  "/payments/subscriptions/subscribe/":
    post:
      operationId: payments_subscriptions_subscribe
      description: Method to create new subscription and cards
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/StripeSubscription"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/StripeSubscription"
      tags:
      - payments
    parameters: []
  "/payments/subscriptions/{id}/":
    put:
      operationId: payments_subscriptions_update
      description: API to update subscription
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/StripeSubscription"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/StripeSubscription"
      tags:
      - payments
    delete:
      operationId: payments_subscriptions_delete
      description: API to remove subscription and save un-subscribe survey data
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - payments
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/payments/subscriptions/{id}/set-auto-renew/":
    post:
      operationId: payments_subscriptions_set_auto_renew_on_off
      description: |-
        Method to set auto renew on/off for StripeSubscription.
        :param request: Request object.
        :param pk: StripeSubscription unique key.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/StripeSubscription"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/StripeSubscription"
      tags:
      - payments
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/payors/{member_payor_id}/two-factor/":
    post:
      operationId: payors_two-factor_create
      description: |-
        API to submit 2FA required for logging in to payor portal.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - payors
    parameters:
    - name: member_payor_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/goodrx/comparison/":
    get:
      operationId: pharmaceuticals_goodrx_comparison_list
      description: |-
        API to return GoodRx pricing comparison data
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/goodrx/drug-search/":
    get:
      operationId: pharmaceuticals_goodrx_drug-search_list
      description: |-
        API to return GoodRx drug search data
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/medication-alert/{member_pharmaceutical_id}/create-update/":
    post:
      operationId: pharmaceuticals_medication-alert_create-update_create
      description: View to add/update Alert
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - pharmaceuticals
    parameters:
    - name: member_pharmaceutical_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/medication-alert/{member_prescription_id}/remove/":
    delete:
      operationId: pharmaceuticals_medication-alert_remove_delete
      description: Remove alert from medication
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - pharmaceuticals
    parameters:
    - name: member_prescription_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/medication-alert/{recurring_event_detail_id}/skipped/survey/{questionnaire_id}/":
    post:
      operationId: pharmaceuticals_medication-alert_skipped_survey_create
      description: |-
        API to create creating Member Questionnaires and Member Questionnaire Responses when a user attempts a questionnaire
        after skipping a medication.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - pharmaceuticals
    parameters:
    - name: questionnaire_id
      in: path
      required: true
      type: string
    - name: recurring_event_detail_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/medication-alert/{recurring_event_id}/update/status/":
    put:
      operationId: pharmaceuticals_medication-alert_update_status_update
      description: |-
        API to update medication reminder event.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/MedicationAlertStatusUpdate"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MedicationAlertStatusUpdate"
      tags:
      - pharmaceuticals
    parameters:
    - name: recurring_event_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/medication-images/":
    get:
      operationId: pharmaceuticals_medication-images_list
      description: |-
        API to view a list of images for pharmaceuticals
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PharmaceuticalImage"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/missing-images-pharmaceuticals/":
    get:
      operationId: pharmaceuticals_missing-images-pharmaceuticals_list
      description: |-
        API to fetch all MemberPharmaceuticals for which pill_image is not present and their similar pharmaceuticals.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MissingImagesMemberPharmaceuticals"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/pending-refills/":
    get:
      operationId: pharmaceuticals_pending-refills_list
      description: View to provide list of refills
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PendingRefills"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/pharmacies/":
    get:
      operationId: pharmaceuticals_pharmacies_list
      description: |-
        API to view a list of pharmacies to patient sorted on favorite, from true to false
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PharmacyDetail"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/pharmacies/add/":
    post:
      operationId: pharmaceuticals_pharmacies_add_create
      description: |-
        API to add pharmacy by patient
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PharmacyAdd"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PharmacyAdd"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/pharmacies/match/":
    get:
      operationId: pharmaceuticals_pharmacies_match_list
      description: |-
        API to get matching pharmacies based on given parameters.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Pharmacy"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/pharmacies/search/":
    get:
      operationId: pharmaceuticals_pharmacies_search_list
      description: |-
        API to view a list of pharmacies through search, paginate_by max 20 results per page.
        ---
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/Pharmacy"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/pharmacies/type-ahead/":
    get:
      operationId: pharmaceuticals_pharmacies_type-ahead_list
      description: |-
        API for getting autocomplete suggestions for Pharmacy selection.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Pharmacy"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/pharmacies/{pharmacy_id}/":
    get:
      operationId: pharmaceuticals_pharmacies_read
      description: |-
        API to view details of pharmacy for given pharmacy id
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/PharmacyDetail"
      tags:
      - pharmaceuticals
    parameters:
    - name: pharmacy_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/pharmacies/{pharmacy_id}/toggle-favorite/":
    post:
      operationId: pharmaceuticals_pharmacies_toggle-favorite_create
      description: |-
        API to toggle the favorite flag for a MemberPharmacy object.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - pharmaceuticals
    parameters:
    - name: pharmacy_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/prescription-category-choices/":
    get:
      operationId: pharmaceuticals_prescription-category-choices_list
      description: |-
        API view to get Pharmaceutical Category choices list
        ---
         GET:
            type:
                choices:
                    type: array
                    required: true
                    items:
                        $ref: {"display_text":"Prescription", "id":1}
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescription-fill/create/":
    post:
      operationId: pharmaceuticals_prescription-fill_create_create
      description: View to add/update prescription fill
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddUpdatePrescriptionFill"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AddUpdatePrescriptionFill"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescription-fill/{member_prescription_id}/":
    get:
      operationId: pharmaceuticals_prescription-fill_read
      description: Refill detail view
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/RefillDetail"
      tags:
      - pharmaceuticals
    parameters:
    - name: member_prescription_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/prescriptions/":
    get:
      operationId: pharmaceuticals_prescriptions_list
      description: |-
        API to view a list of Prescriptions
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MedicationsPrescriptions"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/add/":
    post:
      operationId: pharmaceuticals_prescriptions_add_create
      description: |-
        API to add PrescriptionFill object for Member Pharmaceutical
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddMemberPharmaceutical"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AddMemberPharmaceutical"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/bcbs-plans/":
    get:
      operationId: pharmaceuticals_prescriptions_bcbs-plans_list
      description: |-
        API to fetch details of prescription drug using given id
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/choices/":
    get:
      operationId: pharmaceuticals_prescriptions_choices_list
      description: |-
        API to get list of pharmaceuticals for add prescription api. Default pagination is 20.
        ---
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: paginate_by
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/PrescriptionChoice"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/dosages/":
    get:
      operationId: pharmaceuticals_prescriptions_dosages_list
      description: |-
        API to view a list of dosages for a selected pharmaceutical
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PharmaceuticalDosageList"
      tags:
      - pharmaceuticals
    post:
      operationId: pharmaceuticals_prescriptions_dosages_create
      description: |-
        API to view a list of dosages for a selected pharmaceutical
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/PharmaceuticalDosageList"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/PharmaceuticalDosageList"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/filter-choices/":
    get:
      operationId: pharmaceuticals_prescriptions_filter-choices_list
      description: |-
        API to view pharmacy and pharmaceutical choices for Prescriptions filter.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PrescriptionsFilterChoice"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/formulary-list/":
    get:
      operationId: pharmaceuticals_prescriptions_formulary-list_list
      description: |-
        API to fetch details of prescription drug using given id
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/mark-none/":
    post:
      operationId: pharmaceuticals_prescriptions_mark-none_create
      description: |-
        API to mark a member has no Prescription
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/related-conditions/":
    get:
      operationId: pharmaceuticals_prescriptions_related-conditions_list
      description: |-
        API to get list related conditions for adding Prescription.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PrescriptionRelatedCondition"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/search/":
    get:
      operationId: pharmaceuticals_prescriptions_search_list
      description: |-
        API to view a result list of member pharmaceutical search
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberPharmaceuticalList"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/type-ahead/":
    get:
      operationId: pharmaceuticals_prescriptions_type-ahead_list
      description: |-
        API to view results of autocomplete for Pharmaceutical choices.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/PrescriptionList"
      tags:
      - pharmaceuticals
    parameters: []
  "/pharmaceuticals/prescriptions/{member_prescription_id}/":
    get:
      operationId: pharmaceuticals_prescriptions_read
      description: |-
        API to fetch details of prescription drug using given id
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - pharmaceuticals
    parameters:
    - name: member_prescription_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/prescriptions/{member_prescription_id}/historical-prescription/":
    put:
      operationId: pharmaceuticals_prescriptions_historical-prescription_update
      description: |-
        View to mark a Member Pharmaceutical as historical
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/HistoricalMemberPharmaceutical"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/HistoricalMemberPharmaceutical"
      tags:
      - pharmaceuticals
    parameters:
    - name: member_prescription_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/prescriptions/{member_prescription_id}/pricing/":
    get:
      operationId: pharmaceuticals_prescriptions_pricing_read
      description: |-
        API to fetch details of prescription drug using given id
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - pharmaceuticals
    parameters:
    - name: member_prescription_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/prescriptions/{member_prescription_id}/remove/":
    delete:
      operationId: pharmaceuticals_prescriptions_remove_delete
      description: |-
        API to mark a member prescription as soft-deleted
        ---
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - pharmaceuticals
    parameters:
    - name: member_prescription_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/prescriptions/{member_prescription_id}/update/":
    post:
      operationId: pharmaceuticals_prescriptions_update_create
      description: |-
        API to update Member Pharmaceutical and its Prescription Fill
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/AddMemberPharmaceutical"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/AddMemberPharmaceutical"
      tags:
      - pharmaceuticals
    parameters:
    - name: member_prescription_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/prescriptions/{member_prescription_id}/update/image/":
    patch:
      operationId: pharmaceuticals_prescriptions_update_image_partial_update
      description: |-
        API to update Member Pharmaceutical image
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/UpdateMemberPharmaceuticalImage"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/UpdateMemberPharmaceuticalImage"
      tags:
      - pharmaceuticals
    parameters:
    - name: member_prescription_id
      in: path
      required: true
      type: string
  "/pharmaceuticals/questionnaire/{identity}/detail/":
    get:
      operationId: pharmaceuticals_questionnaire_detail_read
      description: |-
        API to get the details of questionnaire associated with pharmaceuticals for members
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - pharmaceuticals
    parameters:
    - name: identity
      in: path
      required: true
      type: string
  "/pharmaceuticals/reminders/":
    get:
      operationId: pharmaceuticals_reminders_list
      description: |-
        Api to get list of alerts detail
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - pharmaceuticals
    parameters: []
  "/programs/programs/":
    get:
      operationId: programs_programs_list
      description: |-
        serializer: programs_serializers.MemberProgramSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action.
                - code: 404
                  message: Not found.
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/MemberProgramChallenge"
      tags:
      - programs
    parameters: []
  "/programs/programs/{id}/":
    get:
      operationId: programs_programs_read
      description: |-
        serializer: programs_serializers.MemberProgramChallengeSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: id
                  description: ID for the MemberProgram
                  type: integer
                  paramType: path
                  required: true
            parameters_strategy: replace
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 404
                  message: Not Found
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/MemberProgramChallenge"
      tags:
      - programs
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/questionnaire-manager/answer/":
    post:
      operationId: questionnaire-manager_answer_create
      description: |-
        serializer: questionnaire_serializers.AnswerEditSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 400
                  message: Invalid data
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - questionnaire-manager
    parameters: []
  "/questionnaire-manager/answer/{answer_identity}/versions/":
    get:
      operationId: questionnaire-manager_answer_versions_list
      description: |-
        API to get all versions list for given answer's identity
        ---
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - questionnaire-manager
    parameters:
    - name: answer_identity
      in: path
      required: true
      type: string
  "/questionnaire-manager/answer/{identity}/":
    get:
      operationId: questionnaire-manager_answer_read
      description: |-
        API for Create/Update Answer
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - questionnaire-manager
    put:
      operationId: questionnaire-manager_answer_update
      description: |-
        API for Create/Update Answer
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - questionnaire-manager
    parameters:
    - name: identity
      in: path
      required: true
      type: string
      format: uuid
  "/questionnaire-manager/answers/":
    get:
      operationId: questionnaire-manager_answers_list
      description: API for returning the list of latest versions of all answers.
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - questionnaire-manager
    parameters: []
  "/questionnaire-manager/general-types-categories-list/":
    get:
      operationId: questionnaire-manager_general-types-categories-list_list
      description: API to cache and store general types and categories of Questionnaires/Questions/Answers.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/GeneralTypeCategoryList"
      tags:
      - questionnaire-manager
    parameters: []
  "/questionnaire-manager/published-questionnaire/":
    get:
      operationId: questionnaire-manager_published-questionnaire_list
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action.
                - code: 404
                  message: Not found.
                - code: 420
                  message: Token expired
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/QuestionnaireList"
      tags:
      - questionnaire-manager
    parameters: []
  "/questionnaire-manager/published-questionnaire/{identity}/":
    get:
      operationId: questionnaire-manager_published-questionnaire_read
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: identity
                  description: questionnaire's identity
                  type: UUID
                  paramType: form
                  required: true
            responseMessages:
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action.
                - code: 404
                  message: Not found.
                - code: 420
                  message: Token expired
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/QuestionnaireDetail"
      tags:
      - questionnaire-manager
    parameters:
    - name: identity
      in: path
      required: true
      type: string
      format: uuid
  "/questionnaire-manager/question/":
    get:
      operationId: questionnaire-manager_question_list
      description: Override list to conditionally send non paginated response
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: status
        in: query
        description: ''
        required: false
        type: string
      - name: excluded_questionnaire_id
        in: query
        description: ''
        required: false
        type: number
      - name: question_type
        in: query
        description: ''
        required: false
        type: string
      - name: has_correct_answer
        in: query
        description: ''
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - questionnaire-manager
    post:
      operationId: questionnaire-manager_question_create
      description: |-
        ViewSet for Question.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - questionnaire-manager
    parameters: []
  "/questionnaire-manager/question/{identity}/":
    get:
      operationId: questionnaire-manager_question_read
      description: API to retrieve single Stripe subscription object
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - questionnaire-manager
    put:
      operationId: questionnaire-manager_question_update
      description: |-
        ViewSet for Question.
        ---
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - questionnaire-manager
    parameters:
    - name: identity
      in: path
      required: true
      type: string
      format: uuid
  "/questionnaire-manager/question/{question_identity}/versions/":
    get:
      operationId: questionnaire-manager_question_versions_list
      description: |-
        API to get all versions list for given question identity
        ---
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - questionnaire-manager
    parameters:
    - name: question_identity
      in: path
      required: true
      type: string
  "/questionnaire-manager/questionnaire-download/":
    get:
      operationId: questionnaire-manager_questionnaire-download_read
      description: |-
        Overridden get for adding questionnaire dump
        :param request: request object
        :param args: args
        :param kwargs: kwargs
        :return: response object
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - questionnaire-manager
    parameters: []
  "/questionnaire-manager/questionnaire-publish-draft/{questionnaire_id}/":
    put:
      operationId: questionnaire-manager_questionnaire-publish-draft_update
      description: API to publish a draft questionnaire
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/QuestionnaireDraftPublish"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/QuestionnaireDraftPublish"
      tags:
      - questionnaire-manager
    parameters:
    - name: questionnaire_id
      in: path
      required: true
      type: string
  "/questionnaire-manager/questionnaire/":
    get:
      operationId: questionnaire-manager_questionnaire_list
      description: |-
        API for Edit Questionnaire
        ---
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/QuestionnaireList"
      tags:
      - questionnaire-manager
    post:
      operationId: questionnaire-manager_questionnaire_create
      description: |-
        serializer: questionnaire_serializers.QuestionnaireEditSerializer
            parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
            responseMessages:
                - code: 400
                  message: Invalid data
                - code: 401
                  message: Invalid token
                - code: 403
                  message: You do not have permission to perform this action
                - code: 420
                  message: Token expired
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/QuestionnaireEdit"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/QuestionnaireEdit"
      tags:
      - questionnaire-manager
    parameters: []
  "/questionnaire-manager/questionnaire/question-ordering-section-update/{id}/":
    put:
      operationId: questionnaire-manager_questionnaire_question-ordering-section-update_update
      description: |-
        API to update ordering, section info and deletion of questions linked to a Questionnaire.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/QuestionnaireQuestionOrderingSectionAndDeletion"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/QuestionnaireQuestionOrderingSectionAndDeletion"
      tags:
      - questionnaire-manager
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this Questionnaire.
      required: true
      type: integer
  "/questionnaire-manager/questionnaire/question-ordering-update/{id}/":
    put:
      operationId: questionnaire-manager_questionnaire_question-ordering-update_update
      description: |-
        API to update ordering of questions linked to a Questionnaire.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/QuestionnaireQuestionOrderingAndDeletion"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/QuestionnaireQuestionOrderingAndDeletion"
      tags:
      - questionnaire-manager
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this Questionnaire.
      required: true
      type: integer
  "/questionnaire-manager/questionnaire/update-dependency/{id}/":
    put:
      operationId: questionnaire-manager_questionnaire_update-dependency_update
      description: |-
        API to update dependency in questions linked to a Questionnaire.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/QuestionnaireQuestionDependencyUpdate"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/QuestionnaireQuestionDependencyUpdate"
      tags:
      - questionnaire-manager
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this Questionnaire.
      required: true
      type: integer
  "/questionnaire-manager/questionnaire/{identity}/":
    get:
      operationId: questionnaire-manager_questionnaire_read
      description: |-
        Override to add response token header
        :param request: request object
        :param args: args
        :param kwargs: kwargs
        :return: response object
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/QuestionnaireDetail"
      tags:
      - questionnaire-manager
    put:
      operationId: questionnaire-manager_questionnaire_update
      description: |-
        parameters:
                - name: Authorization
                  description: User's authentication token
                  type: string
                  paramType: header
                  required: true
                - name: body
                  description: Dictionary which must contain all the required fields of questionnaire
                  type: dict
                  paramType: body
                  required: true
                - name: id
                  description: ID of the Questionnaire
                  type: integer
                  paramType: path
                  required: true
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/QuestionnaireEdit"
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/QuestionnaireEdit"
      tags:
      - questionnaire-manager
    parameters:
    - name: identity
      in: path
      required: true
      type: string
      format: uuid
  "/questionnaire-manager/questionnaire/{identity}/detail/":
    get:
      operationId: questionnaire-manager_questionnaire_detail_read
      description: |-
        Override to add response token header
        :param request: request object
        :param args: args
        :param kwargs: kwargs
        :return: response object
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/QuestionnaireQuestionAnswer"
      tags:
      - questionnaire-manager
    parameters:
    - name: identity
      in: path
      required: true
      type: string
      format: uuid
  "/questionnaire-manager/questionnaire/{questionnaire_identity}/response/":
    get:
      operationId: questionnaire-manager_questionnaire_response_list
      description: |-
        API to list the results of questionniare with given questionnaire identity and optional member-stage-challenge id.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/QuestionnaireResult"
      tags:
      - questionnaire-manager
    parameters:
    - name: questionnaire_identity
      in: path
      required: true
      type: string
  "/questionnaire-manager/questionnaire/{questionnaire_identity}/versions/":
    get:
      operationId: questionnaire-manager_questionnaire_versions_list
      description: API to get all versions list for given questionnaire identity
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  "$ref": "#/definitions/QuestionnaireDetail"
      tags:
      - questionnaire-manager
    parameters:
    - name: questionnaire_identity
      in: path
      required: true
      type: string
  "/questionnaire-manager/rules/":
    get:
      operationId: questionnaire-manager_rules_list
      description: |-
        API to get the list of rules
        ---
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: resource__id
        in: query
        description: ''
        required: false
        type: number
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Rule"
      tags:
      - questionnaire-manager
    parameters: []
  "/resources/":
    get:
      operationId: resources_list
      description: |-
        View for getting a list of resources, and for creating a new resource
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Resource"
      tags:
      - resources
    parameters: []
  "/resources/categories/":
    get:
      operationId: resources_categories_list
      description: |-
        View for getting a list of resource categories and creating a new resource category
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/Category"
      tags:
      - resources
    parameters: []
  "/resources/{id}/":
    get:
      operationId: resources_read
      description: |-
        View for getting, updating, and deleting a resource
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/Resource"
      tags:
      - resources
    parameters:
    - name: id
      in: path
      required: true
      type: string
  "/support/inline-help/items/":
    get:
      operationId: support_inline-help_items_list
      description: |-
        API for getting inline help
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/InlineHelpItem"
      tags:
      - support
    parameters: []
  "/support/knowledge-center/articles/search/":
    get:
      operationId: support_knowledge-center_articles_search_list
      description: |-
        API to search for an article in Knowledge Center
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/KnowledgeCenterSearch"
      tags:
      - support
    parameters: []
  "/support/knowledge-center/categories/":
    get:
      operationId: support_knowledge-center_categories_list
      description: |-
        API to show categories in Knowledge Center
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/KnowledgeCenterCategory"
      tags:
      - support
    parameters: []
  "/support/knowledge-center/sections/":
    get:
      operationId: support_knowledge-center_sections_list
      description: |-
        API for getting various sections of Knowledge Center
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/KnowledgeCenterSection"
      tags:
      - support
    parameters: []
  "/support/knowledge-center/sections/article/{article_id}/attachment/":
    get:
      operationId: support_knowledge-center_sections_article_attachment_list
      description: |-
        API for getting attachments of an article
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/KnowledgeCenterArticleAttachment"
      tags:
      - support
    parameters:
    - name: article_id
      in: path
      required: true
      type: string
  "/support/knowledge-center/sections/articles/":
    get:
      operationId: support_knowledge-center_sections_articles_list
      description: |-
        API for getting articles of a section in Knowledge Center
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/KnowledgeCenterArticle"
      tags:
      - support
    parameters: []
  "/support/schedules/":
    get:
      operationId: support_schedules_list
      description: |-
        API for viewing support schedule from Zendesk
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/SupportSchedules"
      tags:
      - support
    parameters: []
  "/support/schedules/check/":
    get:
      operationId: support_schedules_check_list
      description: |-
        API for checking existing support events in Google Calendar
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              "$ref": "#/definitions/SupportCalendarCheck"
      tags:
      - support
    parameters: []
  "/teladoc/client-sso-login/":
    post:
      operationId: teladoc_client-sso-login_create
      description: |-
        API to login to User's client's SSO and return the url to redirect to.
        ---
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - teladoc
    parameters: []
  "/teladoc/get-teladoc-credentials/":
    get:
      operationId: teladoc_get-teladoc-credentials_read
      description: |-
        API to get Teladoc credentials for users present in states listed in TELADOC_CREDENTIALS_DISPLAY_STATES
         when scheduling consultation first time.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/GetTeladocCredentials"
      tags:
      - teladoc
    parameters: []
  "/teladoc/request-consultation/":
    post:
      operationId: teladoc_request-consultation_create
      description: |-
        API to schedule a consultation for member.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/Consultation"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/Consultation"
      tags:
      - teladoc
    parameters: []
  "/teladoc/teladoc-prerequisites/":
    get:
      operationId: teladoc_teladoc-prerequisites_read
      description: |-
        API to get status of prerequisites for teladoc call.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/TelaDocPrerequisites"
      tags:
      - teladoc
    parameters: []
  "/teladoc/teladoc-quiz/":
    get:
      operationId: teladoc_teladoc-quiz_read
      description: |-
        API for teladoc quiz questions and answers for member.
        ---
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            "$ref": "#/definitions/TelaDocQuiz"
      tags:
      - teladoc
    post:
      operationId: teladoc_teladoc-quiz_create
      summary: API to update teladoc data
      description: |-
        Sample POST Data:<br/>
              { <br/>
                  question_id: value, "question_id" being id of the question and "value" being answer to that question.<br/>
            }
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/TelaDocQuiz"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/TelaDocQuiz"
      tags:
      - teladoc
    parameters: []
  "/teladoc/teladoc-terms/":
    post:
      operationId: teladoc_teladoc-terms_create
      description: |-
        API to mark that user has accepted terms and conditions for teladoc.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/TeladocTerms"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/TeladocTerms"
      tags:
      - teladoc
    parameters: []
  "/teladoc/toggle-universal-switch/":
    get:
      operationId: teladoc_toggle-universal-switch_read
      description: Override get to get the universal switch value for Teladoc.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - teladoc
    patch:
      operationId: teladoc_toggle-universal-switch_partial_update
      description: Onverride patch toggle the universal switch value
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - teladoc
    parameters: []
  "/teladoc/upload-attachments/":
    post:
      operationId: teladoc_upload-attachments_create
      description: |-
        API to upload attachments for consultation.
        ---
      parameters:
      - name: data
        in: body
        required: true
        schema:
          "$ref": "#/definitions/Attachment"
      responses:
        '201':
          description: ''
          schema:
            "$ref": "#/definitions/Attachment"
      tags:
      - teladoc
    parameters: []
definitions:
  UnRegisteredMemberAddressValidation:
    required:
    - address_line_1
    - city
    - state
    - zipcode
    type: object
    properties:
      address_line_1:
        title: Address line 1
        type: string
        maxLength: 255
        minLength: 1
      address_line_2:
        title: Address line 2
        type: string
        maxLength: 255
      city:
        title: City
        type: string
        minLength: 1
      state:
        title: State
        type: string
        maxLength: 50
        minLength: 1
      zipcode:
        title: Zipcode
        type: string
        pattern: "(^\\d{5}(\\-\\d{4})?$|^\\d{9}$)"
        maxLength: 10
        minLength: 1
  AdminAuthentication:
    required:
    - username
    - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  PasswordResetUser:
    required:
    - uid
    - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  BasePasswordResetConfirm:
    required:
    - uid
    - token
    - new_password1
    - new_password2
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      new_password1:
        title: New password1
        type: string
        maxLength: 128
        minLength: 1
      new_password2:
        title: New password2
        type: string
        maxLength: 128
        minLength: 1
  BaseDynamicAppSettings:
    type: object
    properties:
      app_urls:
        title: App urls
        type: string
        readOnly: true
      support_email:
        title: Support email
        type: string
        readOnly: true
      questionnaire_constants:
        title: Questionnaire constants
        type: string
        readOnly: true
      image_max_size:
        title: Image max size
        type: string
        readOnly: true
      enable_mixpanel:
        title: Enable mixpanel
        type: string
        readOnly: true
      user_registration_type:
        title: User registration type
        type: string
        readOnly: true
      reward_timeline_page_size:
        title: Reward timeline page size
        type: string
        readOnly: true
      health_tribe_term:
        title: Health tribe term
        type: string
        readOnly: true
      mychart_programs_resources_redirection_mapping:
        title: Mychart programs resources redirection mapping
        type: string
        readOnly: true
      age_of_consent:
        title: Age of consent
        type: string
        readOnly: true
      allowed_registration_state_codes:
        title: Allowed registration state codes
        type: string
        readOnly: true
      mastercard_idp:
        title: Mastercard idp
        type: string
        readOnly: true
  EmailValidation:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        description: Email of the user
        type: string
        format: email
        maxLength: 255
        minLength: 1
  MemberLanguageChange:
    required:
    - language
    type: object
    properties:
      language:
        title: Language
        type: string
        enum:
        - en
        - es
  DelegateAccessToParent:
    required:
    - uid
    - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  UserDevice:
    required:
    - user
    - device_type
    - udid
    - generated_at
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: integer
      device_type:
        title: Device type
        type: integer
        enum:
        - 1
        - 2
        - 3
      udid:
        title: Udid
        type: string
        maxLength: 255
        minLength: 1
      generated_at:
        title: Generated at
        type: string
        format: date-time
      is_remote_notification_enabled:
        title: Is remote notification enabled
        description: Status of push notification setting in user's mobile. Null implies
          unknown status. False implies push notfications disabled. True implies push
          notifications enabled
        type: boolean
        x-nullable: true
      app_version:
        title: App version
        description: APP VERSION installed.
        type: string
        maxLength: 16
  Email:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  GenderChoices:
    required:
    - id
    - display_text
    type: object
    properties:
      id:
        title: Id
        type: string
        minLength: 1
      display_text:
        title: Display text
        type: string
        minLength: 1
  InternalNotificationCount:
    required:
    - read_at
    type: object
    properties:
      read_at:
        title: Read at
        type: string
        format: date-time
      todo_count:
        title: Todo count
        type: string
        readOnly: true
      notification_count:
        title: Notification count
        type: string
        readOnly: true
      device_timezone:
        title: Device timezone
        description: Auto detected device timezone
        type: string
        minLength: 1
  InternalUser:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        description: Email of the user
        type: string
        format: email
        maxLength: 255
        minLength: 1
  LockedEmailAdd:
    required:
    - email
    - username
    - original_client
    - parent_company
    type: object
    properties:
      email:
        title: Email
        description: Encrypted Email ID.
        type: string
        maxLength: 255
        minLength: 1
      username:
        title: Username
        type: string
        format: uuid
      original_client:
        title: Original client
        description: Slug of client email was generated in.
        type: string
        maxLength: 255
        minLength: 1
      expiry_time:
        title: Expiry time
        type: string
        format: date-time
        x-nullable: true
      parent_company:
        title: Parent company
        description: Slug of parent company email was generated in.
        type: string
        maxLength: 255
        minLength: 1
      is_human_api_email:
        title: Is human api email
        type: boolean
  BaseUsername:
    required:
    - username
    type: object
    properties:
      username:
        title: Username
        type: string
        format: uuid
  LockedEmailUpdate:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        description: Encrypted Email ID.
        type: string
        maxLength: 255
        minLength: 1
      parent_company:
        title: Parent company
        description: Slug of parent company email was generated in.
        type: string
        maxLength: 255
        minLength: 1
      is_human_api_email:
        title: Is human api email
        type: boolean
  MemberAuthentication:
    required:
    - username
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      touch_id:
        title: Touch id
        type: string
        minLength: 1
      jwt_token:
        title: Jwt token
        type: string
        minLength: 1
  MemberJWTAuthentication:
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      jwt_token:
        title: Jwt token
        type: string
        minLength: 1
  MemberTwoFactorAuthenticationValidation:
    required:
    - uid
    - validation_token
    - totp
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      validation_token:
        title: Validation token
        type: string
        minLength: 1
      totp:
        title: Totp
        type: string
        minLength: 1
  NotificationDeliveryType:
    required:
    - delivery_type_list
    - send_phi_in_notifications
    type: object
    properties:
      delivery_type_list:
        description: Ids of the delivery types preferred
        type: array
        items:
          description: Ids of the delivery types preferred
          type: integer
        uniqueItems: true
      send_phi_in_notifications:
        title: Send phi in notifications
        type: boolean
  UpdateNotificationTypeUserPreference:
    type: object
    properties:
      is_on:
        title: Is on
        type: boolean
  DynamicAppSettings:
    type: object
    properties:
      app_urls:
        title: App urls
        type: string
        readOnly: true
      support_email:
        title: Support email
        type: string
        readOnly: true
      questionnaire_constants:
        title: Questionnaire constants
        type: string
        readOnly: true
      image_max_size:
        title: Image max size
        type: string
        readOnly: true
      enable_mixpanel:
        title: Enable mixpanel
        type: string
        readOnly: true
      user_registration_type:
        title: User registration type
        type: string
        readOnly: true
      reward_timeline_page_size:
        title: Reward timeline page size
        type: string
        readOnly: true
      mychart_programs_resources_redirection_mapping:
        title: Mychart programs resources redirection mapping
        type: string
        readOnly: true
      mastercard_idp:
        title: Mastercard idp
        type: string
        readOnly: true
      banner_section:
        title: Banner section
        type: string
        readOnly: true
      pill_image_max_size:
        title: Pill image max size
        type: string
        readOnly: true
      client_info:
        title: Client info
        type: string
        readOnly: true
      member_info:
        title: Member info
        type: string
        readOnly: true
      member_permissions:
        title: Member permissions
        type: string
        readOnly: true
      my_benefits_section_id:
        title: My benefits section id
        type: string
        readOnly: true
      my_benefits_section_map:
        title: My benefits section map
        type: string
        readOnly: true
      has_eligible_program_resources:
        title: Has eligible program resources
        type: string
        readOnly: true
      is_mychart_integration_enabled:
        title: Is mychart integration enabled
        type: string
        readOnly: true
      display_commitment_form:
        title: Display commitment form
        type: string
        readOnly: true
      display_share_data_with_client_toggle:
        title: Display share data with client toggle
        type: string
        readOnly: true
      modal_flags:
        title: Modal flags
        type: string
        readOnly: true
      client_mychart_integration_request_url:
        title: Client mychart integration request url
        type: string
        readOnly: true
      mychart_settings:
        title: Mychart settings
        type: string
        readOnly: true
      allowed_external_calendar_services:
        title: Allowed external calendar services
        type: string
        readOnly: true
  VerifyMemberRegistrationCode:
    required:
    - registration_code
    type: object
    properties:
      registration_code:
        title: Registration code
        type: string
        maxLength: 16
        minLength: 1
  OnboardingFirstPageValidation:
    required:
    - email
    - phone
    type: object
    properties:
      email:
        title: Email
        description: Email of the user
        type: string
        format: email
        maxLength: 255
        minLength: 1
      phone:
        title: Phone
        type: string
        maxLength: 15
        minLength: 1
      registration_code:
        title: Registration code
        type: string
        maxLength: 16
        minLength: 1
  OnboardingRegistrationCodeValidation:
    required:
    - registration_code
    type: object
    properties:
      registration_code:
        title: Registration code
        type: string
        maxLength: 16
        minLength: 6
      details:
        title: Details
        type: string
        readOnly: true
  PatientPasswordResetEmail:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  PasswordResetConfirmPatient:
    required:
    - uid
    - token
    - new_password1
    - new_password2
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      new_password1:
        title: New password1
        type: string
        maxLength: 128
        minLength: 1
      new_password2:
        title: New password2
        type: string
        maxLength: 128
        minLength: 1
  PasswordResetPatient:
    required:
    - uid
    - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  UserInternalPasswordReset:
    required:
    - current_password
    - new_password
    type: object
    properties:
      current_password:
        title: Current password
        type: string
        maxLength: 128
        minLength: 1
      new_password:
        title: New password
        type: string
        maxLength: 128
        minLength: 1
  SetMinorPassword:
    required:
    - uid
    - token
    - new_password1
    - new_password2
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      new_password1:
        title: New password1
        type: string
        maxLength: 128
        minLength: 1
      new_password2:
        title: New password2
        type: string
        maxLength: 128
        minLength: 1
      app_store_url:
        title: App store url
        type: string
        readOnly: true
      play_store_url:
        title: Play store url
        type: string
        readOnly: true
  UnRegisteredMemberSSNVerification:
    required:
    - client_slug
    - first_name
    - last_name
    - date_of_birth
    - gender
    - zipcode
    - ssn_code
    type: object
    properties:
      client_slug:
        title: Client slug
        type: string
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 255
        minLength: 1
      middle_name:
        title: Middle name
        type: string
        maxLength: 255
        x-nullable: true
      last_name:
        title: Last name
        type: string
        maxLength: 255
        minLength: 1
      date_of_birth:
        title: Date of birth
        type: string
        format: date
      gender:
        title: Gender
        type: string
        minLength: 1
      zipcode:
        title: Zipcode
        type: string
        minLength: 1
      ssn_code:
        title: Ssn code
        type: string
        maxLength: 4
        minLength: 1
  UserTerms:
    type: object
    properties:
      tc_ip:
        title: Tc ip
        type: string
        readOnly: true
        minLength: 1
      tc_timestamp:
        title: Tc timestamp
        type: string
        format: date-time
        readOnly: true
  UserTouchId:
    required:
    - user
    - touch_id
    type: object
    properties:
      user:
        title: User
        type: integer
      touch_id:
        title: Touch id
        type: string
        maxLength: 128
        minLength: 1
  MemberTwoFactorStatus:
    required:
    - status
    - two_factor_auth_type
    type: object
    properties:
      status:
        title: Status
        type: string
        format: slug
        pattern: "^[-a-zA-Z0-9_]+$"
        minLength: 1
      two_factor_auth_type:
        title: Two factor auth type
        type: string
        minLength: 1
  MemberTwoFactorBackupCodes:
    type: object
    properties:
      code:
        title: Code
        type: string
        readOnly: true
  MemberTwoFactorDisableStepOne:
    type: object
    properties:
      totp_url:
        title: Totp url
        type: string
        readOnly: true
      sms_status:
        title: Sms status
        description: False - if two_factor_auth type is not sms, 1 - if any exception
          occur from twilio side, 2 - if message sent, 3 - if number is unsubscribed
          from twilio, 4 - if DND is activated through provider
        type: string
        readOnly: true
  MemberTwoFactorDisableStepTwo:
    required:
    - totp
    type: object
    properties:
      totp:
        title: Totp
        type: string
        minLength: 1
  MemberTwoFactorEnableStepOne:
    required:
    - two_factor_auth
    type: object
    properties:
      totp_url:
        title: Totp url
        type: string
        readOnly: true
      sms_status:
        title: Sms status
        description: False - if two_factor_auth type is not sms, 1 - if any exception
          occur from twilio side, 2 - if message sent, 3 - if number is unsubscribed
          from twilio, 4 - if DND is activated through provider
        type: string
        readOnly: true
      two_factor_auth:
        title: Two factor auth
        type: integer
        enum:
        - 1
        - 2
  MemberTwoFactorEnableStepTwo:
    required:
    - two_factor_auth
    - totp
    type: object
    properties:
      two_factor_auth:
        title: Two factor auth
        type: integer
        enum:
        - 1
        - 2
      totp:
        title: Totp
        type: string
        minLength: 1
  TwoFactorAuthenticationRegistration:
    required:
    - uid
    - validation_token
    - totp
    - registration_data
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      validation_token:
        title: Validation token
        type: string
        minLength: 1
      totp:
        title: Totp
        type: string
        minLength: 1
      registration_data:
        title: Registration data
        type: object
        additionalProperties:
          type: string
  TwoFactorGenerationRegistration:
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      phone:
        title: Phone
        type: string
        maxLength: 15
        minLength: 1
      uid:
        title: Uid
        type: string
        readOnly: true
      validation_token:
        title: Validation token
        type: string
        readOnly: true
      status:
        title: Status
        type: string
        readOnly: true
  CommonPassword:
    required:
    - password
    type: object
    properties:
      password:
        title: Password
        type: string
        minLength: 1
  PasswordValidation:
    required:
    - password
    type: object
    properties:
      password:
        title: Password
        type: string
        maxLength: 128
        minLength: 1
  UserPhoneValidation:
    required:
    - phone
    type: object
    properties:
      phone:
        title: Phone
        type: string
        maxLength: 15
        minLength: 1
  VerifyAnonymousRegistrationCode:
    required:
    - registration_code
    - first_name
    - last_name
    - date_of_birth
    type: object
    properties:
      registration_code:
        title: Registration code
        type: string
        maxLength: 16
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 255
        minLength: 1
      middle_name:
        title: Middle name
        type: string
        maxLength: 255
        x-nullable: true
      last_name:
        title: Last name
        type: string
        maxLength: 255
        minLength: 1
      date_of_birth:
        title: Date of birth
        type: string
        format: date
  VerifyMinorUser:
    required:
    - uid
    - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      upcoming_birthday:
        title: Upcoming birthday
        type: string
        readOnly: true
      age:
        title: Age
        type: string
        readOnly: true
      email:
        title: Email
        type: string
        readOnly: true
      image:
        title: Image
        type: string
        readOnly: true
  VerifyMemberSignupAllowed:
    required:
    - first_name
    - last_name
    - date_of_birth
    - gender
    type: object
    properties:
      family_invite_code:
        title: Family invite code
        type: string
        maxLength: 16
        minLength: 1
      health_tribe_invite_code:
        title: Health tribe invite code
        type: string
        maxLength: 16
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 255
        minLength: 1
      middle_name:
        title: Middle name
        type: string
        maxLength: 255
        x-nullable: true
      last_name:
        title: Last name
        type: string
        maxLength: 255
        minLength: 1
      date_of_birth:
        title: Date of birth
        type: string
        format: date
      gender:
        title: Gender
        type: string
        minLength: 1
      zipcode:
        title: Zipcode
        type: string
        pattern: "(^\\d{5}(\\-\\d{4})?$|^\\d{9}$)"
        maxLength: 10
        minLength: 1
  EventDetailsChoices:
    required:
    - alert_choices
    - frequency_choices
    - weekday_choices
    - status_choices
    - default_status
    - default_alert_time_frame
    - update_option_fields_mapping
    - category_choices
    type: object
    properties:
      alert_choices:
        type: array
        items:
          type: string
      frequency_choices:
        type: array
        items:
          type: string
      weekday_choices:
        type: array
        items:
          type: string
      status_choices:
        type: array
        items:
          type: string
      default_status:
        title: Default status
        type: integer
      default_alert_time_frame:
        title: Default alert time frame
        type: integer
      update_option_fields_mapping:
        title: Update option fields mapping
        type: object
        additionalProperties:
          type: string
      category_choices:
        type: array
        items:
          type: string
  DeviceEventSyncGet:
    required:
    - device_calendar_id
    - device_event_id
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      single_event:
        title: Single event
        type: string
        readOnly: true
      recurring_event:
        title: Recurring event
        type: string
        readOnly: true
      device_calendar_id:
        title: Device calendar id
        description: ID of the calendar on user's device
        type: string
        maxLength: 8
        minLength: 1
      device_event_id:
        title: Device event id
        description: ID of the event in calendar on user's device
        type: string
        maxLength: 8
        minLength: 1
  RecurringEventRetrieve:
    required:
    - all_day
    - editable
    - event_type_name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      event_type:
        title: Event type
        type: string
        readOnly: true
      all_day:
        title: All day
        description: States whether event is all day or not
        type: boolean
      location:
        title: Location
        type: string
        readOnly: true
      summary:
        title: Summary
        type: string
        readOnly: true
      alert_time_frame:
        title: Alert time frame
        type: string
        readOnly: true
      event_system_id:
        title: Event system id
        description: ID used by an external calendar system to identify the event
        type: string
        maxLength: 512
      start_datetime:
        title: Start datetime
        description: Event start datetime
        type: string
        readOnly: true
      end_datetime:
        title: End datetime
        description: Event end datetime
        type: string
        readOnly: true
      notes:
        title: Notes
        description: Notes of event
        type: string
        readOnly: true
      status:
        title: Status
        description: Status of event
        type: string
        readOnly: true
      is_creator:
        title: Is creator
        description: Designates whether user is creator or not
        type: string
        readOnly: true
      event_icon:
        title: Event icon
        description: Event icon
        type: string
        readOnly: true
      editable:
        title: Editable
        description: Event is editable of not
        type: boolean
      event_type_name:
        title: Event type name
        description: Event type name
        type: string
        minLength: 1
      frequency:
        title: Frequency
        type: string
        readOnly: true
      interval:
        title: Interval
        type: string
        readOnly: true
      repeat_days:
        title: Repeat days
        type: string
        readOnly: true
      rule_text:
        title: Rule text
        type: string
        readOnly: true
      days:
        title: Days
        description: Used when event split in multiple days
        type: integer
        maximum: 65535
        minimum: 0
      occurrences_count:
        title: Occurrences count
        type: string
        readOnly: true
      dtend:
        title: Dtend
        type: string
        readOnly: true
      dtstart:
        title: Dtstart
        type: string
        readOnly: true
  UpdateRecursiveEventStatus:
    required:
    - status
    - event_datetime
    type: object
    properties:
      status:
        title: Status
        description: Status of an event
        type: integer
        enum:
        - 1
        - 2
        - 3
      event_datetime:
        title: Event datetime
        type: string
        format: date-time
      device_timezone:
        title: Device timezone
        type: string
        minLength: 1
  SingleEventRetrieve:
    required:
    - event_type
    - all_day
    - alert_time_frame
    - editable
    - event_type_name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      event_type:
        title: Event type
        type: integer
      all_day:
        title: All day
        description: States whether event is all day or not
        type: boolean
      location:
        title: Location
        description: Location of an event
        type: string
      summary:
        title: Summary
        description: Summary of an event
        type: string
      alert_time_frame:
        title: Alert time frame
        description: Alert time frame
        type: string
        minLength: 1
      event_system_id:
        title: Event system id
        description: ID used by an external calendar system to identify the event
        type: string
        maxLength: 512
      start_datetime:
        title: Start datetime
        description: Event start datetime
        type: string
        readOnly: true
      end_datetime:
        title: End datetime
        description: Event end datetime
        type: string
        readOnly: true
      notes:
        title: Notes
        description: Notes of event
        type: string
        readOnly: true
      status:
        title: Status
        description: Status of event
        type: string
        readOnly: true
      is_creator:
        title: Is creator
        description: Designates whether user is creator or not
        type: string
        readOnly: true
      event_icon:
        title: Event icon
        description: Event icon
        type: string
        readOnly: true
      editable:
        title: Editable
        description: Event is editable of not
        type: boolean
      event_type_name:
        title: Event type name
        description: Event type name
        type: string
        minLength: 1
      family_member:
        title: Family member
        description: Name of the family member who this event is actually for.
        type: string
        maxLength: 255
  UpdateSingleEventStatus:
    required:
    - status
    type: object
    properties:
      status:
        title: Status
        description: Status of an event
        type: integer
        enum:
        - 1
        - 2
        - 3
  SyncWithDeviceCalendar:
    type: object
    properties:
      sync:
        title: Sync
        description: Designates whether sync this calendar with user's device calendar
        type: boolean
  Timezone:
    required:
    - calendar_timezone
    type: object
    properties:
      timezone_choices:
        title: Timezone choices
        type: string
        readOnly: true
      calendar_timezone:
        title: Calendar timezone
        description: Store timezone selected by user for displaying calendar events
        type: string
        maxLength: 50
        minLength: 1
  CategoriesList:
    required:
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      unique_id:
        title: Unique id
        type: string
        format: uuid
      name:
        title: Name
        description: Name of the category
        type: string
        maxLength: 64
        minLength: 1
  ChallengePrioritization:
    type: object
    properties:
      priority:
        title: Priority
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
      sql:
        title: Sql
        type: string
  ChallengeContent:
    title: Content data
    type: object
    properties:
      content:
        title: Content
        type: string
    x-nullable: true
  DeliveryType:
    title: Delivery type
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: integer
      display_name:
        title: Display name
        description: 'Stores the display name of the delivery type. NOTE: Usage of
          this field is only in report generation'
        type: string
        readOnly: true
        minLength: 1
  NotificationTypeDeliveryType:
    type: object
    properties:
      delivery_type:
        "$ref": "#/definitions/DeliveryType"
  NotificationType:
    title: Notification type
    type: object
    properties:
      id:
        title: Id
        type: integer
      image:
        title: Image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      common_name:
        title: Common name
        description: User readable name field
        type: string
      app_notification_title:
        title: App notification title
        description: APP type notification title
        type: string
      app_notification_message:
        title: App notification message
        description: APP type notification message
        type: string
      internal_content_txt:
        title: Internal content txt
        description: Internal content TXT
        type: string
      delivery_type:
        type: array
        items:
          "$ref": "#/definitions/NotificationTypeDeliveryType"
      app_notification_title_es:
        title: App notification title es
        type: string
      app_notification_message_es:
        title: App notification message es
        type: string
  ChallengeNotificationType:
    required:
    - challenge_notification_type
    type: object
    properties:
      notification_type:
        "$ref": "#/definitions/NotificationType"
      challenge_notification_type:
        title: Challenge notification type
        description: Denotes type of notification associated with the challenge
        type: string
        enum:
        - eligibility
        - completion
        - reminder
  ChallengeDetail:
    required:
    - name
    - description
    - default_points
    - title
    - challenge_class
    - completion_method
    - challenge_content_type
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      unique_id:
        title: Unique id
        type: string
        format: uuid
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      icon:
        title: Icon
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      image:
        title: Image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      description:
        title: Description
        type: string
        minLength: 1
      default_points:
        title: Default points
        type: integer
        maximum: 4294967295
        minimum: 0
      video_url:
        title: Video url
        description: Url should start with https://
        type: string
        format: uri
        maxLength: 255
      intra_app_redirection_url:
        title: Intra app redirection url
        description: Redirection in app for external action challenge.
        type: string
        maxLength: 255
      internal_action_url:
        title: Internal action url
        description: Redirection in app for internal action challenge.
        type: string
        maxLength: 255
      audio_url:
        title: Audio url
        description: URL of an external audio file to be used for audio challenge.
        type: string
        format: uri
        maxLength: 255
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      description_sql:
        title: Description sql
        type: string
        x-nullable: true
      title_sql:
        title: Title sql
        type: string
      deferral_time:
        title: Deferral time
        description: Denotes the time(in days) for which this challenge will be deferred
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      challenge_sub_class:
        title: Challenge sub class
        description: Sub Class of the challenge
        type: string
        format: uuid
        x-nullable: true
      created_at:
        title: Created at
        type: string
        format: date-time
      challenge_class:
        title: Challenge class
        type: integer
      json_creation_data:
        title: Json creation data
        type: object
        x-nullable: true
      completion_criteria:
        title: Completion criteria
        type: object
      completion_method:
        title: Completion method
        description: Completion method to be used for this challenge.
        type: integer
        enum:
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
      is_recurring:
        title: Is recurring
        description: Denotes whether the challenge will recur or not
        type: boolean
      challenge_content_type:
        title: Challenge content type
        description: Content type(audio/video/html) to be used for this challenge.
        type: integer
        enum:
        - 1
        - 2
        - 3
      category:
        title: Category
        description: Depicts category of the challenge.
        type: string
        enum:
        - education
        - action
      recurrence_count:
        title: Recurrence count
        description: Number of times a challenge is allowed to recur in given time
          period
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      recurrence_period:
        title: Recurrence period
        description: Period of recurrence
        type: string
        enum:
        - days
        - weeks
        - months
        - quarters
        - years
        - calendar_weeks
        - calendar_months
        - calendar_quarters
        - calendar_years
      recurrence_period_count:
        title: Recurrence period count
        description: Number of periods of recurrences
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      recurrence_offset:
        title: Recurrence offset
        description: Offset of recurrence (Only for Calendar Recurrence) - in Days
          for Calendar Week and Calendar Month, in Months for Calendar Quarter and
          Calendar Year
        type: integer
        maximum: 65535
        minimum: 0
      status:
        title: Status
        description: Current status of challenge.
        type: string
        enum:
        - draft
        - inreview
        - reviewed
        - active
        - archived
        - processing
      priorities:
        type: array
        items:
          "$ref": "#/definitions/ChallengePrioritization"
      challenge_questionnaire:
        title: Challenge questionnaire
        type: string
        format: uuid
        x-nullable: true
      challenge_questionnaire_details:
        title: Challenge questionnaire details
        type: string
        readOnly: true
      start_date:
        title: Start date
        type: string
        format: date-time
        x-nullable: true
      end_date:
        title: End date
        type: string
        format: date-time
        x-nullable: true
      displayed_on:
        title: Displayed on
        description: Denotes where the challenge is to be displayed.
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
      program_display_name:
        title: Program display name
        description: Name to be displayed on program detail screen.
        type: string
        maxLength: 255
      done_button_redirect_url:
        title: Done button redirect url
        description: Redirect on a url when we click on done button of modal
        type: string
        maxLength: 255
      hide_from_completion_response:
        title: Hide from completion response
        description: Denotes whether challenge completion should be shown when challenge
          is completed from back-end
        type: boolean
      content_provider:
        title: Content provider
        description: Source of the challenge article
        type: string
        format: uuid
        x-nullable: true
      description_es:
        title: Description es
        type: string
      title_es:
        title: Title es
        type: string
      name_es:
        title: Name es
        type: string
      video_url_es:
        title: Video url es
        type: string
      audio_url_es:
        title: Audio url es
        type: string
      video_transcript_es:
        title: Video transcript es
        type: string
      content_data:
        "$ref": "#/definitions/ChallengeContent"
      notifications:
        type: array
        items:
          "$ref": "#/definitions/ChallengeNotificationType"
      included_clients:
        title: Included clients
        description: 'Store list of client slugs for whom challenge will be enabledEx:
          [trinity, burris]'
        type: string
      excluded_clients:
        title: Excluded clients
        description: 'Store list of client slugs for whom challenge will be disabledEx:
          [trinity, burris]'
        type: string
      show_toaster:
        title: Show toaster
        description: If True, completion modal will be skipped and a side toaster
          will be displayed.
        type: boolean
      linked_clients:
        type: array
        items:
          type: integer
  CustomSQLMethodDetail:
    required:
    - title
    - description
    - sql_template
    - parameters
    - count_sql_template
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      unique_id:
        title: Unique id
        type: string
        format: uuid
      title:
        title: Title
        description: User friendly name for method
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        description: Verbose description of this method.
        type: string
        minLength: 1
      sql_template:
        title: Sql template
        description: SQL template with variables to store query that will be used
          to run eligibility for particular member
        type: string
        minLength: 1
      parameters:
        title: Parameters
        description: 'JSON field to store parameters in format - {name: {data_type,
          display_value}}. Supported type would be field, string, integer, date, operator,
          boolean'
        type: string
        minLength: 1
      associated_challenges:
        title: Associated challenges
        type: string
        readOnly: true
      count_sql_template:
        title: Count sql template
        description: SQL template with variables to store query that will be used
          to determine eligible user count
        type: string
        minLength: 1
  FieldsList:
    required:
    - display_name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      unique_id:
        title: Unique id
        type: string
        format: uuid
      display_name:
        title: Display name
        description: User friendly display name for field
        type: string
        maxLength: 64
        minLength: 1
      choices:
        title: Choices
        type: string
        readOnly: true
      data_type:
        title: Data type
        type: string
        minLength: 1
      multi_paths:
        title: Multi paths
        type: string
        readOnly: true
      is_searchable:
        title: Is searchable
        description: Indicate if this field offers a search options
        type: boolean
      extra_info:
        title: Extra info
        description: Search URL, fields to use a value and display are stored here.
        type: string
  MultiEligibilityEdit:
    required:
    - operator
    - sql_json
    type: object
    properties:
      operator:
        title: Operator
        type: string
        enum:
        - and
        - or
      sql_json:
        title: Sql json
        type: object
      select_all:
        title: Select all
        type: boolean
      challenge_ids:
        type: array
        items:
          type: string
      excluded_challenge_ids:
        type: array
        items:
          type: string
      invalid_challenges:
        title: Invalid challenges
        type: object
        additionalProperties:
          type: string
        readOnly: true
      async_task:
        title: Async task
        type: boolean
        readOnly: true
  QueryMetaData:
    type: object
    properties:
      questionnaire_mapping:
        title: Questionnaire mapping
        type: string
        readOnly: true
      conversion_models:
        title: Conversion models
        type: string
        readOnly: true
  SubQuery:
    required:
    - title
    - description
    - template
    - fields
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      unique_id:
        title: Unique id
        type: string
        format: uuid
      title:
        title: Title
        description: User friendly name for sub-query
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        description: Verbose description of sub-query.
        type: string
        minLength: 1
      is_sql:
        title: Is sql
        description: Boolean field to specify if the sql template is sql query or
          not
        type: boolean
      template:
        title: Template
        description: Sql query or JSON depending on the is_sql flag
        type: string
        minLength: 1
      fields:
        title: Fields
        description: JSON field to store the select fields for sql query
        type: string
        minLength: 1
      parameters:
        title: Parameters
        description: 'JSON field to store parameters in format - {name: {data_type,
          display_value}}.'
        type: string
      dependencies:
        type: array
        items:
          type: string
          format: uuid
        uniqueItems: true
      associated_challenges:
        title: Associated challenges
        type: string
        readOnly: true
  PhysicianIdName:
    title: Physician
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: string
        readOnly: true
  Claim:
    required:
    - date
    type: object
    properties:
      date:
        title: Date
        description: Date on which the claim was received by insurance provider
        type: string
        format: date-time
      physician:
        "$ref": "#/definitions/PhysicianIdName"
      practice_location:
        title: Practice location
        type: string
        readOnly: true
      claim_type:
        title: Claim type
        type: string
        readOnly: true
  ClaimFamilyMemberTypeChoice:
    required:
    - id
    type: object
    properties:
      id:
        title: Id
        type: integer
      display_text:
        title: Display text
        type: string
        readOnly: true
  EOBDocShareAccess:
    required:
    - eob_doc_share
    - eob_doc_share_password
    type: object
    properties:
      eob_doc_share:
        title: Eob doc share
        type: integer
      document:
        title: Document
        type: string
        readOnly: true
        format: uri
      eob_doc_share_password:
        title: Eob doc share password
        type: string
        minLength: 1
  EOBDocShareDetail:
    type: object
    properties:
      first_name:
        title: First name
        type: string
        minLength: 1
      last_name:
        title: Last name
        type: string
        minLength: 1
  OAuthCallback:
    required:
    - code
    type: object
    properties:
      payor:
        title: Payor
        type: integer
        enum:
        - 18
        - 19
        - 26
      payor_slug:
        title: Payor slug
        type: string
        enum:
        - medicare
        - va-lighthouse
        - bcbsfl
      code:
        title: Code
        type: string
        minLength: 1
  ClaimTypeChoices:
    required:
    - id
    - display_text
    type: object
    properties:
      id:
        title: Id
        type: string
        minLength: 1
      display_text:
        title: Display text
        type: string
        minLength: 1
  MemberId:
    type: object
    properties:
      member_id:
        title: Member id
        type: string
        readOnly: true
  ClientMemberDetail:
    type: object
    properties:
      full_name:
        title: Full name
        type: string
        readOnly: true
      date_of_birth:
        title: Date of birth
        type: string
        readOnly: true
      employee_id:
        title: Employee id
        type: string
        readOnly: true
      email:
        title: Email
        type: string
        readOnly: true
  ClientMembeDetailUpdate:
    required:
    - full_name
    - date_of_birth
    - employee_id
    - email
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      full_name:
        title: Full name
        description: Store member's verified full name
        type: string
        maxLength: 100
        minLength: 1
      date_of_birth:
        title: Date of birth
        description: Store member's verified date of birth
        type: string
        format: date
      employee_id:
        title: Employee id
        type: string
        maxLength: 16
      email:
        title: Email
        description: Store member's verified email
        type: string
        format: email
        maxLength: 255
        minLength: 1
  AltruaCreateMember:
    required:
    - salesforce_id
    type: object
    properties:
      salesforce_id:
        title: Salesforce id
        type: string
        minLength: 1
  MemberDocument:
    type: object
    properties:
      member_id:
        title: Member id
        type: string
        readOnly: true
      data:
        title: Data
        type: string
        readOnly: true
  MemberDocumentsCreate:
    required:
    - member_id
    - form_type
    - form_url
    - timestamp
    type: object
    properties:
      member_id:
        title: Member id
        type: string
        minLength: 1
      form_type:
        title: Form type
        type: string
        minLength: 1
      form_url:
        title: Form url
        type: string
        format: uri
        minLength: 1
      form_year:
        title: Form year
        description: Year for which this document was signed
        type: integer
        maximum: 65535
        minimum: 0
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  MemberBiometrics:
    type: object
    properties:
      member_id:
        title: Member id
        type: string
        readOnly: true
      data:
        title: Data
        type: string
        readOnly: true
  ClientNameDate:
    type: object
    properties:
      member_id:
        title: Member id
        type: string
        readOnly: true
      data:
        title: Data
        type: string
        readOnly: true
  Practice:
    title: Practice
    required:
    - name
    - address_line_1
    - city
    - state
    - zipcode
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        description: Name of the practice
        type: string
        maxLength: 255
        minLength: 1
      address_line_1:
        title: Address line 1
        type: string
        maxLength: 255
        minLength: 1
      address_line_2:
        title: Address line 2
        type: string
        maxLength: 255
      city:
        title: City
        type: string
        maxLength: 50
        minLength: 1
      state:
        title: State
        type: string
        maxLength: 50
        minLength: 1
      zipcode:
        title: Zipcode
        type: string
        maxLength: 10
        minLength: 1
  PhysicianPractice:
    required:
    - practice
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      practice:
        "$ref": "#/definitions/Practice"
  CreatePhysicianPracticeLocation:
    required:
    - first_name
    - last_name
    - zipcode
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: string
        readOnly: true
      physician_practices:
        type: array
        items:
          "$ref": "#/definitions/PhysicianPractice"
        readOnly: true
      first_name:
        title: First name
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 30
        minLength: 1
      specialities:
        type: array
        items:
          type: string
          enum: []
      practice_name:
        title: Practice name
        type: string
        maxLength: 255
      address_line_1:
        title: Address line 1
        type: string
        maxLength: 255
      address_line_2:
        title: Address line 2
        type: string
        maxLength: 255
      city:
        title: City
        type: string
        maxLength: 50
      state:
        title: State
        type: string
        maxLength: 50
      zipcode:
        title: Zipcode
        type: string
        maxLength: 5
        minLength: 1
      phone:
        title: Phone
        type: string
        maxLength: 15
      primary_location:
        title: Primary location
        type: boolean
      is_hospital:
        title: Is hospital
        type: boolean
  MemberPhysicianAffidavit:
    type: object
    properties:
      physician_name:
        title: Physician name
        description: Physician name to be shown on affidavit
        type: string
        maxLength: 100
  PhysicianIdNamePic:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: string
        readOnly: true
  CheckCoverageValidation:
    required:
    - insurance
    type: object
    properties:
      physician_practice_location:
        title: Physician practice location
        type: integer
      physician:
        title: Physician
        type: integer
      insurance:
        title: Insurance
        type: integer
  LabsList:
    required:
    - name
    - phone
    - address_line_1
    - city
    - state
    - zipcode
    - view_authorization
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        description: Name of the practice
        type: string
        maxLength: 255
        minLength: 1
      phone:
        title: Phone
        type: string
        maxLength: 15
        minLength: 1
      address_line_1:
        title: Address line 1
        type: string
        maxLength: 255
        minLength: 1
      address_line_2:
        title: Address line 2
        type: string
        maxLength: 255
      city:
        title: City
        type: string
        maxLength: 50
        minLength: 1
      state:
        title: State
        type: string
        maxLength: 50
        minLength: 1
      zipcode:
        title: Zipcode
        type: string
        maxLength: 10
        minLength: 1
      view_authorization:
        title: View authorization
        type: boolean
      image:
        title: Image
        type: string
        readOnly: true
  MemberPlaceParking:
    required:
    - site_id
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      place_id:
        title: Place id
        type: integer
      x:
        title: X
        type: string
        format: decimal
        x-nullable: true
      y:
        title: Y
        type: string
        format: decimal
        x-nullable: true
      image:
        title: Image
        description: Image of parking spot provided by member
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      site_id:
        title: Site id
        type: integer
      site_name:
        title: Site name
        type: string
        readOnly: true
        minLength: 1
  PhysicianVerificationAffidavit:
    required:
    - affidavit_type
    type: object
    properties:
      affidavit_type:
        title: Affidavit type
        type: string
        enum:
        - biometric
        - physical
        - dental
        - vision
        - nicotine
        - retrohealth
        - eagleaffidavit
      physician_name:
        title: Physician name
        description: Physician name to be shown on affidavit
        type: string
        maxLength: 100
      user_verified_detail:
        title: User verified detail
        description: Link to verified user data which will be used to show in affidavits
        type: integer
        x-nullable: true
      phone:
        title: Phone
        description: Physician phone to be shown on affidavit
        type: string
        maxLength: 15
      date_of_visit:
        title: Date of visit
        description: Date of visit to physician for affidavit
        type: string
        format: date
        x-nullable: true
      signature:
        title: Signature
        type: string
        readOnly: true
      biometric_required:
        title: Biometric required
        description: Tells if biometric is required or not. This field will have True/False
          value in biometric affidavit only
        type: boolean
        x-nullable: true
      notes:
        title: Notes
        description: Additional notes added by physician
        type: string
      response:
        title: Response
        description: 'When affidavit is of type nicotine, 1: User takes nicotine,
          2: User doesn''t take nicotine, 3: User takes nicotine but currently enrolled
          in a program'
        type: integer
        enum:
        - 1
        - 2
        - 3
        x-nullable: true
      medical_license_number:
        title: Medical license number
        type: string
        maxLength: 255
      provider_address:
        title: Provider address
        type: string
        maxLength: 255
  PlaceGroup:
    required:
    - grouping_id
    - display_text
    - text_raw
    - category
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      grouping_id:
        title: Grouping id
        description: Id for group
        type: string
        maxLength: 20
        minLength: 1
      display_text:
        title: Display text
        type: string
        minLength: 1
      text_raw:
        title: Text raw
        type: string
        minLength: 1
      icon:
        title: Icon
        description: Icon for Place group
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      category:
        title: Category
        type: string
        minLength: 1
      location_category:
        title: Location category
        description: Location category for Place list API.
        type: integer
        enum:
        - 0
        - 1
        - 2
        x-nullable: true
  PlacePhysicianAction:
    required:
    - contact_type
    type: object
    properties:
      icon_img:
        title: Icon img
        type: string
        readOnly: true
        format: uri
      label:
        title: Label
        description: Label displayed for contact
        type: string
        maxLength: 150
      contact:
        title: Contact
        type: string
        readOnly: true
      contact_type:
        title: Contact type
        description: Contact type
        type: string
        enum:
        - phone
        - fax
        - email
        - pager
        - other
        - url
  PlaceLocation:
    required:
    - latitude
    - longitude
    type: object
    properties:
      latitude:
        title: Latitude
        description: Latitude of the location
        type: string
        format: decimal
      longitude:
        title: Longitude
        description: Longitude of the location
        type: string
        format: decimal
      radius:
        title: Radius
        description: Radius of the location
        type: string
        format: decimal
        x-nullable: true
      location_type:
        title: Location type
        description: Type of location
        type: integer
        enum:
        - 0
        - 1
        - 2
  PlaceMedia:
    type: object
    properties:
      image:
        title: Image
        type: string
        readOnly: true
        format: uri
  PlaceDetail:
    required:
    - name
    - contacts
    - locations
    - media
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      is_favorite:
        title: Is favorite
        type: string
        readOnly: true
      distance:
        title: Distance
        type: string
        readOnly: true
      suite:
        title: Suite
        type: string
        maxLength: 50
        x-nullable: true
      floor:
        title: Floor
        type: string
        maxLength: 10
        x-nullable: true
      building:
        title: Building
        type: string
        maxLength: 50
        x-nullable: true
      address_line_1:
        title: Address line 1
        type: string
        maxLength: 255
      address_line_2:
        title: Address line 2
        type: string
        maxLength: 255
      city:
        title: City
        type: string
        maxLength: 50
      state:
        title: State
        type: string
        maxLength: 50
      zipcode:
        title: Zipcode
        type: string
        maxLength: 10
      priority:
        title: Priority
        description: Priority of place to be displayed
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      category:
        title: Category
        description: Category for type of place
        type: string
        maxLength: 50
      description:
        title: Description
        type: string
        readOnly: true
      name:
        title: Name
        description: Name of the place
        type: string
        maxLength: 150
        minLength: 1
      contacts:
        type: array
        items:
          "$ref": "#/definitions/PlacePhysicianAction"
      hours:
        title: Hours
        description: List of Json when place is open
        type: string
      locations:
        type: array
        items:
          "$ref": "#/definitions/PlaceLocation"
      media:
        type: array
        items:
          "$ref": "#/definitions/PlaceMedia"
      has_amenities:
        title: Has amenities
        type: string
        readOnly: true
      has_indoor_navigation:
        title: Has indoor navigation
        type: string
        readOnly: true
      is_map_enabled:
        title: Is map enabled
        description: Whether indoor map exists for location
        type: boolean
        x-nullable: true
      parent_site:
        title: Parent site
        type: string
        readOnly: true
  PlaceIndoorMap:
    required:
    - place_id
    - name
    - locations
    type: object
    properties:
      place_id:
        title: Place id
        description: Id for data received
        type: integer
        maximum: 2147483647
        minimum: -2147483648
      default_place_id:
        title: Default place id
        type: string
        readOnly: true
      name:
        title: Name
        description: Name of the place
        type: string
        maxLength: 150
        minLength: 1
      locations:
        type: array
        items:
          "$ref": "#/definitions/PlaceLocation"
      parent_site_id:
        title: Parent site id
        type: string
        readOnly: true
      places_json:
        title: Places json
        type: string
        readOnly: true
  PlaceList:
    required:
    - place_id
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      place_id:
        title: Place id
        description: Id for data received
        type: integer
        maximum: 2147483647
        minimum: -2147483648
      name:
        title: Name
        description: Name of the place
        type: string
        maxLength: 150
        minLength: 1
      suite:
        title: Suite
        type: string
        maxLength: 50
        x-nullable: true
      floor:
        title: Floor
        type: string
        maxLength: 10
        x-nullable: true
      building:
        title: Building
        type: string
        maxLength: 50
        x-nullable: true
      address_line_1:
        title: Address line 1
        type: string
        maxLength: 255
      address_line_2:
        title: Address line 2
        type: string
        maxLength: 255
      city:
        title: City
        type: string
        maxLength: 50
      state:
        title: State
        type: string
        maxLength: 50
      zipcode:
        title: Zipcode
        type: string
        maxLength: 10
      external_url:
        title: External url
        type: string
        readOnly: true
      distance:
        title: Distance
        type: string
        readOnly: true
      image:
        title: Image
        type: string
        readOnly: true
      parent_site:
        title: Parent site
        type: string
        readOnly: true
      child_sites:
        title: Child sites
        type: string
        readOnly: true
      hours:
        title: Hours
        description: List of Json when place is open
        type: string
      map_location:
        title: Map location
        type: string
        readOnly: true
  PortalList:
    required:
    - name
    - description
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        description: Name of the portal
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        description: Description of portal
        type: string
        minLength: 1
      home_url:
        title: Home url
        description: Home page url of portal
        type: string
        format: uri
        maxLength: 500
      username_reset_url:
        title: Username reset url
        description: Reset username url of portal
        type: string
        format: uri
        maxLength: 500
      password_reset_url:
        title: Password reset url
        description: Reset Password url of portal
        type: string
        format: uri
        maxLength: 500
      registration_url:
        title: Registration url
        description: Registration url of portal
        type: string
        format: uri
        maxLength: 500
      member_portal_id:
        title: Member portal id
        type: string
        readOnly: true
      locations:
        title: Locations
        type: string
        readOnly: true
      affected_member_connections:
        title: Affected member connections
        type: string
        readOnly: true
      is_labs_only_portal:
        title: Is labs only portal
        type: string
        readOnly: true
      no_portal:
        title: No portal
        type: string
        readOnly: true
        default: false
  PortalDoctorList:
    required:
    - name
    - description
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        description: Name of the portal
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        description: Description of portal
        type: string
        minLength: 1
      affected_member_connections:
        title: Affected member connections
        type: string
        readOnly: true
      request_status:
        title: Request status
        type: string
        readOnly: true
      member_portal_id:
        title: Member portal id
        type: string
        readOnly: true
      physician_names:
        title: Physician names
        type: string
        readOnly: true
      practice_names:
        title: Practice names
        type: string
        readOnly: true
      show_walkthrough:
        title: Show walkthrough
        type: string
        readOnly: true
      is_labs_only_portal:
        title: Is labs only portal
        type: string
        readOnly: true
  ProviderSubType:
    required:
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        description: Name of the provider sub type
        type: string
        maxLength: 255
        minLength: 1
  Specialities:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      id:
        title: ID
        type: integer
        readOnly: true
  AppointmentTypeVisitReasonProtocol:
    required:
    - applicable_for
    - reason_id
    - reason
    - appointment_type_id
    - appointment_type
    - is_virtual
    - location_id
    type: object
    properties:
      applicable_for:
        title: Applicable for
        description: Type of patient for which this is applicable
        type: integer
        enum:
        - 0
        - 1
        - 2
      workers_compensation:
        title: Workers compensation
        description: Workers Compensation for Physician
        type: boolean
      auto_accident:
        title: Auto accident
        description: Auto Accident for Physician
        type: boolean
      default_scheduling_phone_number:
        title: Default scheduling phone number
        type: string
        readOnly: true
      min_age:
        title: Min age
        description: Minimum age for this appointment
        type: integer
        maximum: 4294967295
        minimum: 0
        x-nullable: true
      max_age:
        title: Max age
        description: Maximum age for this appointment
        type: integer
        maximum: 4294967295
        minimum: 0
        x-nullable: true
      reason_id:
        title: Reason id
        type: integer
      reason:
        title: Reason
        type: string
        minLength: 1
      appointment_type_id:
        title: Appointment type id
        type: integer
      appointment_type:
        title: Appointment type
        type: string
        minLength: 1
      is_virtual:
        title: Is virtual
        type: boolean
      location_id:
        title: Location id
        type: integer
  ClientCancelReasonModal:
    required:
    - client
    type: object
    properties:
      client:
        title: Client
        type: integer
      details:
        title: Details
        type: string
        readOnly: true
      icon:
        title: Icon
        type: string
        readOnly: true
  MedstarApptCancellationReasonList:
    required:
    - reason
    - display_name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      reason:
        title: Reason
        description: Cancellation Reason
        type: string
        maxLength: 100
        minLength: 1
      display_name:
        title: Display name
        description: Display text of reason
        type: string
        maxLength: 100
        minLength: 1
  VisitReasonList:
    required:
    - reason
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      reason:
        title: Reason
        description: Visit Reason
        type: string
        maxLength: 100
        minLength: 1
      is_virtual:
        title: Is virtual
        description: If appt is in-person or virtual
        type: boolean
  MedstarRegistration:
    required:
    - phone_number
    - email
    - address_1
    - city
    - state
    - zip
    - first_name
    - last_name
    - sex_at_birth
    - dob
    - facility_code
    type: object
    properties:
      phone_number:
        title: Phone number
        type: string
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 60
        minLength: 1
      address_1:
        title: Address 1
        type: string
        maxLength: 31
        minLength: 1
      address_2:
        title: Address 2
        type: string
        maxLength: 31
      city:
        title: City
        type: string
        maxLength: 31
        minLength: 1
      state:
        title: State
        type: string
        maxLength: 31
        minLength: 1
      zip:
        title: Zip
        type: string
        maxLength: 10
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 30
        minLength: 1
      middle_name:
        title: Middle name
        type: string
        maxLength: 30
      sex_at_birth:
        title: Sex at birth
        type: string
        maxLength: 1
        minLength: 1
      dob:
        title: Dob
        type: string
        format: date
      relationship:
        title: Relationship
        type: string
      facility_code:
        title: Facility code
        type: string
        minLength: 1
  MedstarRegistrationComplete:
    required:
    - appointment_id
    - language
    - interpreter
    - is_student
    - country_of_origin
    - marital_status
    - employment_status
    - relation_to_guarantor
    type: object
    properties:
      appointment_id:
        title: Appointment id
        type: integer
      language:
        title: Language
        type: string
        minLength: 1
      interpreter:
        title: Interpreter
        type: string
        minLength: 1
      is_student:
        title: Is student
        type: boolean
      student:
        title: Student
        type: string
        x-nullable: true
      country_of_origin:
        title: Country of origin
        type: string
        minLength: 1
      marital_status:
        title: Marital status
        type: string
        minLength: 1
      employment_status:
        title: Employment status
        type: string
        minLength: 1
      relation_to_guarantor:
        title: Relation to guarantor
        type: string
        minLength: 1
  AppointmentTypeList:
    required:
    - type
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      type:
        title: Type
        description: Type of appointment
        type: string
        maxLength: 100
        minLength: 1
  PhysicianIdNamePicFavorite:
    title: Physician
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: string
        readOnly: true
      favorite:
        title: Favorite
        type: string
        readOnly: true
  AppointmentType:
    title: Appointment type
    required:
    - type
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      type:
        title: Type
        description: Type of appointment
        type: string
        maxLength: 100
        minLength: 1
  VisitReason:
    title: Reason for visit
    required:
    - reason
    - idx_name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      reason:
        title: Reason
        description: Visit Reason
        type: string
        maxLength: 100
        minLength: 1
      idx_name:
        title: Idx name
        description: IDX appointment type name
        type: string
        maxLength: 20
        minLength: 1
      is_virtual:
        title: Is virtual
        description: If appt is in-person or virtual
        type: boolean
  AppointmentsList:
    required:
    - physician
    - appointment_type
    - slot
    - reason_for_visit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      physician:
        "$ref": "#/definitions/PhysicianIdNamePicFavorite"
      practice_location:
        title: Practice location
        type: string
        readOnly: true
      appointment_type:
        "$ref": "#/definitions/AppointmentType"
      slot:
        title: Slot
        description: Time slot of the appointment in UTC
        type: string
        format: date-time
      member:
        title: Member
        type: string
        readOnly: true
      booked_by:
        title: Booked by
        type: string
        readOnly: true
      appointment_for_self:
        title: Appointment for self
        type: string
        readOnly: true
      reason_for_visit:
        "$ref": "#/definitions/VisitReason"
      is_registered:
        title: Is registered
        type: string
        readOnly: true
      is_new_appointment:
        title: Is new appointment
        type: string
        readOnly: true
      ask_for_attendance_confirmation:
        title: Ask for attendance confirmation
        type: string
        readOnly: true
      is_cancelled:
        title: Is cancelled
        description: If the appointment is cancelled
        type: boolean
  MedstarApptCancellation:
    required:
    - reason
    type: object
    properties:
      reason:
        title: Reason
        type: integer
      comment:
        title: Comment
        type: string
        maxLength: 1024
        x-nullable: true
      waitlist:
        title: Waitlist
        type: boolean
        x-nullable: true
      ancillaries:
        title: Ancillaries
        type: boolean
        x-nullable: true
      optional_resources:
        title: Optional resources
        type: boolean
        x-nullable: true
  MedstarApptReschedule:
    required:
    - session
    - session_start_time
    - slot_type
    - visitor_data
    - appt_datetime
    type: object
    properties:
      session:
        title: Session
        type: string
        minLength: 1
      session_start_time:
        title: Session start time
        type: string
      slot_type:
        title: Slot type
        type: string
        minLength: 1
      visitor_data:
        title: Visitor data
        type: object
      insurance:
        title: Insurance
        type: integer
        x-nullable: true
      overbook_flag:
        title: Overbook flag
        type: boolean
        x-nullable: true
      appt_datetime:
        title: Appt datetime
        type: string
        format: date-time
      insurances:
        type: array
        items:
          type: integer
      new_appointment_id:
        title: New appointment id
        type: string
        readOnly: true
  AppointmentFiles:
    required:
    - file_name
    - base64_data
    type: object
    properties:
      file_name:
        title: File name
        type: string
        minLength: 1
      base64_data:
        title: Base64 data
        type: string
        minLength: 1
  BookAppointment:
    required:
    - session
    - session_start_time
    - slot_type
    - visitor_data
    - physician
    - practice_location
    - slot
    - appointment_context
    - overbook_flag
    - mrn
    - facility_code
    - local_ids
    type: object
    properties:
      session:
        title: Session
        type: string
        minLength: 1
      session_start_time:
        title: Session start time
        type: string
      slot_type:
        title: Slot type
        type: string
        minLength: 1
      visitor_data:
        title: Visitor data
        type: object
      id:
        title: ID
        type: integer
        readOnly: true
      physician:
        title: Physician
        type: integer
      practice_location:
        title: Practice location
        type: integer
      seen_in_last_three_years:
        title: Seen in last three years
        description: Has this patient been seen in last 3 years
        type: boolean
      appointment_type:
        title: Appointment type
        description: Type of appointment
        type: integer
        x-nullable: true
      slot:
        title: Slot
        description: Time slot of the appointment in UTC
        type: string
        format: date-time
      insurance:
        title: Insurance
        type: integer
        x-nullable: true
      member:
        title: Visitor
        description: The patient for whom appointment is booked for, in case it is
          blank, patient details are in visitor_data
        type: integer
        x-nullable: true
      appointment_context:
        title: Appointment context
        description: Context of appointment
        type: string
        maxLength: 40
        minLength: 1
      reason_for_visit:
        title: Reason for visit
        description: Reason of patient visit
        type: integer
        x-nullable: true
      files:
        type: array
        items:
          "$ref": "#/definitions/AppointmentFiles"
      overbook_flag:
        title: Overbook flag
        type: integer
      mrn:
        title: Mrn
        type: string
        minLength: 1
      facility_code:
        title: Facility code
        description: Facility Code
        type: string
        maxLength: 100
        minLength: 1
      local_ids:
        title: Local ids
        type: object
      workers_compensation:
        title: Workers compensation
        description: Workers Compensation for Physician
        type: boolean
      auto_accident:
        title: Auto accident
        description: Auto Accident for Physician
        type: boolean
      insurances:
        type: array
        items:
          type: integer
  PhysicianAppointmentType:
    type: object
    properties:
      workers_compensation:
        title: Workers compensation
        description: Workers Compensation for Physician
        type: boolean
      auto_accident:
        title: Auto accident
        description: Auto Accident for Physician
        type: boolean
      default_scheduling_phone_number:
        title: Default scheduling phone number
        type: string
        readOnly: true
      min_age:
        title: Min age
        description: Minimum age for this appointment
        type: integer
        maximum: 4294967295
        minimum: 0
        x-nullable: true
      max_age:
        title: Max age
        description: Maximum age for this appointment
        type: integer
        maximum: 4294967295
        minimum: 0
        x-nullable: true
  EncounterAdd:
    required:
    - encounter_date
    - physician_id
    - visit_type
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      encounter_date:
        title: Encounter date
        type: string
        format: date-time
      physician_id:
        title: Physician id
        type: integer
      visit_type:
        title: Visit type
        type: string
        maxLength: 255
        minLength: 1
      follow_up_instructions:
        title: Follow up instructions
        type: string
      patient_instructions:
        title: Patient instructions
        type: string
      new_member_physician_linked:
        title: New member physician linked
        type: string
        readOnly: true
  MenuData:
    type: object
    properties:
      mapping:
        title: Mapping
        type: string
        readOnly: true
      menu:
        title: Menu
        type: string
        readOnly: true
  RegistrationData:
    type: object
    properties:
      registration_data:
        title: Registration data
        description: IDX fields needed for medstar registration
        type: string
        x-nullable: true
  UpdateAppointment:
    type: object
    properties:
      will_attend_appointment:
        title: Will attend appointment
        type: boolean
      appointment_context:
        title: Appointment context
        type: string
        minLength: 1
  AcknowledgeActivity:
    type: object
    properties:
      acknowledged:
        title: Acknowledged
        type: boolean
        readOnly: true
  UpdateBirthdayModalStatus:
    type: object
    properties:
      display_text:
        title: Display text
        type: string
        readOnly: true
        minLength: 1
      show_birthday_modal:
        title: Show birthday modal
        type: boolean
        readOnly: true
      id:
        title: Id
        type: integer
        readOnly: true
  HealthTribeExternalInvite:
    required:
    - invitee_first_name
    - invitee_last_name
    - inviter_client
    - relationship
    - inviter_first_name
    - inviter_last_name
    - inviter_gender
    - username
    type: object
    properties:
      invitee_first_name:
        title: Invitee First Name
        type: string
        maxLength: 30
        minLength: 1
      invitee_last_name:
        title: Invitee Last Name
        type: string
        maxLength: 30
        minLength: 1
      invitee_email:
        title: Invitee email
        type: string
        format: email
        maxLength: 254
      inviter_client:
        title: Inviter client
        description: Slug of client of inviter
        type: string
        maxLength: 50
        minLength: 1
      relationship:
        title: Relationship
        type: string
        enum:
        - Husband
        - Wife
        - Spouse
        - Son
        - Daughter
        - Child
        - Step Son
        - Step Daughter
        - Foster Child
        - Mother
        - Father
        - Parent
        - Step-Mother
        - Step-Father
        - Step-Parent
        - Foster Parent
        - Maternal Grandfather
        - Maternal Grandmother
        - Paternal Grandfather
        - Paternal Grandmother
        - Grandparent
        - Grandson
        - Granddaughter
        - Grandchild
        - Sister
        - Brother
        - Sibling
        - Half-Sister
        - Half-Brother
        - Half-Sibling
        - Step-Sister
        - Step-Brother
        - Step-Sibling
        - Aunt
        - Uncle
        - Auncle
        - Mother-In-Law
        - Father-In-Law
        - Parent-In-Law
        - Sister-In-Law
        - Brother-In-Law
        - Sibling-In-Law
        - Son-In-Law
        - Daughter-In-Law
        - Child-In-Law
        - Niece
        - Nephew
        - Nibling
        - Cousin
        - Relative
        - Friend
        - Ward
        - Provider
        - Legal Guardian
        - Sponsored Dependent
        - Social Worker
        - Care Manager
        - Caregiver
        - Other
        - Domestic Partner
      inviter_date_of_birth:
        title: Inviter date of birth
        description: Inviter Date of Birth
        type: string
        format: date
        x-nullable: true
      inviter_first_name:
        title: Inviter First Name
        type: string
        maxLength: 30
        minLength: 1
      inviter_last_name:
        title: Inviter Last Name
        type: string
        maxLength: 30
        minLength: 1
      inviter_gender:
        title: Inviter gender
        type: string
        enum:
        - M
        - F
        - O
        - U
        - N
      inviter_profile_photo_url:
        title: Inviter profile photo url
        type: string
        format: uri
        minLength: 1
        x-nullable: true
      username:
        title: Username
        description: Store uuid of the inviter
        type: string
        format: uuid
      token:
        title: Token
        type: string
        readOnly: true
        minLength: 1
      send_token:
        title: Send token
        type: boolean
        default: true
      sensitive_data_access:
        title: Sensitive data access
        description: Indicates level of access allowed to invitee regarding sensitive
          data
        type: integer
        maximum: 65535
        minimum: 0
  MeInvitedAsHealthTribe:
    required:
    - token
    - first_name
    - last_name
    - gender
    - gender_code
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      token:
        title: Token
        type: string
        maxLength: 40
        minLength: 1
      first_name:
        title: First name
        type: string
        minLength: 1
      last_name:
        title: Last name
        type: string
        minLength: 1
      profile_image:
        title: Profile image
        type: string
        readOnly: true
      gender:
        title: Gender
        type: string
        minLength: 1
      gender_code:
        title: Gender code
        type: string
        minLength: 1
      relationship:
        title: Relationship
        type: string
        readOnly: true
  GetHealthTribeInvite:
    required:
    - invitee_last_name
    - invitee_first_name
    type: object
    properties:
      invitee_last_name:
        title: Invitee Last Name
        type: string
        maxLength: 30
        minLength: 1
      invitee_first_name:
        title: Invitee First Name
        type: string
        maxLength: 30
        minLength: 1
      invitee_last_name_lower:
        title: Invitee last name lower
        description: Store invitee last name in lower case
        type: string
        maxLength: 30
      invitee_first_name_lower:
        title: Invitee first name lower
        description: Store invitee first name in lower case
        type: string
        maxLength: 30
      invitee_client:
        title: Invitee client
        description: Slug of client of invitee
        type: string
        readOnly: true
        minLength: 1
      inviter_last_name:
        title: Inviter Last Name
        type: string
        readOnly: true
        minLength: 1
      inviter_first_name:
        title: Inviter First Name
        type: string
        readOnly: true
        minLength: 1
      inviter_last_name_lower:
        title: Inviter last name lower
        description: Store inviter last name in lower case
        type: string
        maxLength: 30
      inviter_first_name_lower:
        title: Inviter first name lower
        description: Store inviter first name in lower case
        type: string
        maxLength: 30
      inviter_client:
        title: Inviter client
        description: Slug of client of inviter
        type: string
        readOnly: true
        minLength: 1
      inviter_gender:
        title: Inviter gender
        type: string
        enum:
        - M
        - F
        - O
        - U
        - N
        readOnly: true
      inviter_profile_photo:
        title: Inviter profile photo
        description: Inviter profile photo
        type: string
        readOnly: true
        format: uri
      inviter_date_of_birth:
        title: Inviter date of birth
        description: Inviter Date of Birth
        type: string
        format: date
        x-nullable: true
      relationship:
        title: Relationship
        type: string
        enum:
        - Husband
        - Wife
        - Spouse
        - Son
        - Daughter
        - Child
        - Step Son
        - Step Daughter
        - Foster Child
        - Mother
        - Father
        - Parent
        - Step-Mother
        - Step-Father
        - Step-Parent
        - Foster Parent
        - Maternal Grandfather
        - Maternal Grandmother
        - Paternal Grandfather
        - Paternal Grandmother
        - Grandparent
        - Grandson
        - Granddaughter
        - Grandchild
        - Sister
        - Brother
        - Sibling
        - Half-Sister
        - Half-Brother
        - Half-Sibling
        - Step-Sister
        - Step-Brother
        - Step-Sibling
        - Aunt
        - Uncle
        - Auncle
        - Mother-In-Law
        - Father-In-Law
        - Parent-In-Law
        - Sister-In-Law
        - Brother-In-Law
        - Sibling-In-Law
        - Son-In-Law
        - Daughter-In-Law
        - Child-In-Law
        - Niece
        - Nephew
        - Nibling
        - Cousin
        - Relative
        - Friend
        - Ward
        - Provider
        - Legal Guardian
        - Sponsored Dependent
        - Social Worker
        - Care Manager
        - Caregiver
        - Other
        - Domestic Partner
        readOnly: true
      invitee_email:
        title: Invitee email
        type: string
        format: email
        readOnly: true
        minLength: 1
      token:
        title: Token
        type: string
        readOnly: true
        minLength: 1
      token_expiry_time:
        title: Token expiry time
        type: string
        format: date-time
        readOnly: true
      invite_status:
        title: Invite status
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        readOnly: true
      username:
        title: Username
        description: Store uuid of the inviter
        type: string
        format: uuid
        readOnly: true
      invitee_profile_photo:
        title: Invitee profile photo
        description: Invitee profile photo set by the Inviter
        type: string
        readOnly: true
        format: uri
      sensitive_data_access:
        title: Sensitive data access
        description: Indicates level of access allowed to invitee regarding sensitive
          data
        type: integer
        readOnly: true
      invitee_date_of_birth:
        title: Invitee date of birth
        description: Invitee Date of Birth
        type: string
        format: date
        x-nullable: true
      is_removable:
        title: Is removable
        description: Whether minor can be removed by Inviter
        type: boolean
      invite_expiry_notification_sent:
        title: Invite expiry notification sent
        description: Whether invite expiry notification has been sent
        type: boolean
      invitee_member:
        title: Invitee
        description: Member who has been invited
        type: integer
        x-nullable: true
      actual_inviter_member:
        title: Actual inviter member
        description: Member who has impersonated and sent the invite via health tribe
        type: integer
        x-nullable: true
  InternalHealthTribeAcceptInvite:
    required:
    - invitee_username
    - invitee_email
    - username
    type: object
    properties:
      invitee_username:
        title: Invitee username
        description: Invitee username
        type: string
        minLength: 1
      invitee_email:
        title: Invitee email
        type: string
        minLength: 1
      username:
        title: Username
        description: Inviter username
        type: string
        minLength: 1
      first_name:
        title: First name
        type: string
        readOnly: true
        minLength: 1
      last_name:
        title: Last name
        type: string
        readOnly: true
        minLength: 1
      dob:
        title: Dob
        type: string
        format: date
        readOnly: true
      profile_photo:
        title: Profile photo
        type: string
        readOnly: true
        format: uri
      invitee_profile_photo_url:
        title: Invitee profile photo url
        type: string
        format: uri
        minLength: 1
        x-nullable: true
      gender:
        title: Gender
        type: string
        readOnly: true
        minLength: 1
      email:
        title: Email
        description: Email of the Inviter
        type: string
        readOnly: true
        minLength: 1
      sensitive_data_access:
        title: Sensitive data access
        type: integer
  InternalHealthTribeCancelInvite:
    type: object
    properties: {}
  InternalHealthTribeDeclineInvite:
    type: object
    properties: {}
  HealthTribeAcceptInvite:
    required:
    - token
    type: object
    properties:
      token:
        title: Token
        type: string
        maxLength: 40
        minLength: 1
      inviter:
        title: Inviter
        type: string
        readOnly: true
      can_invite_back:
        title: Can invite back
        type: string
        readOnly: true
  HealthTribeDeclineInvite:
    required:
    - token
    type: object
    properties:
      token:
        title: Token
        type: string
        maxLength: 40
        minLength: 1
  HealthTribeInviteeProfile:
    type: object
    properties:
      invitee_profile_photo:
        title: Invitee profile photo
        description: Profile photo added by the Inviter
        type: string
        readOnly: true
        format: uri
  HealthTribeMemberDetail:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        description: Email of the user
        type: string
        format: email
        maxLength: 255
        minLength: 1
      language:
        title: Language
        type: string
        enum:
        - en
        - es
      human_api_public_token:
        title: Human api public token
        type: string
        readOnly: true
      human_api_email:
        title: Human api email
        type: string
        readOnly: true
      member_id:
        title: Member id
        type: string
        minLength: 1
      insurance_portal_data:
        title: Insurance portal data
        type: string
        readOnly: true
      registration_height_incomplete_flag:
        title: Registration height incomplete flag
        type: string
        readOnly: true
      registration_address_incomplete_flag:
        title: Registration address incomplete flag
        type: string
        readOnly: true
      user_extra_data:
        title: User extra data
        type: string
        readOnly: true
  GetHealthTribeMemberData:
    required:
    - first_name
    - last_name
    type: object
    properties:
      first_name:
        title: First Name
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last Name
        type: string
        maxLength: 30
        minLength: 1
      profile_photo:
        title: Profile photo
        type: string
        readOnly: true
        format: uri
      date_of_birth:
        title: Date of Birth
        type: string
        format: date
        x-nullable: true
      is_subscribed:
        title: Is subscribed
        type: string
        readOnly: true
  ParentAttestation:
    required:
    - signature
    type: object
    properties:
      invitee_first_name:
        title: Invitee First Name
        type: string
        maxLength: 30
        minLength: 1
      invitee_last_name:
        title: Invitee Last Name
        type: string
        maxLength: 30
        minLength: 1
      relationship:
        title: Relationship
        type: string
        enum:
        - Husband
        - Wife
        - Spouse
        - Son
        - Daughter
        - Child
        - Step Son
        - Step Daughter
        - Foster Child
        - Mother
        - Father
        - Parent
        - Step-Mother
        - Step-Father
        - Step-Parent
        - Foster Parent
        - Maternal Grandfather
        - Maternal Grandmother
        - Paternal Grandfather
        - Paternal Grandmother
        - Grandparent
        - Grandson
        - Granddaughter
        - Grandchild
        - Sister
        - Brother
        - Sibling
        - Half-Sister
        - Half-Brother
        - Half-Sibling
        - Step-Sister
        - Step-Brother
        - Step-Sibling
        - Aunt
        - Uncle
        - Auncle
        - Mother-In-Law
        - Father-In-Law
        - Parent-In-Law
        - Sister-In-Law
        - Brother-In-Law
        - Sibling-In-Law
        - Son-In-Law
        - Daughter-In-Law
        - Child-In-Law
        - Niece
        - Nephew
        - Nibling
        - Cousin
        - Relative
        - Friend
        - Ward
        - Provider
        - Legal Guardian
        - Sponsored Dependent
        - Social Worker
        - Care Manager
        - Caregiver
        - Other
        - Domestic Partner
      invitee_profile_photo:
        title: Invitee profile photo
        type: string
        readOnly: true
        x-nullable: true
      invitee_date_of_birth:
        title: Invitee date of birth
        type: string
        format: date
      signature:
        title: Signature
        type: string
        minLength: 1
      related_member_username:
        title: Related member username
        type: string
        format: uuid
      invite_id:
        title: Invite id
        type: integer
        x-nullable: true
  HealthTribePermissionChoices:
    required:
    - id
    - display_text
    type: object
    properties:
      id:
        title: Id
        type: integer
      display_text:
        title: Display text
        type: string
        minLength: 1
  HealthTribeMemberPermissionsAccess:
    type: object
    properties:
      normal_sections:
        title: Normal sections
        type: string
        readOnly: true
      has_complete_access:
        title: Has complete access
        type: string
        readOnly: true
      notification_section_access:
        title: Notification section access
        type: string
        readOnly: true
  HealthTribeInvite:
    required:
    - invitee_first_name
    - invitee_last_name
    - relationship
    type: object
    properties:
      invitee_first_name:
        title: Invitee First Name
        type: string
        maxLength: 30
        minLength: 1
      invitee_last_name:
        title: Invitee Last Name
        type: string
        maxLength: 30
        minLength: 1
      invitee_email:
        title: Invitee email
        type: string
        format: email
        maxLength: 254
      relationship:
        title: Relationship
        type: string
        enum:
        - Husband
        - Wife
        - Spouse
        - Son
        - Daughter
        - Child
        - Step Son
        - Step Daughter
        - Foster Child
        - Mother
        - Father
        - Parent
        - Step-Mother
        - Step-Father
        - Step-Parent
        - Foster Parent
        - Maternal Grandfather
        - Maternal Grandmother
        - Paternal Grandfather
        - Paternal Grandmother
        - Grandparent
        - Grandson
        - Granddaughter
        - Grandchild
        - Sister
        - Brother
        - Sibling
        - Half-Sister
        - Half-Brother
        - Half-Sibling
        - Step-Sister
        - Step-Brother
        - Step-Sibling
        - Aunt
        - Uncle
        - Auncle
        - Mother-In-Law
        - Father-In-Law
        - Parent-In-Law
        - Sister-In-Law
        - Brother-In-Law
        - Sibling-In-Law
        - Son-In-Law
        - Daughter-In-Law
        - Child-In-Law
        - Niece
        - Nephew
        - Nibling
        - Cousin
        - Relative
        - Friend
        - Ward
        - Provider
        - Legal Guardian
        - Sponsored Dependent
        - Social Worker
        - Care Manager
        - Caregiver
        - Other
        - Domestic Partner
      invite_permissions:
        title: Invite permissions
        type: object
      id:
        title: ID
        type: integer
        readOnly: true
      invitee_profile_photo:
        title: Invitee profile photo
        type: string
        readOnly: true
        x-nullable: true
      sensitive_data_access:
        title: Sensitive data access
        type: integer
      invitee_date_of_birth:
        title: Invitee date of birth
        type: string
        format: date
        x-nullable: true
      is_adult:
        title: Is adult
        type: boolean
      invitee_member:
        title: Invitee member
        type: integer
        x-nullable: true
      invitee_member_username:
        title: Invitee member username
        type: string
        format: uuid
      is_removable:
        title: Is removable
        description: Whether minor can be removed by Inviter
        type: boolean
  RemoveFamilySuggestion:
    type: object
    properties:
      email:
        title: Email
        description: Email of the user
        type: string
        format: email
        maxLength: 255
        minLength: 1
      first_name:
        title: First Name
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last Name
        type: string
        maxLength: 30
        minLength: 1
      date_of_birth:
        title: Date of Birth
        type: string
        format: date
        x-nullable: true
      username:
        title: Username
        type: string
        format: uuid
  HealthTribeSectionChoices:
    type: object
    properties:
      id:
        title: Id
        description: Display text id for section category
        type: string
        readOnly: true
      display_text:
        title: Display text
        description: Display text for section category
        type: string
        readOnly: true
      dependency:
        title: Dependency
        description: Dependency Data for sections
        type: string
        readOnly: true
      sub_categories:
        title: Sub categories
        description: Sections as part of a category
        type: string
        readOnly: true
  HealthTribeChoices:
    required:
    - relationship
    - gender
    - gender_code
    type: object
    properties:
      username:
        title: Username
        type: string
        format: uuid
      relationship:
        title: Relationship
        type: string
        minLength: 1
      relation_category:
        title: Relation category
        type: string
        readOnly: true
      display_text:
        title: Display text
        type: string
        minLength: 1
      photo:
        title: Photo
        type: string
        readOnly: true
      gender:
        title: Gender
        type: string
        minLength: 1
      status:
        title: Status
        type: string
        readOnly: true
      invite_id:
        title: Invite id
        type: string
        readOnly: true
      invitee_switched:
        title: Invitee switched
        type: boolean
      age:
        title: Age
        type: string
        readOnly: true
      show_birthday_modal:
        title: Show birthday modal
        type: string
        readOnly: true
      id:
        title: ID
        type: integer
        readOnly: true
      email:
        title: Email
        type: string
        readOnly: true
      gender_code:
        title: Gender code
        type: string
        minLength: 1
      invitee_date_of_birth:
        title: Invitee date of birth
        type: string
        readOnly: true
      health_tribe_invitee_id:
        title: Health tribe invitee id
        description: Corresponding HealthTribeInvitee ID
        type: string
        readOnly: true
  HealthTribeSwitch:
    required:
    - username
    type: object
    properties:
      username:
        title: Username
        type: string
        format: uuid
  ActivityType:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      display_text:
        title: Display text
        type: string
        readOnly: true
  AddHealthTrackingMissingDevice:
    required:
    - device_name
    - wellness_type
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      device_name:
        title: Device name
        description: Device which is not available on add source page
        type: string
        maxLength: 255
        minLength: 1
      wellness_type:
        title: Wellness type
        description: wellness type for which device will be used
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
  HumanAPIConnect:
    required:
    - humanId
    - clientId
    - sessionToken
    type: object
    properties:
      humanId:
        title: Humanid
        type: string
        minLength: 1
      clientId:
        title: Clientid
        type: string
        minLength: 1
      sessionToken:
        title: Sessiontoken
        type: string
        minLength: 1
      human_api_public_token:
        title: Human api public token
        type: string
        readOnly: true
        minLength: 1
  SourceName:
    title: Source
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
  DisconnectedSources:
    type: object
    properties:
      source:
        "$ref": "#/definitions/SourceName"
      id:
        title: ID
        type: integer
        readOnly: true
  DynosenseAccount:
    required:
    - email
    - password
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  HealthID:
    type: object
    properties:
      data:
        title: Data
        type: string
        readOnly: true
      source_count:
        title: Source count
        type: string
        readOnly: true
      has_no_connected_source:
        title: Has no connected source
        type: string
        readOnly: true
  ActivityAddData:
    required:
    - activity_type
    - start_time
    type: object
    properties:
      activity_type:
        title: Activity type
        type: integer
      duration:
        title: Duration
        type: integer
        readOnly: true
      distance:
        title: Distance
        type: integer
      steps:
        title: Steps
        type: integer
        maximum: 9223372036854776000
        minimum: -9223372036854776000
        x-nullable: true
      calories:
        title: Calories
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      start_time:
        title: Start time
        type: string
        format: date-time
      end_time:
        title: End time
        type: string
        format: date-time
      unit:
        title: Unit
        description: Distance unit
        type: string
        enum:
        - 1
        - 2
        - 3
        - 4
  GraphData:
    type: object
    properties:
      data:
        title: Data
        type: string
        readOnly: true
      date_timestamp:
        title: Date timestamp
        type: string
        readOnly: true
  BloodGlucoseAddData:
    required:
    - value
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      value:
        title: Value
        type: string
        format: decimal
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  BloodGlucoseAllData:
    required:
    - timestamp
    - value
    - unit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      value:
        title: Value
        type: string
        format: decimal
      unit:
        title: Unit
        type: string
        maxLength: 150
        minLength: 1
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  BloodOxygenAddData:
    required:
    - value
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      value:
        title: Value
        type: string
        format: decimal
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  BloodOxygenAllData:
    required:
    - timestamp
    - value
    - unit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      value:
        title: Value
        type: string
        format: decimal
      unit:
        title: Unit
        type: string
        maxLength: 150
        minLength: 1
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  BloodPressureAddData:
    required:
    - systolic
    - diastolic
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      heart_rate:
        title: Heart rate
        type: string
        readOnly: true
      heart_rate_value:
        title: Heart rate value
        type: integer
        x-nullable: true
      systolic:
        title: Systolic
        type: integer
        maximum: 250
        minimum: 90
      diastolic:
        title: Diastolic
        type: integer
        maximum: 140
        minimum: 60
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  BloodPressureAllData:
    required:
    - timestamp
    - unit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      value:
        title: Value
        type: string
        readOnly: true
      unit:
        title: Unit
        type: string
        maxLength: 150
        minLength: 1
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  BMIAddData:
    required:
    - value
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      value:
        title: Value
        type: string
        format: decimal
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  BMIAllData:
    required:
    - timestamp
    - value
    - unit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      value:
        title: Value
        type: string
        format: decimal
      unit:
        title: Unit
        type: string
        maxLength: 150
        minLength: 1
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  BodyFatAddData:
    required:
    - value
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      value:
        title: Value
        type: string
        format: decimal
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  BodyFatAllData:
    required:
    - timestamp
    - value
    - unit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      value:
        title: Value
        type: string
        format: decimal
      unit:
        title: Unit
        type: string
        maxLength: 150
        minLength: 1
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  CaloriesAllData:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        readOnly: true
      value:
        title: Value
        type: string
        readOnly: true
      unit:
        title: Unit
        type: string
        readOnly: true
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  FitnessAllData:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        readOnly: true
      value:
        title: Value
        type: string
        readOnly: true
      unit:
        title: Unit
        type: string
        readOnly: true
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  HeartRateAddData:
    required:
    - value
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      value:
        title: Value
        type: integer
        maximum: 250
        minimum: 40
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  HeartRateAllData:
    required:
    - timestamp
    - value
    - unit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      value:
        title: Value
        type: integer
        maximum: 250
        minimum: 40
      unit:
        title: Unit
        type: string
        maxLength: 150
        minLength: 1
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  HeightAddData:
    required:
    - value
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      value:
        title: Value
        type: string
        format: decimal
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  HeightAllData:
    required:
    - timestamp
    - value
    - unit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      value:
        title: Value
        type: string
        format: decimal
      unit:
        title: Unit
        type: string
        maxLength: 150
        minLength: 1
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  SleepAddData:
    required:
    - start_time
    - main_sleep
    - time_to_fall_asleep
    - time_after_wakeup
    - time_asleep
    - time_awake
    type: object
    properties:
      start_time:
        title: Start time
        type: string
        format: date-time
      end_time:
        title: End time
        type: string
        format: date-time
        readOnly: true
      main_sleep:
        title: Main sleep
        type: boolean
      time_in_bed:
        title: Time in bed
        type: integer
        readOnly: true
      time_to_fall_asleep:
        title: Time to fall asleep
        type: integer
        maximum: 4294967295
        minimum: 0
      time_after_wakeup:
        title: Time after wakeup
        type: integer
        maximum: 4294967295
        minimum: 0
      time_asleep:
        title: Time asleep
        type: integer
        maximum: 4294967295
        minimum: 0
      time_awake:
        title: Time awake
        type: integer
        maximum: 4294967295
        minimum: 0
  SleepAllData:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        readOnly: true
      value:
        title: Value
        type: string
        readOnly: true
      unit:
        title: Unit
        type: string
        readOnly: true
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  StepsAllData:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        readOnly: true
      value:
        title: Value
        type: string
        readOnly: true
      unit:
        title: Unit
        type: string
        readOnly: true
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  TemperatureAddData:
    required:
    - value
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      value:
        title: Value
        description: Stored in Farenheit
        type: string
        format: decimal
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  TemperatureAllData:
    required:
    - timestamp
    - value
    - unit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      value:
        title: Value
        description: Stored in Farenheit
        type: string
        format: decimal
      unit:
        title: Unit
        type: string
        maxLength: 150
        minLength: 1
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  HealthIDToggle:
    required:
    - wellness_type
    type: object
    properties:
      wellness_type:
        title: Wellness type
        type: integer
        enum:
        - 1
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
      message:
        title: Message
        type: string
        readOnly: true
        minLength: 1
  WaterConsumptionAddData:
    required:
    - value
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      value:
        title: Value
        type: integer
        maximum: 1500
        minimum: 0
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  WaterConsumptionAllData:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        readOnly: true
      value:
        title: Value
        type: string
        readOnly: true
      unit:
        title: Unit
        type: string
        readOnly: true
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  WeightAddData:
    required:
    - value
    - timestamp
    type: object
    properties:
      unit:
        title: Unit
        type: string
        readOnly: true
        minLength: 1
      value:
        title: Value
        type: string
        format: decimal
      timestamp:
        title: Timestamp
        type: string
        format: date-time
  WeightAllData:
    required:
    - timestamp
    - value
    - unit
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      value:
        title: Value
        type: string
        format: decimal
      unit:
        title: Unit
        type: string
        maxLength: 150
        minLength: 1
      source:
        title: Source
        type: string
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
  HealthIDWellnessTypeChoices:
    required:
    - choices
    type: object
    properties:
      choices:
        type: array
        items:
          type: string
  ImmunizationAdd:
    required:
    - immunization
    - immunization_dates
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      immunization:
        title: Immunization
        type: integer
      immunization_dates:
        type: array
        items:
          type: string
          format: date-time
      physician:
        title: Physician
        type: integer
  ImmunizationChoice:
    required:
    - id
    type: object
    properties:
      id:
        title: Id
        type: integer
      display_text:
        title: Display text
        type: string
        readOnly: true
  TestTypeChoices:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      display_text:
        title: Display text
        type: string
        readOnly: true
  LockedHumanApiIdAddUpdate:
    required:
    - username
    - original_client
    type: object
    properties:
      human_api_id:
        title: Human api id
        description: Encrypted Human API ID.
        type: string
        maxLength: 255
        x-nullable: true
      username:
        title: Username
        type: string
        format: uuid
      original_client:
        title: Original client
        description: Slug of client email was generated in.
        type: string
        maxLength: 255
        minLength: 1
  MemberNarrative:
    required:
    - author
    - timestamp
    type: object
    properties:
      author:
        title: Author
        type: string
        maxLength: 255
        minLength: 1
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      organization_name:
        title: Organization name
        type: string
        readOnly: true
      entries:
        title: Entries
        type: string
        readOnly: true
  PlanOfCareAdd:
    required:
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      text:
        title: Text
        type: string
  PreferredDevice:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
  MemberProcedureAdd:
    required:
    - timestamp
    - procedure_id
    - physician
    type: object
    properties:
      timestamp:
        title: Timestamp
        type: string
        format: date-time
      procedure_id:
        title: Procedure id
        type: integer
      physician:
        title: Physician
        type: integer
      id:
        title: ID
        type: integer
        readOnly: true
  ProcedureTypeAhead:
    required:
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 1000
        minLength: 1
  Terms:
    type: object
    properties:
      medical_tc_ip:
        title: Medical tc ip
        type: string
        readOnly: true
        minLength: 1
      medical_tc_timestamp:
        title: Medical tc timestamp
        type: string
        format: date-time
        readOnly: true
  Source:
    title: Source
    type: object
    properties:
      name:
        title: Name
        type: string
        readOnly: true
      large_image:
        title: Large image
        type: string
        readOnly: true
        format: uri
      wellness_types:
        title: Wellness types
        type: string
        readOnly: true
      is_wellness:
        title: Is wellness
        type: boolean
      is_deletion_allowed:
        title: Is deletion allowed
        description: Allow deletion of this source and data from FE
        type: boolean
      source:
        title: Source
        description: Denote source of the device.
        type: string
        enum:
        - hapi
        - manual
        - dynosense
        - file
        - fhir
        - medfusion
        - device
        - enriched
        - computed
        - redox
        - childrens
        - one_up
        - VA
        - medstar
        - helix
  SourceMember:
    required:
    - source
    type: object
    properties:
      source:
        "$ref": "#/definitions/Source"
      connected:
        title: Connected
        type: boolean
      id:
        title: ID
        type: integer
        readOnly: true
  VitalAddData:
    required:
    - date
    type: object
    properties:
      date:
        title: Date
        type: string
        format: date-time
      results:
        title: Results
        type: string
        readOnly: true
      id:
        title: ID
        type: integer
        readOnly: true
      member_physician:
        title: Member physician
        type: integer
  WellnessDeviceDataTypeUpdate:
    type: object
    properties:
      primary:
        title: Primary
        type: boolean
      import_data:
        title: Import data
        description: Flag to denote if the member wants to import data for the given
          wellness data type from the given source
        type: boolean
  WellnessDevice:
    required:
    - is_single_data_type_source
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      source_name:
        title: Source name
        type: string
        readOnly: true
      primary:
        title: Primary
        type: boolean
      import_data:
        title: Import data
        description: Flag to denote if the member wants to import data for the given
          wellness data type from the given source
        type: boolean
      is_single_data_type_source:
        title: Is single data type source
        type: boolean
  Journey:
    title: Journey
    required:
    - title
    - description
    - stages_per_level
    type: object
    properties:
      image:
        title: Image
        type: string
        readOnly: true
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
      stages_per_level:
        title: Stages per level
        type: integer
        maximum: 65535
        minimum: 0
  MemberJourneyWithLevelDetails:
    required:
    - journey
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      journey:
        "$ref": "#/definitions/Journey"
      enrolled:
        title: Enrolled
        type: boolean
      visible:
        title: Visible
        type: boolean
      completed_date:
        title: Completed date
        type: string
        format: date
        x-nullable: true
      current_status:
        title: Current status
        type: string
        readOnly: true
  AchievementBadgeSection:
    required:
    - received_at
    - title
    - title_raw
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      received_at:
        title: Received at
        type: string
        format: date-time
      title:
        title: Title
        description: Title for the badge.
        type: string
        maxLength: 225
        minLength: 1
      title_raw:
        title: Title raw
        type: string
        minLength: 1
      image:
        title: Image
        type: string
        readOnly: true
        format: uri
  AchievementUserSection:
    required:
    - first_name
    - last_name
    type: object
    properties:
      first_name:
        title: First Name
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last Name
        type: string
        maxLength: 30
        minLength: 1
      level_details:
        title: Level details
        type: string
        readOnly: true
      profile_pic:
        title: Profile pic
        type: string
        readOnly: true
        format: uri
  BadgeDetail:
    required:
    - title
    type: object
    properties:
      title:
        title: Title
        description: Title for the badge.
        type: string
        maxLength: 225
        minLength: 1
      sub_title:
        title: Sub title
        type: string
        readOnly: true
      requirements:
        title: Requirements
        type: string
        readOnly: true
      image:
        title: Image
        type: string
        readOnly: true
        format: uri
  CareNeedChallengeList:
    required:
    - points
    type: object
    properties:
      description:
        title: Description
        type: string
        readOnly: true
      id:
        title: ID
        type: integer
        readOnly: true
      challenge:
        title: Challenge
        type: string
        readOnly: true
      visible:
        title: Visible
        type: boolean
      title:
        title: Title
        type: string
        readOnly: true
      completion_process:
        title: Completion process
        description: Method(Quiz, manual or internal/external action) by which challenge
          has been completed
        type: integer
        enum:
        - 1
        - 2
        - 3
        x-nullable: true
      points:
        title: Points
        type: integer
      is_completed:
        title: Is completed
        type: string
        readOnly: true
  CareNeedDetail:
    required:
    - shorthand_name
    - title
    type: object
    properties:
      shorthand_name:
        title: Shorthand name
        description: Name of the sub class of challenges
        type: string
        maxLength: 255
        minLength: 1
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        description: Description of challenge sub class
        type: string
      dismissal_questionnaire_id:
        title: Dismissal questionnaire id
        type: string
        readOnly: true
      completion_questionnaire_id:
        title: Completion questionnaire id
        type: string
        readOnly: true
      challenges:
        title: Challenges
        type: string
        readOnly: true
      journey_id:
        title: Journey id
        type: string
        readOnly: true
      is_verifying_data:
        title: Is verifying data
        type: string
        readOnly: true
      points:
        title: Points
        description: Points will be awarded on completion of care need
        type: integer
        maximum: 65535
        minimum: 0
  CareNeedDismissal:
    required:
    - care_need
    - member
    type: object
    properties:
      care_need:
        title: Care need
        type: string
        format: uuid
      member:
        title: Member
        type: integer
  GetLatestStageChallenge:
    type: object
    properties:
      latest_completed_msc_id:
        title: Latest completed msc id
        type: string
        readOnly: true
      latest_eligible_msc_id:
        title: Latest eligible msc id
        type: string
        readOnly: true
  ToggleChallengeDeferral:
    required:
    - toggle_to_defer
    type: object
    properties:
      is_deferred:
        title: Is deferred
        description: Denotes whether the challenge is deferred or not
        type: boolean
      deferred_time:
        title: Deferred time
        description: Denotes what is the total deferred time(in hours) for this challenge
          until it was previously deferred
        type: integer
        maximum: 65535
        minimum: 0
      last_deferred_at:
        title: Last deferred at
        description: Denotes when this challenge was last deferred by member
        type: string
        format: date-time
        x-nullable: true
      toggle_to_defer:
        title: Toggle to defer
        type: boolean
  MemberMyHealthJourneyId:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
  RewardPartnerWithRewardsAndMemberScore:
    required:
    - name
    - website
    - about
    type: object
    properties:
      image:
        title: Image
        type: string
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      website:
        title: Website
        type: string
        format: uri
        maxLength: 255
        minLength: 1
      about:
        title: About
        type: string
        minLength: 1
      rewards:
        title: Rewards
        type: string
        readOnly: true
      partner_benefits:
        title: Partner benefits
        type: string
        readOnly: true
  RewardFilterMultiSelect:
    type: object
    properties:
      reward_types:
        title: Reward types
        type: string
        readOnly: true
      reward_partners:
        title: Reward partners
        type: string
        readOnly: true
  RewardWithImage:
    title: Reward
    required:
    - delivery_type
    - name
    - priority
    - subject
    - about
    - reward_partner
    - reward_type
    type: object
    properties:
      image:
        title: Image
        type: string
        readOnly: true
      points:
        title: Points
        type: string
        readOnly: true
      active:
        title: Active
        type: boolean
      unique_id:
        title: Unique id
        type: string
        format: uuid
      delivery_type:
        title: Delivery type
        type: integer
        enum:
        - 1
        - 2
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      priority:
        title: Priority
        type: integer
        maximum: 4294967295
        minimum: 0
      subject:
        title: Subject
        type: string
        maxLength: 255
        minLength: 1
      whitelisted_zipcodes:
        title: Whitelisted zipcodes
        description: Comma separated whitelisted integer zipcodes for a reward
        type: string
      blacklisted_zipcodes:
        title: Blacklisted zipcodes
        description: Comma separated blacklisted integer zipcodes for a reward
        type: string
      about:
        title: About
        type: string
        minLength: 1
      is_enabled:
        title: Is enabled
        description: Represents whether this reward is enabled for listing and viewing
        type: boolean
      open_to_all:
        title: Open to all
        description: Represents whether this reward is available to all or only to
          select clients
        type: boolean
      retail_price:
        title: Retail price
        description: Retail price. This field is for internal use.
        type: string
        format: decimal
        x-nullable: true
      actual_price:
        title: Actual price
        description: Actual price. This field is for internal use.
        type: string
        format: decimal
        x-nullable: true
      tier:
        title: Tier
        description: Tier of reward. This field is for internal use
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        x-nullable: true
      update_targeted_member_reward_points:
        title: Update targeted member reward points
        description: If marked true, updation in points will also be reflected in
          currently favorited rewards
        type: boolean
      reward_partner:
        title: Reward partner
        type: integer
      reward_type:
        title: Reward type
        type: integer
  MemberRewardOrder:
    required:
    - reward
    - redeemed_date
    - points
    - member
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      status:
        title: Status
        type: string
        readOnly: true
      reward:
        "$ref": "#/definitions/RewardWithImage"
      created_at:
        title: Created at
        type: string
        format: date-time
      updated_at:
        title: Updated At
        type: string
        format: date-time
        readOnly: true
      active:
        title: Active
        type: boolean
      redeemed_date:
        title: Redeemed On Date
        type: string
        format: date
      points:
        title: Points
        type: integer
        maximum: 4294967295
        minimum: 0
      shipping_id:
        title: Shipping ID
        type: string
        maxLength: 100
        x-nullable: true
      shipper_name:
        title: Shipper's Name
        type: string
        maxLength: 255
        x-nullable: true
      email:
        title: Email
        type: string
        format: email
        maxLength: 255
        x-nullable: true
      address_line_1:
        title: Address line 1
        type: string
        maxLength: 255
        x-nullable: true
      address_line_2:
        title: Address line 2
        type: string
        maxLength: 255
        x-nullable: true
      city:
        title: City
        type: string
        maxLength: 50
        x-nullable: true
      state:
        title: State
        type: string
        maxLength: 50
        x-nullable: true
      zipcode:
        title: Zipcode
        type: string
        maxLength: 10
        x-nullable: true
      is_healthdevice_connected:
        title: Is healthdevice connected
        description: To represent the health device connected or not
        type: boolean
      member:
        title: Member
        type: integer
      old_reward:
        title: Old reward
        type: string
        format: uuid
        x-nullable: true
  RewardPartnerMini:
    title: Reward partner
    required:
    - name
    type: object
    properties:
      id:
        title: Id
        type: string
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
  Reward:
    title: Reward
    required:
    - reward_partner
    - delivery_type
    - name
    - priority
    - subject
    - about
    - reward_type
    type: object
    properties:
      image:
        title: Image
        type: string
        readOnly: true
      points:
        title: Points
        type: string
        readOnly: true
      is_targeted:
        title: Is targeted
        type: string
        readOnly: true
      reward_partner:
        "$ref": "#/definitions/RewardPartnerMini"
      active:
        title: Active
        type: boolean
      unique_id:
        title: Unique id
        type: string
        format: uuid
      delivery_type:
        title: Delivery type
        type: integer
        enum:
        - 1
        - 2
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      priority:
        title: Priority
        type: integer
        maximum: 4294967295
        minimum: 0
      subject:
        title: Subject
        type: string
        maxLength: 255
        minLength: 1
      whitelisted_zipcodes:
        title: Whitelisted zipcodes
        description: Comma separated whitelisted integer zipcodes for a reward
        type: string
      blacklisted_zipcodes:
        title: Blacklisted zipcodes
        description: Comma separated blacklisted integer zipcodes for a reward
        type: string
      about:
        title: About
        type: string
        minLength: 1
      is_enabled:
        title: Is enabled
        description: Represents whether this reward is enabled for listing and viewing
        type: boolean
      open_to_all:
        title: Open to all
        description: Represents whether this reward is available to all or only to
          select clients
        type: boolean
      retail_price:
        title: Retail price
        description: Retail price. This field is for internal use.
        type: string
        format: decimal
        x-nullable: true
      actual_price:
        title: Actual price
        description: Actual price. This field is for internal use.
        type: string
        format: decimal
        x-nullable: true
      tier:
        title: Tier
        description: Tier of reward. This field is for internal use
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        x-nullable: true
      update_targeted_member_reward_points:
        title: Update targeted member reward points
        description: If marked true, updation in points will also be reflected in
          currently favorited rewards
        type: boolean
      reward_type:
        title: Reward type
        type: integer
  MemberRewardOrderHistory:
    required:
    - status
    - status_id
    type: object
    properties:
      status:
        title: Status
        type: string
        minLength: 1
      created_at:
        title: Created at
        type: string
        format: date-time
      status_id:
        title: Status id
        type: integer
  MemberRewardOrderDetail:
    required:
    - reward
    - redeemed_date
    - points
    - status_history
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      reward:
        "$ref": "#/definitions/Reward"
      redeemed_date:
        title: Redeemed On Date
        type: string
        format: date
      points:
        title: Points
        type: integer
        maximum: 4294967295
        minimum: 0
      status_history:
        type: array
        items:
          "$ref": "#/definitions/MemberRewardOrderHistory"
      shipping_id:
        title: Shipping ID
        type: string
        maxLength: 100
        x-nullable: true
      shipper_name:
        title: Shipper's Name
        type: string
        maxLength: 255
        x-nullable: true
      shipment_tracking_link:
        title: Shipment tracking link
        type: string
        readOnly: true
  Address:
    type: object
    properties:
      address_line_1:
        title: Address line 1
        type: string
        readOnly: true
      address_line_2:
        title: Address line 2
        type: string
        readOnly: true
      city:
        title: City
        type: string
        readOnly: true
      state:
        title: State
        type: string
        readOnly: true
      zipcode:
        title: Zipcode
        type: string
        readOnly: true
  SectionalChallenge:
    required:
    - name
    - title
    - challenge_content_type
    type: object
    properties:
      client_specific_challenge:
        title: Client specific challenge
        type: string
        readOnly: true
      company:
        title: Company
        type: string
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      challenge_content_type:
        title: Challenge content type
        description: Content type(audio/video/html) to be used for this challenge.
        type: integer
        enum:
        - 1
        - 2
        - 3
      page_header:
        title: Page header
        description: Will be shown on the top of the page
        type: string
        maxLength: 255
      challenge_content:
        title: Challenge content
        type: string
        readOnly: true
      content_provider:
        title: Content provider
        type: string
        readOnly: true
      video_url:
        title: Video url
        description: Url should start with https://
        type: string
        format: uri
        maxLength: 255
      audio_url:
        title: Audio url
        type: string
        readOnly: true
      image:
        title: Image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      icon:
        title: Icon
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      challenge_class:
        title: Challenge class
        type: string
        minLength: 1
      unique_id:
        title: Unique id
        type: string
        format: uuid
      created_at:
        title: Created at
        type: string
        format: date-time
      description:
        title: Description
        type: string
  VariableTemplateList:
    required:
    - title
    - keyword
    - return_type
    - type
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      unique_id:
        title: Unique id
        type: string
        format: uuid
      title:
        title: Title
        description: Title for the variable template
        type: string
        maxLength: 255
        minLength: 1
      keyword:
        title: Keyword
        description: Unique word which is used to identify a variable template
        type: string
        maxLength: 64
        minLength: 1
      return_type:
        title: Return type
        description: Data type of the result returned by the template
        type: string
        enum:
        - string
        - integer
        - boolean
        - date
        - nullboolean
      type:
        title: Type
        description: Specifies the template type
        type: string
        enum:
        - sql
        - function
  AbandonedUserRegistration:
    required:
    - first_name
    - last_name
    - address_line_1
    - city
    - state
    - zipcode
    - gender
    type: object
    properties:
      first_name:
        title: First name
        description: First name of non-registered user
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last name
        description: Last name of non-registered user
        type: string
        maxLength: 30
        minLength: 1
      phone:
        title: Phone
        type: string
        maxLength: 10
        x-nullable: true
      date_of_birth:
        title: Date of birth
        description: DOB of non-registered user
        type: string
        format: date
        x-nullable: true
      address_line_1:
        title: Address line 1
        type: string
        maxLength: 255
        minLength: 1
      address_line_2:
        title: Address line 2
        type: string
        maxLength: 255
      city:
        title: City
        type: string
        maxLength: 50
        minLength: 1
      state:
        title: State
        type: string
        maxLength: 50
        minLength: 1
      zipcode:
        title: Zipcode
        type: string
        maxLength: 10
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 255
      gender:
        title: Gender
        type: string
        enum:
        - M
        - F
        - O
        - U
        - N
      active:
        title: Active
        type: boolean
      client_name:
        title: Client name
        type: string
        maxLength: 50
      ssn:
        title: Ssn
        type: string
  AssessmentQuestionAnswer:
    required:
    - title
    - description
    - user_instructions
    - threshold_value
    type: object
    properties:
      title:
        title: Title
        description: Questionnaire Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        description: Questionnaire description
        type: string
        minLength: 1
      user_instructions:
        title: User instructions
        type: string
        minLength: 1
      threshold_value:
        title: Threshold value
        description: Min score required for this questionnaire
        type: string
        maxLength: 150
      identity:
        title: Identity
        type: string
        format: uuid
        readOnly: true
      questions:
        title: Questions
        type: string
        readOnly: true
      id:
        title: ID
        type: integer
        readOnly: true
      max_questions_per_page:
        title: Max questions per page
        description: Maximum number of question that can be visible in a single page
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      linked_sections:
        title: Linked sections
        type: string
        readOnly: true
      sections_applied:
        title: Sections applied
        type: string
        readOnly: true
      is_pre_filled:
        title: Is pre filled
        description: Pre fill with previous answers
        type: boolean
      has_result_content:
        title: Has result content
        type: string
        readOnly: true
      start_button_text:
        title: Start button text
        type: string
        readOnly: true
      exclude_questionnaire:
        title: Exclude questionnaire
        type: string
        readOnly: true
  MemberAccountVerification:
    required:
    - uid
    - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      app_urls:
        title: App urls
        type: string
        readOnly: true
  AccountabilitySurveyQuiz:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  ServiceType:
    required:
    - english_name
    type: object
    properties:
      english_name:
        title: English name
        type: string
        maxLength: 255
        minLength: 1
      plan_benefits:
        title: Plan benefits
        type: string
        readOnly: true
  AddFamilyMemberEmail:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  AllFamilyMemberList:
    required:
    - email
    - first_name
    - last_name
    - relationship
    type: object
    properties:
      email:
        title: Email
        description: Email of the user
        type: string
        format: email
        maxLength: 255
        minLength: 1
      first_name:
        title: First Name
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last Name
        type: string
        maxLength: 30
        minLength: 1
      relationship:
        title: Relationship
        type: string
        minLength: 1
  PatientAllergyList:
    type: object
    properties:
      allergies:
        title: Allergies
        type: string
        readOnly: true
      has_no_allergies:
        title: Has no allergies
        type: string
        readOnly: true
  AddPatientAllergy:
    required:
    - allergy
    - status
    - severity
    - reactions
    - onset_date
    - treatment
    type: object
    properties:
      allergy:
        title: Allergy
        type: integer
      status:
        title: Status
        description: Clinical Status
        type: string
        enum:
        - A
        - N
        - R
        - U
        - C
        - RF
      severity:
        title: Severity
        type: integer
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        - 60
        - 70
      reactions:
        title: Reactions
        type: string
        maxLength: 100
      onset_date:
        title: Onset date
        type: string
        format: date
      last_episode:
        title: Last episode
        type: string
        format: date
        x-nullable: true
      treatment:
        title: Treatment
        type: string
        maxLength: 100
      name:
        title: Name
        description: Name of the allergy in case the allergy is other
        type: string
        maxLength: 255
        x-nullable: true
  AllergyTypeNameImage:
    title: Type
    type: object
    properties:
      image:
        title: Image
        type: string
        readOnly: true
      name:
        title: Name
        type: string
        readOnly: true
  Allergy:
    title: Allergy
    required:
    - name
    - type
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      type:
        "$ref": "#/definitions/AllergyTypeNameImage"
      is_other_allergy:
        title: Is other allergy
        type: string
        readOnly: true
  PatientAllergy:
    required:
    - severity_id
    - allergy
    - status
    - severity
    - reactions
    - treatment
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      self_reported:
        title: Self reported
        type: boolean
      action_required:
        title: Action required
        type: string
        readOnly: true
      severity_id:
        title: Severity id
        type: integer
      allergy:
        "$ref": "#/definitions/Allergy"
      status:
        title: Status
        type: string
        minLength: 1
      severity:
        title: Severity
        type: string
        minLength: 1
      reactions:
        title: Reactions
        type: string
        maxLength: 100
      onset_date:
        title: Onset date
        type: string
        readOnly: true
      last_episode:
        title: Last episode
        type: string
        readOnly: true
      treatment:
        title: Treatment
        type: string
        maxLength: 100
      name:
        title: Name
        description: Name of the allergy in case the allergy is other
        type: string
        maxLength: 255
        x-nullable: true
  PatientAllergyAddChoiceList:
    type: object
    properties:
      severity_choices:
        title: Severity choices
        type: string
        readOnly: true
      status_choices:
        title: Status choices
        type: string
        readOnly: true
      allergy_name_choices:
        title: Allergy name choices
        type: string
        readOnly: true
  PatientAllergyFilterChoiceList:
    type: object
    properties:
      severity_choices:
        title: Severity choices
        type: string
        readOnly: true
      status_choices:
        title: Status choices
        type: string
        readOnly: true
      allergy_types_choices:
        title: Allergy types choices
        type: string
        readOnly: true
  LocationsList:
    required:
    - location_list
    type: object
    properties:
      location_list:
        description: Ids of the locations to be authorized
        type: array
        items:
          description: Ids of the locations to be authorized
          type: integer
        uniqueItems: true
      signature:
        title: Signature
        type: string
        readOnly: true
      authorized_by:
        title: Authorized by
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
      created_using_walkthrough:
        title: Created using walkthrough
        type: boolean
        default: false
  PracticeAuthorization:
    required:
    - practice
    type: object
    properties:
      practice:
        title: Practice
        type: integer
      authorized_by:
        title: Authorized by
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
      signature:
        title: Signature
        type: string
        readOnly: true
      id:
        title: ID
        type: integer
        readOnly: true
      created_using_walkthrough:
        title: Created using walkthrough
        type: boolean
        default: false
  MemberCard:
    required:
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        description: Name of The Card
        type: string
        maxLength: 255
        minLength: 1
      front_image:
        title: Front image
        type: string
        readOnly: true
        format: uri
      back_image:
        title: Back image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      source:
        title: Source
        description: Source of the Member Card
        type: string
        enum:
        - manual
        - red_card
      card_id:
        title: Card id
        type: string
        readOnly: true
  ClinicalSummary:
    type: object
    properties:
      summary:
        title: Summary
        type: string
        readOnly: true
      extra_data:
        title: Extra data
        type: string
        readOnly: true
      use_care_need_old_flow:
        title: Use care need old flow
        type: string
        readOnly: true
      care_need_banner_content:
        title: Care need banner content
        type: string
        readOnly: true
  ClinicalSummaryRelationChoices:
    required:
    - choices
    type: object
    properties:
      choices:
        type: array
        items:
          type: string
  ClinicalSummarySectionChoices:
    required:
    - id
    - display_text
    type: object
    properties:
      id:
        title: Id
        type: integer
      display_text:
        title: Display text
        type: string
        minLength: 1
  ClinicalSummaryShare:
    required:
    - first_name
    - last_name
    - email
    - relationship
    type: object
    properties:
      first_name:
        title: First name
        type: string
        maxLength: 255
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 255
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      relationship:
        title: Relationship
        type: string
        maxLength: 255
        minLength: 1
      timezone_offset:
        title: Timezone offset
        type: string
        pattern: "^[-+]\\d{2}:\\d{2}"
        default: "+00:00"
        maxLength: 6
        minLength: 6
  ClinicalSummaryPDFAccess:
    required:
    - clinical_summary_share_password
    - clinical_summary_share_id
    type: object
    properties:
      clinical_summary_share_password:
        title: Clinical summary share password
        type: string
        minLength: 1
      clinical_summary_share_id:
        title: Clinical summary share id
        type: integer
      clinical_summary_pdf:
        title: Clinical summary pdf
        type: string
        readOnly: true
        format: uri
  ClinicalSummaryShareHistory:
    required:
    - first_name
    - last_name
    - email
    - relationship
    type: object
    properties:
      first_name:
        title: First name
        type: string
        maxLength: 255
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 255
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      relationship:
        title: Relationship
        type: string
        maxLength: 255
        minLength: 1
      timezone_offset:
        title: Timezone offset
        type: string
        pattern: "^[-+]\\d{2}:\\d{2}"
        default: "+00:00"
        maxLength: 6
        minLength: 6
      created_at:
        title: Created at
        type: string
        format: date-time
  ClinicalSummaryShareDetail:
    type: object
    properties:
      first_name:
        title: First name
        type: string
        minLength: 1
      last_name:
        title: Last name
        type: string
        minLength: 1
  ConsentChoice:
    required:
    - id
    - display_text
    type: object
    properties:
      id:
        title: Id
        description: Value of consent choice
        type: integer
      display_text:
        title: Display text
        description: Display text for consent choice
        type: string
        minLength: 1
  CopingWithStressSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  Covid19Assessment:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  DailySleepCheckIn:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  DashBoard:
    type: object
    properties:
      featured_content:
        title: Featured content
        type: string
        readOnly: true
      dashboard_visible_programs:
        title: Dashboard visible programs
        type: string
        readOnly: true
  DepressionScreeningQuiz:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
      survey_name:
        title: Survey name
        type: string
        readOnly: true
  DiabetesManagementSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  DiabetesSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  MemberConnectionDismiss:
    required:
    - member_connection_ids
    type: object
    properties:
      member_connection_ids:
        type: array
        items:
          type: integer
      reason_id:
        title: Reason id
        type: integer
      other:
        title: Other
        type: string
        minLength: 1
  MemberDocumentView:
    type: object
    properties:
      document:
        title: Document
        type: string
        minLength: 1
  MemberDocumentCreate:
    required:
    - signature
    - document_type
    type: object
    properties:
      signature:
        title: Signature
        type: string
        minLength: 1
      document_type:
        title: Document type
        type: integer
        enum:
        - 0
        - 1
        - 2
  DyslipidemiaFourSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  BaseFamilyMemberInvite:
    required:
    - first_name
    - last_name
    - date_of_birth
    - subscriber_relation
    type: object
    properties:
      first_name:
        title: First name
        description: First name of family member.
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last name
        description: Last name of family member.
        type: string
        maxLength: 30
        minLength: 1
      email:
        title: Email
        description: Email of the family member
        type: string
        format: email
        maxLength: 255
      date_of_birth:
        title: Date of birth
        type: string
        format: date
      subscriber_relation:
        title: Subscriber relation
        description: Family member's relation to primary member.
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
  FamilyMemberInvite:
    required:
    - family_members
    type: object
    properties:
      family_members:
        type: array
        items:
          "$ref": "#/definitions/BaseFamilyMemberInvite"
  AllFamilyMember:
    type: object
    properties:
      registered_members:
        title: Registered members
        type: string
        readOnly: true
      invited_members:
        title: Invited members
        type: string
        readOnly: true
      show_family_member_not_add_link:
        title: Show family member not add link
        type: string
        readOnly: true
  FamilyMemberInviteRelationship:
    required:
    - choices
    type: object
    properties:
      choices:
        type: array
        items:
          type: string
  FamilyMemberTeladocDetail:
    required:
    - family_subscriber_relation
    type: object
    properties:
      family_subscriber_relation:
        title: Family subscriber relation
        type: string
        minLength: 1
      has_completed_pre_requisites:
        title: Has completed pre requisites
        type: string
        readOnly: true
      is_covered_under_plan:
        title: Is covered under plan
        type: string
        readOnly: true
      member_insurance_id:
        title: Member insurance id
        type: string
        readOnly: true
      teladoc_id:
        title: Teladoc id
        type: string
        readOnly: true
      is_mhd_updated:
        title: Is mhd updated
        type: string
        readOnly: true
  FamilyMemberAllDetails:
    required:
    - first_name
    - last_name
    - gender
    - relation
    - relation_type
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      first_name:
        title: First name
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 30
        minLength: 1
      gender:
        title: Gender
        type: string
        enum:
        - M
        - F
        - O
        - U
        - N
      relation:
        title: Relation
        type: string
        minLength: 1
      relation_type:
        title: Relation type
        type: string
        minLength: 1
      date_of_birth:
        title: Date of birth
        type: string
        format: date
        x-nullable: true
      death_age:
        title: Death age
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      relation_type_code:
        title: Relation type code
        type: string
        readOnly: true
  FamilyMemberTree:
    type: object
    properties:
      father:
        title: Father
        type: string
        readOnly: true
      mother:
        title: Mother
        type: string
        readOnly: true
      brother:
        title: Brother
        type: string
        readOnly: true
      sister:
        title: Sister
        type: string
        readOnly: true
      paternal_grandfather:
        title: Paternal grandfather
        type: string
        readOnly: true
      paternal_grandmother:
        title: Paternal grandmother
        type: string
        readOnly: true
      maternal_grandfather:
        title: Maternal grandfather
        type: string
        readOnly: true
      maternal_grandmother:
        title: Maternal grandmother
        type: string
        readOnly: true
  FamilyMemberTreeDetail:
    required:
    - first_name
    - last_name
    - relation
    - gender
    - smoker
    - alcohol
    - exercise
    type: object
    properties:
      first_name:
        title: First name
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 30
        minLength: 1
      relation:
        title: Relation
        type: string
        minLength: 1
      race:
        title: Race
        type: string
        readOnly: true
      deceased:
        title: Deceased
        type: boolean
      date_of_birth:
        title: Date of birth
        type: string
        format: date
        x-nullable: true
      gender:
        title: Gender
        type: string
        minLength: 1
      weight:
        title: Weight in Pounds
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      height:
        title: Height in Inches
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      smoker:
        title: Smoker
        type: string
        minLength: 1
      alcohol:
        title: Alcohol
        type: string
        minLength: 1
      exercise:
        title: Exercise
        type: string
        minLength: 1
      conditions:
        title: Conditions
        type: string
        readOnly: true
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        x-nullable: true
      gender_code:
        title: Gender code
        type: string
        readOnly: true
      details_added_by:
        title: Details added by
        description: 'To know who filled the details for this family member : 1 -
          Invitor, 2 - Family member himself/herself, 3 - Any other family member'
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
        x-nullable: true
  FamilyMemberQuestionnaire:
    type: object
    properties:
      name:
        title: Name
        type: string
        readOnly: true
      relationship:
        title: Relationship
        type: string
        readOnly: true
      race:
        title: Race
        type: string
        readOnly: true
      date_of_birth:
        title: Date of birth
        type: string
        readOnly: true
      gender:
        title: Gender
        type: string
        readOnly: true
      weight:
        title: Weight
        type: string
        readOnly: true
      height:
        title: Height
        type: string
        readOnly: true
      smoker:
        title: Smoker
        type: string
        readOnly: true
      alcohol:
        title: Alcohol
        type: string
        readOnly: true
      exercise:
        title: Exercise
        type: string
        readOnly: true
      deceased_cause:
        title: Deceased cause
        type: string
        readOnly: true
      smoke_frequency:
        title: Smoke frequency
        type: string
        readOnly: true
      date_of_death:
        title: Date of death
        type: string
        readOnly: true
      allergies:
        title: Allergies
        type: string
        readOnly: true
      cancer:
        title: Cancer
        type: string
        readOnly: true
      clotting_disorders:
        title: Clotting disorders
        type: string
        readOnly: true
      coronary_bypass_surgery:
        title: Coronary bypass surgery
        type: string
        readOnly: true
      dementia_alzheimer:
        title: Dementia alzheimer
        type: string
        readOnly: true
      diabetes:
        title: Diabetes
        type: string
        readOnly: true
      gastrointestinal_disorders:
        title: Gastrointestinal disorders
        type: string
        readOnly: true
      heart_diseases:
        title: Heart diseases
        type: string
        readOnly: true
      high_blood_pressure:
        title: High blood pressure
        type: string
        readOnly: true
      high_cholesterol:
        title: High cholesterol
        type: string
        readOnly: true
      hip_fracture:
        title: Hip fracture
        type: string
        readOnly: true
      hypertension:
        title: Hypertension
        type: string
        readOnly: true
      kidney_diseases:
        title: Kidney diseases
        type: string
        readOnly: true
      lung_diseases:
        title: Lung diseases
        type: string
        readOnly: true
      osteoporosis:
        title: Osteoporosis
        type: string
        readOnly: true
      psychological_disorders:
        title: Psychological disorders
        type: string
        readOnly: true
      septicemia:
        title: Septicemia
        type: string
        readOnly: true
      stroke_brain_attack:
        title: Stroke brain attack
        type: string
        readOnly: true
      sudden_infant_death_syndrome:
        title: Sudden infant death syndrome
        type: string
        readOnly: true
      other:
        title: Other
        type: string
        readOnly: true
      other_races:
        title: Other races
        type: string
        readOnly: true
  FamilySelectorChoices:
    required:
    - state
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      display_text:
        title: Display text
        type: string
        readOnly: true
      phone:
        title: Phone
        type: string
        minLength: 1
      age:
        title: Age
        description: Represents the age of the family member in years only
        type: string
        readOnly: true
      username:
        title: Username
        type: string
        default: ''
        minLength: 1
      gender:
        title: Gender
        type: string
        minLength: 1
      state:
        title: State
        type: string
        maxLength: 50
        minLength: 1
  FamilySelector:
    required:
    - id
    type: object
    properties:
      id:
        title: Id
        type: integer
  FinancialWellnessSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  HealthAssessment:
    type: object
    properties:
      status:
        title: Status
        type: integer
        enum:
        - 0
        - 1
      completed_at:
        title: Completed at
        type: string
        format: date
        x-nullable: true
      survey_title:
        title: Survey title
        type: string
        readOnly: true
      changed_survey_title:
        title: Changed survey title
        type: string
        readOnly: true
      survey_id:
        title: Survey id
        type: integer
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
  HealthFollowUpSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  HealthHistoryQuiz:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  HelpSurveyQuiz:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  HighLevelDiagnoseAddChoiceList:
    type: object
    properties:
      severity_choices:
        title: Severity choices
        type: string
        readOnly: true
      status_choices:
        title: Status choices
        type: string
        readOnly: true
  InsuranceList:
    required:
    - insurance_payor
    - insurance_plan
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      insurance_payor:
        title: Insurance payor
        description: Insurance payor
        type: string
        maxLength: 128
        minLength: 1
      insurance_plan:
        title: Insurance plan
        description: Insurance health plan product
        type: string
        maxLength: 255
        minLength: 1
  MemberPlan:
    required:
    - member_plan_id
    - effective_date
    - group_number
    - member_payor_id
    - plan_number
    - total_claims
    - member_plan_active
    type: object
    properties:
      member_plan_id:
        title: Member plan id
        type: integer
      effective_date:
        title: Effective date
        type: string
        format: date
      end_date:
        title: End date
        type: string
        format: date
        x-nullable: true
      group_number:
        title: Group number
        description: ID allocated by provider for employer purchasing employee health
          policy
        type: string
        maxLength: 255
        minLength: 1
      member_payor_id:
        title: Member payor id
        type: integer
      member_payor_archived:
        title: Member payor archived
        type: boolean
        default: false
      payor:
        title: Payor
        type: string
        minLength: 1
      plan_name:
        title: Plan name
        type: string
        minLength: 1
      plan_number:
        title: Plan number
        type: string
        maxLength: 255
        minLength: 1
      total_claims:
        title: Total claims
        type: integer
      member_payor_tfa_active:
        title: Member payor tfa active
        type: boolean
        default: false
      member_insurance_id:
        title: Member insurance id
        type: string
        readOnly: true
      member_plan_active:
        title: Member plan active
        type: boolean
      is_current_plan:
        title: Is current plan
        type: string
        readOnly: true
      is_unknown_plan:
        title: Is unknown plan
        type: string
        readOnly: true
      is_payor_scraper_integrated:
        title: Is payor scraper integrated
        type: boolean
        default: false
      archived:
        title: Archived
        type: boolean
  FamilyMedicalQuestionnaire:
    type: object
    properties:
      diseases:
        title: Diseases
        type: string
        readOnly: true
      other_diseases:
        title: Other diseases
        type: string
        readOnly: true
  UserNameGender:
    title: Member
    required:
    - first_name
    - last_name
    - full_name
    - phone
    - gender
    - gender_code
    type: object
    properties:
      name_prefix:
        title: Name Prefix
        type: string
        maxLength: 10
      first_name:
        title: First Name
        type: string
        maxLength: 30
        minLength: 1
      middle_name:
        title: Middle name
        type: string
        maxLength: 30
      last_name:
        title: Last Name
        type: string
        maxLength: 30
        minLength: 1
      name_suffix:
        title: Name suffix
        type: string
        maxLength: 30
      full_name:
        title: Full name
        type: string
        minLength: 1
      language:
        title: Language
        type: string
        enum:
        - en
        - es
      phone:
        title: Phone
        type: string
        maxLength: 15
        minLength: 1
      gender:
        title: Gender
        type: string
        minLength: 1
      gender_code:
        title: Gender code
        type: string
        minLength: 1
  FamilyMemberInvitationValidation:
    type: object
    properties:
      questionnaire:
        title: Questionnaire
        type: string
        readOnly: true
      family_member_id:
        title: Family member id
        type: string
        format: slug
        pattern: "^[-a-zA-Z0-9_]+$"
        readOnly: true
        minLength: 1
      member:
        "$ref": "#/definitions/UserNameGender"
  MedfusionUser:
    required:
    - user_uuid
    type: object
    properties:
      user_uuid:
        title: User uuid
        type: string
        minLength: 1
      user_access_token:
        title: User access token
        type: string
        readOnly: true
      customer_uuid:
        title: Customer uuid
        type: string
        readOnly: true
      url:
        title: Url
        type: string
        readOnly: true
      api_key:
        title: Api key
        type: string
        readOnly: true
  MedfusionUserInfo:
    required:
    - medfusion_id
    type: object
    properties:
      medfusion_id:
        title: Medfusion id
        type: string
        minLength: 1
      medfusion_profile_id:
        title: Medfusion profile id
        type: string
        readOnly: true
  MedicalDoc:
    required:
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      created_at:
        title: Created at
        type: string
        format: date-time
      doc_type:
        title: Doc type
        type: string
        enum:
        - medical
        - nicotine
        - bmi
        - blood_pressure
        - glucose
        - ldl_cholesterol
  MedicalDocShare:
    required:
    - first_name
    - last_name
    - email
    - relationship
    - member_medical_doc
    type: object
    properties:
      first_name:
        title: First name
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 30
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      relationship:
        title: Relationship
        type: string
        maxLength: 255
        minLength: 1
      member_medical_doc:
        title: Member medical doc
        type: integer
  MedicalDocShareAccess:
    required:
    - member_medical_doc_share
    - member_medical_doc_share_password
    type: object
    properties:
      member_medical_doc_share:
        title: Member medical doc share
        type: integer
      document:
        title: Document
        type: string
        readOnly: true
        format: uri
      member_medical_doc_share_password:
        title: Member medical doc share password
        type: string
        minLength: 1
  MedicalDocShareDetail:
    type: object
    properties:
      first_name:
        title: First name
        type: string
        minLength: 1
      last_name:
        title: Last name
        type: string
        minLength: 1
  MedicalDocDetail:
    required:
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      created_at:
        title: Created at
        type: string
        format: date-time
      document:
        title: Document
        type: string
        readOnly: true
        format: uri
      shared_with:
        title: Shared with
        type: string
        readOnly: true
      doc_type:
        title: Doc type
        type: string
        enum:
        - medical
        - nicotine
        - bmi
        - blood_pressure
        - glucose
        - ldl_cholesterol
  MedicalHistoryCategoryChoices:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      display_text:
        title: Display text
        type: string
        readOnly: true
  MedicalQuestionnaire:
    type: object
    properties:
      completed_medical_quiz:
        title: Completed medical quiz
        type: string
        readOnly: true
      diseases:
        title: Diseases
        type: string
        readOnly: true
      other_diseases:
        title: Other diseases
        type: string
        readOnly: true
      surgeries:
        title: Surgeries
        type: string
        readOnly: true
      other_surgeries:
        title: Other surgeries
        type: string
        readOnly: true
      validation_rules:
        title: Validation rules
        type: string
        readOnly: true
      detailed_surgeries:
        title: Detailed surgeries
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      detailed_surgeries_category:
        title: Detailed surgeries category
        type: string
        readOnly: true
      detailed_diseases_category:
        title: Detailed diseases category
        type: string
        readOnly: true
      allergies:
        title: Allergies
        type: string
        readOnly: true
      other_allergies:
        title: Other allergies
        type: string
        readOnly: true
      other_reactions:
        title: Other reactions
        type: string
        readOnly: true
  MemberConnectionIdList:
    required:
    - member_connection_ids
    type: object
    properties:
      member_connection_ids:
        type: array
        items:
          type: integer
  MemberConnectionAuthorizationShare:
    required:
    - first_name
    - last_name
    - email
    - relationship
    - authorization
    type: object
    properties:
      first_name:
        title: First name
        description: Firstname of user with whom the authorization has been shared
        type: string
        maxLength: 30
        minLength: 1
      last_name:
        title: Last name
        description: Lastname of user with whom the authorization has been shared
        type: string
        maxLength: 30
        minLength: 1
      email:
        title: Email
        description: Email of user with whom the authorization has been shared
        type: string
        format: email
        maxLength: 254
        minLength: 1
      relationship:
        title: Relationship
        description: Relationship between shared and with whom it is shared
        type: string
        maxLength: 255
        minLength: 1
      authorization:
        title: Authorization
        type: integer
  MemberConnectionAuthorizationShareAccess:
    required:
    - member_connection_authorization_share
    - member_connection_authorization_share_password
    type: object
    properties:
      member_connection_authorization_share:
        title: Member connection authorization share
        type: integer
      authorization_pdf:
        title: Authorization pdf
        type: string
        readOnly: true
        format: uri
      member_connection_authorization_share_password:
        title: Member connection authorization share password
        type: string
        minLength: 1
  MemberConnectionAuthorizationShareDetail:
    type: object
    properties:
      first_name:
        title: First name
        type: string
        minLength: 1
      last_name:
        title: Last name
        type: string
        minLength: 1
  MemberConnectionRevoke:
    type: object
    properties: {}
  ConnectionSurveyOptions:
    required:
    - text
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      text:
        title: Text
        description: Option text
        type: string
        maxLength: 255
        minLength: 1
      extra_info_required:
        title: Extra info required
        description: Flag for wheather extra information is required for this option
        type: boolean
  PhysicianInfo:
    title: Physician
    required:
    - full_name
    - gender_code
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      profile_pic:
        title: Profile pic
        type: string
        readOnly: true
      full_name:
        title: Full name
        type: string
        minLength: 1
      gender:
        title: Gender
        type: string
        readOnly: true
      gender_code:
        title: Gender code
        type: string
        minLength: 1
  PhysicianPracticeLocationConnectionList:
    title: Physician practice location
    required:
    - physician
    - specialities
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      physician:
        "$ref": "#/definitions/PhysicianInfo"
      address:
        title: Address
        type: string
        minLength: 1
      specialities:
        type: array
        items:
          "$ref": "#/definitions/Specialities"
  PracticeStandardizedAddress:
    title: Practice
    required:
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        description: Name of the practice
        type: string
        maxLength: 255
        minLength: 1
      address:
        title: Address
        type: string
        readOnly: true
  MemberConnection:
    required:
    - physician_practice_location
    - practice
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      physician_practice_location:
        "$ref": "#/definitions/PhysicianPracticeLocationConnectionList"
      practice:
        "$ref": "#/definitions/PracticeStandardizedAddress"
      request_status:
        title: Request status
        type: string
        readOnly: true
      reject_reason:
        title: Reject reason
        description: Reason for rejection of connection request
        type: integer
        enum:
        - 1
        - 2
        - 3
        x-nullable: true
      authorization:
        title: Authorization
        type: string
        readOnly: true
      portal:
        title: Portal
        type: string
        readOnly: true
  MemberConsent:
    required:
    - approval_type
    type: object
    properties:
      approval_type:
        title: Approval type
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
  MemberConsentStatus:
    required:
    - id
    - display_text
    type: object
    properties:
      id:
        title: Id
        description: Value of consent choice
        type: integer
      display_text:
        title: Display text
        description: Display text for consent choice
        type: string
        minLength: 1
      approval_required:
        title: Approval required
        description: Boolean for approval requirement for consent choice
        type: string
        readOnly: true
  MemberHighLevelDiagnoseAdd:
    required:
    - diagnosis_end_date
    - status
    - severity
    - diagnose
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      diagnosis_end_date:
        title: Diagnosis end date
        type: string
        format: date
      status:
        title: Status
        type: string
        enum:
        - A
        - N
      severity:
        title: Severity
        description: Represents how severe is the diagnose
        type: string
        enum:
        - severe
        - moderate
        - mild
      treatment:
        title: Treatment
        description: What treatment is used or going on
        type: string
        maxLength: 255
      diagnose_data:
        title: Diagnose data
        type: string
        readOnly: true
      diagnose:
        title: Diagnose
        type: integer
  MemberHighLevelDiagnoseEdit:
    required:
    - diagnosis_end_date
    - status
    - severity
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      diagnosis_end_date:
        title: Diagnosis end date
        type: string
        format: date
      status:
        title: Status
        type: string
        enum:
        - A
        - N
      severity:
        title: Severity
        description: Represents how severe is the diagnose
        type: string
        enum:
        - severe
        - moderate
        - mild
      treatment:
        title: Treatment
        description: What treatment is used or going on
        type: string
        maxLength: 255
      diagnose_data:
        title: Diagnose data
        type: string
        readOnly: true
  Notification:
    title: Notification
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      notification_type:
        title: Notification type
        type: string
        readOnly: true
      created_at:
        title: Created at
        type: string
        readOnly: true
      notification_image:
        title: Notification image
        description: Tells if the notification is sent manually by admin
        type: string
        readOnly: true
        format: uri
      internal_redirect_url:
        title: Internal redirect url
        description: Internal app redirection urls for notifications
        type: string
        maxLength: 1200
  NotificationDelivery:
    required:
    - notification
    - message
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      notification:
        "$ref": "#/definitions/Notification"
      message:
        title: Message
        type: string
        minLength: 1
      clicked:
        title: Clicked
        description: Signifies weather an internal notification is clicked. None means
          it is not clickable
        type: boolean
        x-nullable: true
  MemberPointsHistory:
    required:
    - points
    - note
    type: object
    properties:
      points:
        title: Points
        type: integer
        maximum: 2147483647
        minimum: -2147483648
      note:
        title: Note
        description: Reason for adding this Manual Member Point
        type: string
        minLength: 1
      created_at:
        title: Created at
        type: string
        format: date-time
  MemberPortalAutomationStatus:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      is_valid:
        title: Is valid
        description: Flag to identify the validity of portal credentials. Null means
          not checked, True means valid, False means invalid
        type: boolean
        x-nullable: true
      is_automation_triggered:
        title: Is automation triggered
        type: string
        readOnly: true
  NutritionCheckInTwoSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  NutritionPreferencesSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  MemberOnDemandServicePreference:
    required:
    - preferences
    type: object
    properties:
      preferences:
        type: array
        items:
          type: integer
  OnboardingTask:
    required:
    - internal_action_url
    - desktop_internal_action_url
    type: object
    properties:
      title:
        title: Title
        type: string
        readOnly: true
      internal_action_url:
        title: Internal action url
        description: Relative internal app URL of the page where the task will be
          completed
        type: string
        maxLength: 255
        minLength: 1
      desktop_internal_action_url:
        title: Desktop internal action url
        description: Relative internal app URL for desktop of the page where the task
          will be completed
        type: string
        maxLength: 255
        minLength: 1
      is_completed:
        title: Is completed
        type: string
        readOnly: true
  PayorCredentialError:
    type: object
    properties:
      payors_with_login_error:
        title: Payors with login error
        type: string
        readOnly: true
  AddMemberPayor:
    required:
    - payor
    - member_insurance_id
    type: object
    properties:
      payor:
        title: Payor
        type: integer
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        type: string
        maxLength: 128
      is_payor_scraper_integrated:
        title: Is payor scraper integrated
        type: boolean
        readOnly: true
        default: false
      insurance_portal_data:
        title: Insurance portal data
        type: string
        readOnly: true
      member_insurance_id:
        title: Member insurance id
        type: string
        maxLength: 128
      is_rsa_encrypted:
        title: Is rsa encrypted
        type: boolean
      password:
        title: Password
        type: string
        maxLength: 172
  PayorVerification:
    type: object
    properties:
      data:
        title: Data
        type: string
        readOnly: true
  UpdateMemberPayor:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        type: string
        maxLength: 128
      is_payor_scraper_integrated:
        title: Is payor scraper integrated
        type: boolean
        readOnly: true
        default: false
      insurance_portal_data:
        title: Insurance portal data
        type: string
        readOnly: true
      member_insurance_id:
        title: Member insurance id
        type: string
        maxLength: 128
      is_rsa_encrypted:
        title: Is rsa encrypted
        type: boolean
      password:
        title: Password
        type: string
        maxLength: 172
  PhiaSubrogationSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  MyPolicyBenefit:
    type: object
    properties:
      benefit_summary_file:
        title: Benefit summary file
        type: string
        readOnly: true
  AddMemberPortal:
    required:
    - username
    - password
    - portal
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Login username for portal
        type: string
        maxLength: 128
        minLength: 1
      password:
        title: Password
        type: string
        maxLength: 172
        minLength: 1
      is_rsa_encrypted:
        title: Is rsa encrypted
        type: boolean
      is_automation_triggered:
        title: Is automation triggered
        type: string
        readOnly: true
      max_automation_verification_wait_time:
        title: Max automation verification wait time
        type: string
        readOnly: true
      portal:
        title: Portal
        description: Related portal
        type: integer
  PreDiabetesSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  MemberClientDataSharingSettings:
    required:
    - is_data_shared_with_client
    type: object
    properties:
      is_data_shared_with_client:
        title: Is data shared with client
        type: boolean
  MemberPreference:
    type: object
    properties:
      display_sensitive_data:
        title: Display sensitive data
        description: Flag to indicate if sensitive data should be displayed or not
          in the app.
        type: boolean
      modal_flags:
        title: Modal flags
        description: 'Stores modal preferences for member. For ex:- {''hide_health_information_modal'':
          True}'
        type: string
  UserProfilePicUpdate:
    type: object
    properties:
      profile_photo:
        title: Profile photo
        type: string
        readOnly: true
        format: uri
  AddProviderCredentials:
    required:
    - practice
    - username
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      practice:
        title: Practice
        description: Practice for which credentials are provided
        type: integer
      practice_location:
        title: Practice location
        description: Practice Location for which credentials are provided
        type: integer
        x-nullable: true
      username:
        title: Username
        description: Login username for portal
        type: string
        maxLength: 128
        minLength: 1
      password:
        title: Password
        type: string
        maxLength: 172
      is_rsa_encrypted:
        title: Is rsa encrypted
        type: boolean
  FamilyMemberRelationChoices:
    required:
    - choices
    type: object
    properties:
      choices:
        type: array
        items:
          type: string
  FamilyMemberRelationTypeChoices:
    required:
    - choices
    type: object
    properties:
      choices:
        type: array
        items:
          type: string
  SatisfactionSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  MemberPayorsWithScrapingInProgress:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      payor_name:
        title: Payor name
        type: string
        minLength: 1
      member_insurance_id:
        title: Member insurance id
        type: string
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
  HighLevelDiagnoseNameId:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      id:
        title: ID
        type: integer
        readOnly: true
  OnboardingStep:
    required:
    - onboarding_step
    type: object
    properties:
      onboarding_step:
        title: Onboarding step
        type: string
        enum:
        - not_started
        - intro_completed
        - focus_area_completed
        - todo_list_checked
        - main_menu_intro_completed
  ShareCard:
    required:
    - email
    - card_id
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      card_id:
        title: Card id
        type: integer
  SleepApneaManagementQuiz:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  SleepApneaQuiz:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
      high_risk:
        title: High risk
        type: boolean
  SocialDeterminantSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  BiometricResults:
    required:
    - vitals
    - test_results
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      fasting:
        title: Fasting
        description: Tells whether member was on a fast or not
        type: boolean
        x-nullable: true
      signature:
        title: Signature
        type: string
        readOnly: true
      vitals:
        type: array
        items:
          type: string
      test_results:
        type: array
        items:
          type: string
      results:
        title: Results
        type: string
        readOnly: true
      reported_date:
        title: Reported date
        description: Reported Date of Member to the Lab
        type: string
        format: date
        x-nullable: true
      physician:
        title: Physician
        type: string
        minLength: 1
  SubscriptionLeadGeneration:
    required:
    - company_name
    - contact_name
    - contact_email
    type: object
    properties:
      company_name:
        title: Company name
        type: string
        maxLength: 255
        minLength: 1
      contact_name:
        title: Contact name
        type: string
        maxLength: 255
        minLength: 1
      contact_email:
        title: Contact email
        type: string
        format: email
        minLength: 1
  PatientSupportAppointment:
    required:
    - summary
    - location
    - start
    - end
    - event_id
    type: object
    properties:
      summary:
        title: Summary
        type: string
        maxLength: 1000
        minLength: 1
      location:
        title: Location
        type: string
        maxLength: 100
        minLength: 1
      start:
        title: Start
        type: string
        maxLength: 27
        minLength: 1
      end:
        title: End
        type: string
        maxLength: 27
        minLength: 1
      event_id:
        title: Event id
        type: string
        maxLength: 1024
        minLength: 1
      phone_number:
        title: Phone number
        type: string
        maxLength: 10
        x-nullable: true
  SupportEmail:
    required:
    - category
    - subject
    - detail
    type: object
    properties:
      category:
        title: Category
        type: string
        enum:
        - account_setup
        - claims_deductibles_out_of_pocket
        - connected_health
        - doctors___pharmacies
        - feedback_suggestions
        - general_questions
        - health_journey___challenges
        - health_records
        - health_tribe
        - id_card_wallet
        - knowledge_center
        - medications
        - profile___settings
        - purchases
        - rewards
        - telemedicine
      subject:
        title: Subject
        type: string
        minLength: 1
      detail:
        title: Detail
        type: string
        minLength: 1
  AddUnknownPayor:
    required:
    - payor
    type: object
    properties:
      payor:
        title: Payor
        description: stores name of unknown payor
        type: string
        maxLength: 255
        minLength: 1
      username:
        title: Username
        type: string
        maxLength: 128
      password:
        title: Password
        type: string
        maxLength: 172
      member_insurance_id:
        title: Member insurance id
        type: string
        maxLength: 128
      is_rsa_encrypted:
        title: Is rsa encrypted
        type: boolean
  VitalList:
    type: object
    properties:
      vitals:
        title: Vitals
        type: string
        readOnly: true
  WellnessProgramFollowUpSurvey:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  RequestProxyAccess:
    type: object
    properties:
      proxy_details:
        title: Proxy details
        description: To store the details of the proxy member
        type: string
        x-nullable: true
      status:
        title: Status
        description: To keep a check whether data is connected or pending
        type: integer
        enum:
        - 1
        - 2
        - 3
  Quiz:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  StripeChargeLine:
    required:
    - amount
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      display_text:
        title: Display text
        type: string
        readOnly: true
      amount:
        title: Amount
        type: string
        format: decimal
  StripeCharge:
    required:
    - charge_type
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      amount:
        title: Amount
        type: string
        format: decimal
        readOnly: true
      charge_datetime:
        title: Charge datetime
        type: string
        format: date-time
        readOnly: true
      stripe_charge_line:
        type: array
        items:
          "$ref": "#/definitions/StripeChargeLine"
        readOnly: true
      charge_type:
        type: array
        items:
          type: string
          enum:
          - 1
      card_type:
        title: Card type
        type: string
        readOnly: true
        minLength: 1
      last_four:
        title: Last four
        type: string
        readOnly: true
        minLength: 1
  StripeCoupon:
    type: object
    properties:
      description:
        title: Description
        type: string
        maxLength: 255
        x-nullable: true
  StripeSource:
    title: Stripe default source
    required:
    - stripe_source
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      stripe_last4:
        title: Stripe last4
        description: Not updatable
        type: string
        maxLength: 255
        x-nullable: true
      stripe_brand:
        title: Stripe brand
        description: Not updatable
        type: string
        maxLength: 255
        x-nullable: true
      stripe_exp_month:
        title: Stripe exp month
        description: Not updatable
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      stripe_exp_year:
        title: Stripe exp year
        description: Not updatable
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      stripe_source:
        title: Stripe source
        type: string
        minLength: 1
  StripeCustomer:
    required:
    - stripe_default_source
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      stripe_default_source:
        "$ref": "#/definitions/StripeSource"
      stripe_trial_end:
        title: Stripe trial end
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      is_primary_subscriber:
        title: Is primary subscriber
        type: string
        readOnly: true
      has_active_subscription:
        title: Has active subscription
        type: string
        readOnly: true
  StripePlan:
    required:
    - stripe_name
    - stripe_amount
    - stripe_interval
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      stripe_name:
        title: Stripe name
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        type: string
        maxLength: 255
      stripe_amount:
        title: Stripe amount
        description: Not updatable
        type: integer
        maximum: 2147483647
        minimum: -2147483648
      stripe_interval:
        title: Stripe interval
        description: Not updatable
        type: string
        enum:
        - day
        - week
        - month
        - year
      stripe_interval_in_days:
        title: Stripe interval in days
        type: string
        readOnly: true
  StripeCouponDetail:
    title: Stripe coupon
    required:
    - stripe_id
    - stripe_duration
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      stripe_id:
        title: Stripe id
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        type: string
        maxLength: 255
        x-nullable: true
      stripe_amount_off:
        title: Stripe amount off
        description: Not updatable
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      stripe_duration:
        title: Stripe duration
        description: Not updatable
        type: string
        enum:
        - once
        - forever
        - repeating
      stripe_duration_in_months:
        title: Stripe duration in months
        description: Not updatable, required only if duration is repeating
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      stripe_percent_off:
        title: Stripe percent off
        description: Not updatable
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
  StripeSubscription:
    required:
    - stripe_plan
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      stripe_current_period_end:
        title: Stripe current period end
        description: Current billing period end time for subscription.
        type: string
        format: date-time
        x-nullable: true
      stripe_plan:
        "$ref": "#/definitions/StripePlan"
      stripe_status:
        title: Stripe status
        type: string
        enum:
        - trialing
        - active
        - past_due
        - canceled
        - unpaid
        x-nullable: true
      stripe_coupon:
        "$ref": "#/definitions/StripeCouponDetail"
      created_at:
        title: Created at
        type: string
        format: date-time
      auto_renew:
        title: Auto renew
        type: string
        readOnly: true
      visible:
        title: Visible
        type: boolean
        default: true
      is_primary_subscriber:
        title: Is primary subscriber
        type: string
        readOnly: true
      subscription_includes:
        title: Subscription includes
        type: string
        readOnly: true
      show_family_member_not_add_link:
        title: Show family member not add link
        type: string
        readOnly: true
  StripeSubscriptionCreate:
    required:
    - stripe_plan
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      stripe_current_period_end:
        title: Stripe current period end
        description: Current billing period end time for subscription.
        type: string
        format: date-time
        x-nullable: true
      stripe_plan:
        title: Stripe plan
        type: integer
      stripe_status:
        title: Stripe status
        type: string
        enum:
        - trialing
        - active
        - past_due
        - canceled
        - unpaid
        x-nullable: true
      stripe_coupon:
        title: Stripe coupon
        type: string
      created_at:
        title: Created at
        type: string
        format: date-time
      auto_renew:
        title: Auto renew
        type: string
        readOnly: true
      visible:
        title: Visible
        type: boolean
        default: true
      is_primary_subscriber:
        title: Is primary subscriber
        type: string
        readOnly: true
      subscription_includes:
        title: Subscription includes
        type: string
        readOnly: true
      show_family_member_not_add_link:
        title: Show family member not add link
        type: string
        readOnly: true
  MedicationAlertStatusUpdate:
    required:
    - status
    - event_datetime
    type: object
    properties:
      status:
        title: Status
        type: integer
        enum:
        - 3
        - 2
        - 1
        - 4
        - 5
      event_datetime:
        title: Event datetime
        type: string
        format: date-time
      device_timezone:
        title: Device timezone
        type: string
        minLength: 1
      questionnaire_identity:
        title: Questionnaire identity
        type: string
        readOnly: true
      recurring_event_detail_id:
        title: Recurring event detail id
        type: string
        readOnly: true
      snooze_time:
        title: Snooze time
        type: string
        readOnly: true
      allowed_status:
        title: Allowed status
        type: string
        readOnly: true
  PharmaceuticalImage:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      pill_image:
        title: Pill image
        type: string
        readOnly: true
      strength:
        title: Strength
        type: string
        maxLength: 150
        x-nullable: true
      strength_measure:
        title: Strength measure
        type: string
        maxLength: 50
        x-nullable: true
      label_image:
        title: Label image
        type: string
        readOnly: true
  MissingImagesMemberPharmaceuticals:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      similar_pharmaceuticals:
        title: Similar pharmaceuticals
        type: string
        readOnly: true
  PendingRefills:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      instructions_for_use:
        title: Instructions for use
        type: string
      image:
        title: Image
        type: string
        readOnly: true
      pharmaceutical:
        title: Pharmaceutical
        type: string
        readOnly: true
  PharmacyDetail:
    required:
    - name
    - status
    - store_number
    - emergency_phone
    - phone
    - address_line_1
    - city
    - state
    - zipcode
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      status:
        title: Status
        type: string
        maxLength: 255
        minLength: 1
      store_number:
        title: Store number
        type: string
        maxLength: 255
        minLength: 1
      emergency_phone:
        title: Emergency phone
        type: string
        maxLength: 15
        minLength: 1
      open_hours:
        title: Open hours
        type: string
      open_24_hours:
        title: Open 24 hours
        type: boolean
        x-nullable: true
      phone:
        title: Phone
        type: string
        maxLength: 15
        minLength: 1
      address_line_1:
        title: Address line 1
        type: string
        minLength: 1
      address_line_2:
        title: Address line 2
        type: string
        minLength: 1
      city:
        title: City
        type: string
        minLength: 1
      state:
        title: State
        type: string
        minLength: 1
      zipcode:
        title: Zipcode
        type: string
        pattern: "(^\\d{5}(\\-\\d{4})?$|^\\d{9}$)"
        minLength: 1
      latitude:
        title: Latitude
        type: string
        format: decimal
      longitude:
        title: Longitude
        type: string
        format: decimal
      miles:
        title: Miles
        type: string
        readOnly: true
      member_pharmacy:
        title: Member pharmacy
        type: string
        readOnly: true
  PharmacyAdd:
    required:
    - phone
    - name
    - address_line_1
    - city
    - state
    - zipcode
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      phone:
        title: Phone
        type: string
        maxLength: 15
        minLength: 7
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      address_line_1:
        title: Address line 1
        type: string
        minLength: 1
      address_line_2:
        title: Address line 2
        type: string
        minLength: 1
      city:
        title: City
        type: string
        minLength: 1
      state:
        title: State
        type: string
        minLength: 1
      zipcode:
        title: Zipcode
        type: string
        pattern: "(^\\d{5}(\\-\\d{4})?$|^\\d{9}$)"
        minLength: 1
      latitude:
        title: Latitude
        type: string
        format: decimal
      longitude:
        title: Longitude
        type: string
        format: decimal
  Pharmacy:
    required:
    - name
    - status
    - store_number
    - emergency_phone
    - phone
    - address_line_1
    - city
    - state
    - zipcode
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      status:
        title: Status
        type: string
        maxLength: 255
        minLength: 1
      store_number:
        title: Store number
        type: string
        maxLength: 255
        minLength: 1
      emergency_phone:
        title: Emergency phone
        type: string
        maxLength: 15
        minLength: 1
      open_hours:
        title: Open hours
        type: string
      open_24_hours:
        title: Open 24 hours
        type: boolean
        x-nullable: true
      phone:
        title: Phone
        type: string
        maxLength: 15
        minLength: 1
      address_line_1:
        title: Address line 1
        type: string
        minLength: 1
      address_line_2:
        title: Address line 2
        type: string
        minLength: 1
      city:
        title: City
        type: string
        minLength: 1
      state:
        title: State
        type: string
        minLength: 1
      zipcode:
        title: Zipcode
        type: string
        pattern: "(^\\d{5}(\\-\\d{4})?$|^\\d{9}$)"
        minLength: 1
      latitude:
        title: Latitude
        type: string
        format: decimal
      longitude:
        title: Longitude
        type: string
        format: decimal
      miles:
        title: Miles
        type: string
        readOnly: true
  AddUpdatePrescriptionFill:
    required:
    - date
    - member_pharmaceutical
    type: object
    properties:
      date:
        title: Date
        type: string
        format: date
      days_supply:
        title: Days supply
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      prescription_number:
        title: Prescription number
        description: Prescription Number
        type: string
        maxLength: 16
        x-nullable: true
      member_pharmaceutical:
        title: Member pharmaceutical
        type: integer
      pharmacy:
        title: Pharmacy
        type: integer
        x-nullable: true
      refills_remaining:
        title: Refills remaining
        type: integer
        maximum: 4294967295
        minimum: 0
        x-nullable: true
  RefillDetail:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      pharmaceutical:
        title: Pharmaceutical
        type: string
        readOnly: true
      prescription_fill:
        title: Prescription fill
        type: string
        readOnly: true
  MedicationsPrescriptions:
    type: object
    properties:
      prescriptions:
        title: Prescriptions
        type: string
        readOnly: true
      has_prescriptions:
        title: Has prescriptions
        type: string
        readOnly: true
  AddMemberPharmaceutical:
    required:
    - pharmaceutical
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      physician:
        title: Physician
        type: integer
      pharmaceutical:
        title: Pharmaceutical
        type: integer
      prescribed_date:
        title: Prescribed date
        type: string
        format: date
        x-nullable: true
      refills:
        title: Refills
        description: Number of refills allowed/prescribed
        type: integer
        maximum: 4294967295
        minimum: 0
        x-nullable: true
      next_refill_date:
        title: Next refill date
        type: string
        format: date
        x-nullable: true
      prescription_fill:
        title: Prescription fill
        type: string
        readOnly: true
      rx_id:
        title: Rx id
        description: RX id on pharmaceutical label
        type: string
        maxLength: 255
      quantity:
        title: Quantity
        description: Quantity for Prescription
        type: string
        format: decimal
        x-nullable: true
      instructions_for_use:
        title: Instructions for use
        type: string
      related_conditions:
        type: array
        items:
          type: string
      pharmacy:
        title: Pharmacy
        type: integer
      is_editable:
        title: Is editable
        type: boolean
        readOnly: true
      alert:
        title: Alert
        description: Alert Data for Pharmaceutical
        type: object
        additionalProperties:
          type: string
      nick_name:
        title: Nick name
        description: Nick name of medication
        type: string
        maxLength: 750
      refill_alert:
        title: Refill alert
        description: Refill notifications are ON.
        type: boolean
      medication_alert:
        title: Medication alert
        description: Medicine reminder notifications are ON.
        type: boolean
      pharmaceutical_not_found:
        title: Pharmaceutical not found
        description: True if user's pill was not found
        type: boolean
      pill_image:
        title: Pill image
        type: string
        readOnly: true
  PrescriptionChoice:
    type: object
    properties:
      id:
        title: Id
        type: string
        readOnly: true
      display_text:
        title: Display text
        type: string
        readOnly: true
  PharmaceuticalDosageList:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      strength:
        title: Strength
        type: string
        maxLength: 150
        x-nullable: true
      strength_measure:
        title: Strength measure
        type: string
        maxLength: 50
        x-nullable: true
      pill_image:
        title: Pill image
        type: string
        readOnly: true
  PrescriptionsFilterChoice:
    type: object
    properties:
      pharmacy:
        title: Pharmacy
        type: string
        readOnly: true
      pharmaceutical:
        title: Pharmaceutical
        type: string
        readOnly: true
  PrescriptionRelatedCondition:
    required:
    - condition_type
    - value
    - display_value
    type: object
    properties:
      condition_type:
        title: Condition type
        description: Integer Field to identify Related Condition. Possible values
          csn be 1 (Allergy), 2 (Diagnose), 3 (Surgery) and 4 (Procedure).
        type: integer
      value:
        title: Value
        description: ID (Integer value) used to identify.
        type: integer
      display_value:
        title: Display value
        description: Display value for condition
        type: string
        minLength: 1
  MemberPharmaceuticalList:
    type: object
    properties:
      has_prescriptions:
        title: Has prescriptions
        type: string
        readOnly: true
      prescriptions:
        title: Prescriptions
        type: string
        readOnly: true
      historical_prescriptions:
        title: Historical prescriptions
        type: string
        readOnly: true
  PrescriptionList:
    type: object
    properties:
      has_prescriptions:
        title: Has prescriptions
        type: string
        readOnly: true
      prescriptions:
        title: Prescriptions
        type: string
        readOnly: true
  HistoricalMemberPharmaceutical:
    type: object
    properties:
      is_historical:
        title: Is historical
        description: Field to show member does not take this medicine anymore
        type: boolean
  UpdateMemberPharmaceuticalImage:
    type: object
    properties:
      pill_image:
        title: Pill image
        type: string
        readOnly: true
  MemberProgramChallenge:
    required:
    - start_date
    - time_frame_end
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      program_name:
        title: Program name
        type: string
        readOnly: true
      program_start_date:
        title: Program start date
        type: string
        format: date
      reward_points:
        title: Reward points
        type: string
        readOnly: true
      total_challenges:
        title: Total challenges
        type: string
        readOnly: true
      program_description:
        title: Program description
        type: string
        readOnly: true
      completed_challenges_count:
        title: Completed challenges count
        type: string
        readOnly: true
      program_type:
        title: Program type
        type: string
        minLength: 1
      program_reward_points:
        title: Program reward points
        type: string
        readOnly: true
      program_title:
        title: Program title
        type: string
        readOnly: true
      all_completed_challenges_with_count:
        title: All completed challenges with count
        type: string
        readOnly: true
      program_end_date:
        title: Program end date
        type: string
        format: date
      completed_challenges:
        title: Completed challenges
        type: string
        readOnly: true
      start_date:
        title: Start date
        description: Date when member joined the program. Can be different from start_date
          in Program
        type: string
        format: date
      eligible_challenges:
        title: Eligible challenges
        type: string
        readOnly: true
      program_time_frame:
        title: Program time frame
        type: integer
      time_frame_end:
        title: Time frame end
        type: string
        format: date
      total_quarters:
        title: Total quarters
        type: string
        readOnly: true
      quarter_challenges_detail:
        title: Quarter challenges detail
        type: string
        readOnly: true
      yearly_challenges:
        title: Yearly challenges
        type: string
        readOnly: true
      show_progress:
        title: Show progress
        type: boolean
      program_detail_image:
        title: Program detail image
        type: string
        readOnly: true
        format: uri
  GeneralTypeCategoryList:
    type: object
    properties:
      questionnaire_types:
        title: Questionnaire types
        type: string
        readOnly: true
      question_types:
        title: Question types
        type: string
        readOnly: true
      questionnaire_categories:
        title: Questionnaire categories
        type: string
        readOnly: true
      question_categories:
        title: Question categories
        type: string
        readOnly: true
      dependency_operators:
        title: Dependency operators
        type: string
        readOnly: true
      questionnaire_constants:
        title: Questionnaire constants
        type: string
        readOnly: true
      resources:
        title: Resources
        type: string
        readOnly: true
      question_constants:
        title: Question constants
        type: string
        readOnly: true
      translation_fields:
        title: Translation fields
        type: string
        readOnly: true
  QuestionnaireList:
    required:
    - title
    - questionnaire_type
    - version_start_date
    - publish_start_date
    - identity
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      created_by:
        title: Created by
        type: string
        readOnly: true
      title:
        title: Title
        description: Questionnaire Title
        type: string
        maxLength: 255
        minLength: 1
      questionnaire_type:
        title: Questionnaire type
        description: Type of questionnaire
        type: integer
        enum:
        - 1
        - 2
        - 3
      version_start_date:
        title: Version start date
        type: string
        format: date-time
      publish_start_date:
        title: Publish start date
        type: string
        format: date-time
      status:
        title: Status
        description: Every versionable instance needs to be in some state
        type: integer
        enum:
        - 0
        - 10
        - 20
        - 30
        - 40
        - 50
      identity:
        title: Identity
        type: string
        format: uuid
      publish_version_exists:
        title: Publish version exists
        type: string
        readOnly: true
  QuestionnaireDetail:
    required:
    - title
    - description
    - threshold_value
    - questionnaire_type
    - publish_start_date
    - publish_end_date
    - version_start_date
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      title:
        title: Title
        description: Questionnaire Title
        type: string
        maxLength: 255
        minLength: 1
      identity:
        title: Identity
        type: string
        format: uuid
        readOnly: true
      description:
        title: Description
        description: Questionnaire description
        type: string
        minLength: 1
      user_instructions:
        title: User instructions
        type: string
        minLength: 1
      threshold_value:
        title: Threshold value
        description: Min score required for this questionnaire
        type: string
        maxLength: 150
      can_edit:
        title: Can edit
        type: string
        readOnly: true
      status:
        title: Status
        description: Every versionable instance needs to be in some state
        type: integer
        enum:
        - 0
        - 10
        - 20
        - 30
        - 40
        - 50
      questionnaire_type:
        title: Questionnaire type
        description: Type of questionnaire
        type: integer
        enum:
        - 1
        - 2
        - 3
      publish_start_date:
        title: Publish start date
        type: string
        format: date-time
      publish_end_date:
        title: Publish end date
        type: string
        format: date-time
      challenge:
        title: Challenge
        type: string
        readOnly: true
      questions:
        title: Questions
        type: string
        readOnly: true
      category:
        title: Category
        type: string
        readOnly: true
      max_questions_per_page:
        title: Max questions per page
        description: Maximum number of question that can be visible in a single page
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      linked_sections:
        title: Linked sections
        type: string
        readOnly: true
      version_start_date:
        title: Version start date
        type: string
        format: date-time
      created_by:
        title: Created by
        type: string
        readOnly: true
      user_instructions_es:
        title: User instructions es
        type: string
        minLength: 1
      displayed_on_health_assessments:
        title: Displayed on health assessments
        description: Will it be visible on health assesments page
        type: boolean
      depend_on:
        title: Depend on
        type: string
        readOnly: true
      dependent_questionnaire:
        title: Dependent questionnaire
        type: string
        readOnly: true
      is_pre_filled:
        title: Is pre filled
        description: Pre fill with previous answers
        type: boolean
  QuestionnaireDraftPublish:
    type: object
    properties: {}
  QuestionnaireEdit:
    required:
    - title
    - description
    - questionnaire_type
    - status
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      title:
        title: Title
        description: Questionnaire Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        description: Questionnaire description
        type: string
        minLength: 1
      questionnaire_type:
        title: Questionnaire type
        description: Type of questionnaire
        type: integer
        enum:
        - 1
        - 2
        - 3
      publish_start_date:
        title: Publish start date
        type: string
        format: date-time
        x-nullable: true
      identity:
        title: Identity
        type: string
        format: uuid
        readOnly: true
      publish_end_date:
        title: Publish end date
        type: string
        format: date-time
        readOnly: true
      user_instructions:
        title: User instructions
        type: string
      threshold_value:
        title: Threshold value
        description: Min score required for this questionnaire
        type: string
        maxLength: 150
      status:
        title: Status
        description: Every versionable instance needs to be in some state
        type: integer
        enum:
        - 0
        - 10
        - 20
        - 30
        - 40
        - 50
      category:
        type: array
        items:
          type: integer
        default: []
        uniqueItems: true
      max_questions_per_page:
        title: Max questions per page
        description: Maximum number of question that can be visible in a single page
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      displayed_on_health_assessments:
        title: Displayed on health assessments
        description: Will it be visible on health assesments page
        type: boolean
      depend_on:
        title: Depend on
        description: Depend On assessment identity
        type: string
        format: uuid
        x-nullable: true
      is_pre_filled:
        title: Is pre filled
        description: Pre fill with previous answers
        type: boolean
      user_instructions_es:
        title: User instructions es
        type: string
  Section:
    title: Section
    type: object
    properties:
      title:
        title: Title
        description: Stores the title of the section.
        type: string
        maxLength: 255
      description:
        title: Description
        description: Stores the description of the section.
        type: string
      id:
        title: ID
        type: integer
        readOnly: true
      title_es:
        title: Title es
        type: string
      description_es:
        title: Description es
        type: string
  QuestionnaireSection:
    title: Section
    required:
    - section
    type: object
    properties:
      section:
        "$ref": "#/definitions/Section"
      priority:
        title: Priority
        description: Priority of the section in a questionnaire. Displayed in increasing
          order of priority.
        type: integer
        maximum: 65535
        minimum: 0
  QuestionSection:
    required:
    - unique_id
    type: object
    properties:
      section:
        "$ref": "#/definitions/QuestionnaireSection"
      unique_id:
        title: Unique id
        type: string
        format: uuid
      min_value:
        title: Min value
        type: integer
      max_value:
        title: Max value
        type: integer
      is_optional:
        title: Is optional
        type: boolean
  QuestionnaireQuestionOrderingSectionAndDeletion:
    required:
    - initial_questions
    type: object
    properties:
      questions:
        type: array
        items:
          "$ref": "#/definitions/QuestionSection"
        default: []
      id:
        title: ID
        type: integer
        readOnly: true
      status:
        title: Status
        description: Every versionable instance needs to be in some state
        type: integer
        enum:
        - 0
        - 10
        - 20
        - 30
        - 40
        - 50
        readOnly: true
      published_questions:
        title: Published questions
        type: string
        readOnly: true
      initial_questions:
        type: array
        items:
          type: integer
        uniqueItems: true
      linked_sections:
        type: array
        items:
          "$ref": "#/definitions/Section"
        default: []
      identity:
        title: Identity
        type: string
        format: uuid
        readOnly: true
  QuestionnaireQuestionOrderingAndDeletion:
    required:
    - questions
    - initial_questions
    type: object
    properties:
      questions:
        type: array
        items:
          type: integer
        uniqueItems: true
      id:
        title: ID
        type: integer
        readOnly: true
      status:
        title: Status
        description: Every versionable instance needs to be in some state
        type: integer
        enum:
        - 0
        - 10
        - 20
        - 30
        - 40
        - 50
        readOnly: true
      published_questions:
        title: Published questions
        type: string
        readOnly: true
      initial_questions:
        type: array
        items:
          type: integer
        uniqueItems: true
  QuestionAnswerDependencySerialier:
    required:
    - id
    - dependent_answer
    type: object
    properties:
      id:
        title: Id
        type: integer
      dependent_answer:
        title: Dependent answer
        type: integer
  QuestionnaireQuestionDependencyUpdate:
    required:
    - dependent_question
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      status:
        title: Status
        description: Every versionable instance needs to be in some state
        type: integer
        enum:
        - 0
        - 10
        - 20
        - 30
        - 40
        - 50
        readOnly: true
      dependent_question:
        title: Dependent question
        type: integer
      subsisting_questions:
        type: array
        items:
          "$ref": "#/definitions/QuestionAnswerDependencySerialier"
        default: []
      dependency_info:
        title: Dependency info
        type: string
        readOnly: true
      dependent_operator:
        title: Dependent operator
        type: string
        enum:
        - 1
        - 2
      dependent_operator_response:
        title: Dependent operator response
        type: string
        readOnly: true
      identity:
        title: Identity
        type: string
        format: uuid
        readOnly: true
  QuestionnaireQuestionAnswer:
    required:
    - title
    - description
    - user_instructions
    - threshold_value
    type: object
    properties:
      title:
        title: Title
        description: Questionnaire Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        description: Questionnaire description
        type: string
        minLength: 1
      user_instructions:
        title: User instructions
        type: string
        minLength: 1
      threshold_value:
        title: Threshold value
        description: Min score required for this questionnaire
        type: string
        maxLength: 150
      identity:
        title: Identity
        type: string
        format: uuid
        readOnly: true
      questions:
        title: Questions
        type: string
        readOnly: true
      id:
        title: ID
        type: integer
        readOnly: true
      max_questions_per_page:
        title: Max questions per page
        description: Maximum number of question that can be visible in a single page
        type: integer
        maximum: 65535
        minimum: 0
        x-nullable: true
      linked_sections:
        title: Linked sections
        type: string
        readOnly: true
      sections_applied:
        title: Sections applied
        type: string
        readOnly: true
      is_pre_filled:
        title: Is pre filled
        description: Pre fill with previous answers
        type: boolean
      has_result_content:
        title: Has result content
        type: string
        readOnly: true
      start_button_text:
        title: Start button text
        type: string
        readOnly: true
      exclude_questionnaire:
        title: Exclude questionnaire
        type: string
        readOnly: true
  QuestionnaireResult:
    type: object
    properties:
      question_text:
        title: Question text
        description: Question text
        type: string
        readOnly: true
        minLength: 1
      answers:
        title: Answers
        type: string
        readOnly: true
      correctly_responded:
        title: Correctly responded
        type: string
        readOnly: true
      has_correct_answer:
        title: Has correct answer
        description: Denotes whether this question has correct answer(s).
        type: boolean
        readOnly: true
  Rule:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        description: Name of the rule
        type: string
        maxLength: 255
        minLength: 1
      unique_id:
        title: Unique id
        type: string
        format: uuid
  Resource:
    required:
    - title
    - summary
    - text
    - button_text
    - order
    - title_raw
    - button_text_raw
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      category:
        title: Category
        description: The category that the resource belongs to
        type: integer
        x-nullable: true
      title:
        title: Title
        description: The title of the resource
        type: string
        maxLength: 74
        minLength: 1
      summary:
        title: Summary
        description: The summary text to be displayed in the list of resources
        type: string
        maxLength: 180
        minLength: 1
      image:
        title: Image
        description: The image to be displayed in the resource's header
        type: string
        readOnly: true
        format: uri
      text:
        title: Text
        description: The resource's text body
        type: string
        minLength: 1
      image_body:
        title: Image body
        description: The image to be displayed in the body of the resource
        type: string
        readOnly: true
        format: uri
      bottom_text:
        title: Bottom text
        description: The text that follows the image_body on the Resource Details
          screen
        type: string
      button_text:
        title: Button text
        description: The text on the resource's button
        type: string
        maxLength: 30
        minLength: 1
      button_url:
        title: Button url
        type: string
        readOnly: true
      is_internal_url:
        title: Is internal url
        type: string
        readOnly: true
      order:
        title: Order
        description: The order that the resource should be displayed (low to high)
        type: integer
        maximum: 65535
        minimum: 0
      zipcode_list:
        title: Zipcode list
        description: |
          Store zipcodes where this Resource will be available.
                  Zipcodes should be stored as : [78701, 78705, 110120121]
        type: string
      city_list:
        title: City list
        description: |
          Store cities where this Resource will be available.
                  Cities should be stored as : ["houston", "austin"]
        type: string
      state_list:
        title: State list
        description: Select States that will have Access to this resource
        type: string
        enum:
        - AL
        - AK
        - AZ
        - AR
        - CA
        - CO
        - CT
        - DC
        - DE
        - FL
        - GA
        - HI
        - ID
        - IL
        - IN
        - IA
        - KS
        - KY
        - LA
        - ME
        - MD
        - MA
        - MI
        - MN
        - MS
        - MO
        - MT
        - NE
        - NV
        - NH
        - NJ
        - NM
        - NY
        - NC
        - ND
        - OH
        - OK
        - OR
        - PA
        - RI
        - SC
        - SD
        - TN
        - TX
        - UT
        - VT
        - VA
        - WA
        - WV
        - WI
        - WY
      title_raw:
        title: Title raw
        type: string
        minLength: 1
      phone_number:
        title: Phone number
        description: Phone number for further detail of article
        type: string
        maxLength: 20
      phone_number_text:
        title: Phone number text
        description: The text on the phone number button
        type: string
        maxLength: 50
      extra_info:
        title: Extra info
        description: |
          Store any extra information for the Resource, including additional redirection urls
                  urls to be stored as : {"button_urls": {"iOS": {"url": "https://abc.com", "open_external_browser": True}, "Android": {"https://xyz.com"}}}
        type: string
      open_external_browser:
        title: Open external browser
        description: True to Open the button_url in external browser, False to open
          in in-app browser
        type: boolean
      button_text_raw:
        title: Button text raw
        type: string
        minLength: 1
  Category:
    required:
    - title
    - order
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      title:
        title: Title
        description: Title of the resource category
        type: string
        maxLength: 74
        minLength: 1
      summary:
        title: Summary
        description: The summary text to be displayed in the list of categories
        type: string
        maxLength: 180
      image:
        title: Image
        description: The image to be displayed on the resource category's card
        type: string
        readOnly: true
        format: uri
      order:
        title: Order
        description: The order that the category should be displayed (low to high)
        type: integer
        maximum: 65535
        minimum: 0
  InlineHelpItem:
    required:
    - element_id
    - content
    - position
    type: object
    properties:
      element_id:
        title: Element id
        type: string
        maxLength: 50
        minLength: 1
      content:
        title: Content
        type: string
        minLength: 1
      position:
        title: Position
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
  KnowledgeCenterSearch:
    required:
    - search
    type: object
    properties:
      search:
        title: Search
        type: string
        minLength: 1
      articles:
        title: Articles
        type: string
        readOnly: true
  KnowledgeCenterCategory:
    type: object
    properties:
      categories:
        title: Categories
        type: string
        readOnly: true
  KnowledgeCenterSection:
    required:
    - category
    type: object
    properties:
      category:
        title: Category
        type: integer
      parent_section:
        title: Parent section
        type: integer
        x-nullable: true
      sections:
        title: Sections
        type: string
        readOnly: true
  KnowledgeCenterArticleAttachment:
    required:
    - article_id
    type: object
    properties:
      article_id:
        title: Article id
        description: Article ID whose attachments are to be fetched
        type: integer
      attachments:
        title: Attachments
        description: Serialized data of attachments
        type: string
        readOnly: true
  KnowledgeCenterArticle:
    required:
    - section
    type: object
    properties:
      section:
        title: Section
        type: integer
      articles:
        title: Articles
        type: string
        readOnly: true
  SupportSchedules:
    type: object
    properties:
      schedules:
        title: Schedules
        type: string
        readOnly: true
  SupportCalendarCheck:
    required:
    - calendar_date
    type: object
    properties:
      calendar_date:
        title: Calendar date
        type: string
        format: date
      events:
        title: Events
        type: string
        readOnly: true
  GetTeladocCredentials:
    required:
    - teladoc_user_name
    - teladoc_user_password
    type: object
    properties:
      teladoc_user_name:
        title: Teladoc user name
        type: string
        minLength: 1
      teladoc_user_password:
        title: Teladoc user password
        type: string
        minLength: 1
  Consultation:
    required:
    - member
    - pharmacy
    - phone
    type: object
    properties:
      member:
        title: Member
        type: integer
      pharmacy:
        title: Pharmacy
        type: integer
      phone:
        title: Phone
        type: string
        maxLength: 15
        minLength: 7
      member_telemedicine_id:
        title: Member telemedicine id
        type: integer
      status:
        title: Status
        type: object
        additionalProperties:
          type: string
        readOnly: true
  TelaDocPrerequisites:
    type: object
    properties:
      completed_health_history_quiz:
        title: Completed health history quiz
        type: string
        readOnly: true
      completed_teladoc_quiz:
        title: Completed teladoc quiz
        type: string
        readOnly: true
      teladoc_id:
        title: Teladoc id
        type: string
        readOnly: true
      is_mhd_updated:
        title: Is mhd updated
        type: string
        readOnly: true
      have_favourite_pharmacy:
        title: Have favourite pharmacy
        type: string
        readOnly: true
      charge_for_consultation:
        title: Charge for consultation
        type: string
        readOnly: true
      member_insurance_id:
        title: Member insurance id
        type: string
        readOnly: true
      show_insurance_id_field:
        title: Show insurance id field
        type: string
        readOnly: true
      is_registered_on_teladoc:
        title: Is registered on teladoc
        type: string
        readOnly: true
      teladoc_terms_accepted:
        title: Teladoc terms accepted
        type: string
        readOnly: true
  TelaDocQuiz:
    type: object
    properties:
      quiz_data:
        title: Quiz data
        type: string
        readOnly: true
      completed:
        title: Completed
        type: string
        readOnly: true
      is_challenge_eligible:
        title: Is challenge eligible
        type: string
        readOnly: true
      pre_fill_answers:
        title: Pre fill answers
        type: string
        readOnly: true
      survey_description:
        title: Survey description
        type: string
        readOnly: true
      has_unique_question_ids:
        title: Has unique question ids
        type: string
        readOnly: true
      sort_by:
        title: Sort by
        type: string
        readOnly: true
      redirect_question_list:
        title: Redirect question list
        type: string
        readOnly: true
      survey_footer_text:
        title: Survey footer text
        type: string
        readOnly: true
  TeladocTerms:
    type: object
    properties:
      teladoc_tc_ip:
        title: Teladoc tc ip
        type: string
        readOnly: true
        minLength: 1
      teladoc_tc_timestamp:
        title: Teladoc tc timestamp
        type: string
        format: date-time
        readOnly: true
  Attachment:
    required:
    - consultation
    type: object
    properties:
      consultation:
        title: Consultation
        type: integer
      description:
        title: Description
        type: string
        x-nullable: true
      image:
        title: Image
        type: string
        readOnly: true
        format: uri
